{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_linkKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_linkFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfLinkTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "ERC20CurrencyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "ERC20CurrencyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "raffleOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20RaffleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "raffleOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "ERC721RaffleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NewERC20RaffleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftCollection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "NewERC721RaffleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Raffle.RaffleState",
          "name": "oldRaffleState",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Raffle.RaffleState",
          "name": "newRaffleState",
          "type": "uint8"
        }
      ],
      "name": "RaffleStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_NUMERATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20TokenAddress",
          "type": "address"
        }
      ],
      "name": "blacklistCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_numberOfTickets",
          "type": "uint128"
        }
      ],
      "name": "buyRaffleTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_numberOfTickets",
          "type": "uint128"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "buyWhitelistedRaffleTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        }
      ],
      "name": "cancelRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ticketIds",
          "type": "uint256[]"
        }
      ],
      "name": "claimCancelledRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        }
      ],
      "name": "claimRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        }
      ],
      "name": "completeRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerTicket",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_numberOfTickets",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_minimumTicketsSold",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_durationInSeconds",
          "type": "uint128"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "createERC20Raffle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftCollection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerTicket",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_numberOfTickets",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_minimumTicketsSold",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_durationInSeconds",
          "type": "uint128"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "createERC721Raffle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "fulfillRandomnessTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveRaffles",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "raffleOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "raffleWinner",
              "type": "address"
            },
            {
              "internalType": "enum Raffle.RaffleState",
              "name": "raffleState",
              "type": "uint8"
            },
            {
              "internalType": "enum Raffle.RaffleType",
              "name": "raffleType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "nftIdOrAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pricePerTicket",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "MerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "numberOfTickets",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "ticketsSold",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "minimumTicketsSold",
              "type": "uint128"
            }
          ],
          "internalType": "struct Raffle.RaffleData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        }
      ],
      "name": "getRaffleDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "raffleOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "raffleWinner",
              "type": "address"
            },
            {
              "internalType": "enum Raffle.RaffleState",
              "name": "raffleState",
              "type": "uint8"
            },
            {
              "internalType": "enum Raffle.RaffleType",
              "name": "raffleType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "nftIdOrAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pricePerTicket",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "MerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "numberOfTickets",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "ticketsSold",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "minimumTicketsSold",
              "type": "uint128"
            }
          ],
          "internalType": "struct Raffle.RaffleData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        }
      ],
      "name": "getRaffleState",
      "outputs": [
        {
          "internalType": "enum Raffle.RaffleState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketId",
          "type": "uint256"
        }
      ],
      "name": "getRaffleTicketOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        }
      ],
      "name": "isCurrencyWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "raffleCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "raffleTickets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "raffles",
      "outputs": [
        {
          "internalType": "address",
          "name": "assetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "raffleOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "raffleWinner",
          "type": "address"
        },
        {
          "internalType": "enum Raffle.RaffleState",
          "name": "raffleState",
          "type": "uint8"
        },
        {
          "internalType": "enum Raffle.RaffleType",
          "name": "raffleType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nftIdOrAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerTicket",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "MerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint128",
          "name": "endTimestamp",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "numberOfTickets",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "ticketsSold",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "minimumTicketsSold",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalAmountClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20TokenAddress",
          "type": "address"
        }
      ],
      "name": "whitelistCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokenAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/access/Ownable.sol",
    "1": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/Pausable.sol",
    "11": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
    "12": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
    "14": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/cryptography/MerkleProof.sol",
    "16": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/IERC165.sol",
    "17": "/home/ctrlc3/.brownie/packages/smartcontractkit/chainlink@1.1.0/contracts/src/v0.8/VRFConsumerBase.sol",
    "18": "/home/ctrlc3/.brownie/packages/smartcontractkit/chainlink@1.1.0/contracts/src/v0.8/VRFRequestIDBase.sol",
    "2": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
    "20": "contracts/Raffle.sol",
    "22": "contracts/interfaces/IWETH.sol",
    "4": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
    "5": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/Raffle.sol",
    "exportedSymbols": {
      "Address": [
        5127
      ],
      "Context": [
        4831
      ],
      "IERC165": [
        5139
      ],
      "IERC20": [
        2954
      ],
      "IERC721": [
        3294
      ],
      "IWETH": [
        2570
      ],
      "LinkTokenInterface": [
        5284
      ],
      "MerkleProof": [
        3365
      ],
      "Ownable": [
        2744
      ],
      "Pausable": [
        2836
      ],
      "Raffle": [
        1986
      ],
      "ReentrancyGuard": [
        2876
      ],
      "SafeERC20": [
        3178
      ],
      "VRFConsumerBase": [
        3486
      ],
      "VRFRequestIDBase": [
        5189
      ]
    },
    "id": 1987,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:20"
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 2745,
        "src": "57:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 2837,
        "src": "110:55:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 3295,
        "src": "166:58:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 2955,
        "src": "225:56:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 3179,
        "src": "282:65:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/smartcontractkit/chainlink@1.1.0/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 3487,
        "src": "348:59:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 2877,
        "src": "408:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ctrlc3/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 3366,
        "src": "471:68:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IWETH.sol",
        "file": "./interfaces/IWETH.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1987,
        "sourceUnit": 2571,
        "src": "540:45:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2570,
              "src": "548:5:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2744,
              "src": "606:7:20"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "606:7:20"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2836,
              "src": "615:8:20"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "615:8:20"
          },
          {
            "baseName": {
              "id": 16,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2876,
              "src": "625:15:20"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "625:15:20"
          },
          {
            "baseName": {
              "id": 18,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3486,
              "src": "642:15:20"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "642:15:20"
          }
        ],
        "canonicalName": "Raffle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1986,
        "linearizedBaseContracts": [
          1986,
          3486,
          5189,
          2876,
          2836,
          2744,
          4831
        ],
        "name": "Raffle",
        "nameLocation": "596:6:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 23,
            "libraryName": {
              "id": 20,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3178,
              "src": "670:9:20"
            },
            "nodeType": "UsingForDirective",
            "src": "664:27:20",
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2954,
                "src": "684:6:20"
              },
              "referencedDeclaration": 2954,
              "src": "684:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2954",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "Raffle.RaffleState",
            "id": 29,
            "members": [
              {
                "id": 24,
                "name": "IN_PROGRESS",
                "nameLocation": "724:11:20",
                "nodeType": "EnumValue",
                "src": "724:11:20"
              },
              {
                "id": 25,
                "name": "FINISHED",
                "nameLocation": "745:8:20",
                "nodeType": "EnumValue",
                "src": "745:8:20"
              },
              {
                "id": 26,
                "name": "COMPLETED",
                "nameLocation": "763:9:20",
                "nodeType": "EnumValue",
                "src": "763:9:20"
              },
              {
                "id": 27,
                "name": "REFUNDED",
                "nameLocation": "782:8:20",
                "nodeType": "EnumValue",
                "src": "782:8:20"
              },
              {
                "id": 28,
                "name": "CLAIMED",
                "nameLocation": "800:7:20",
                "nodeType": "EnumValue",
                "src": "800:7:20"
              }
            ],
            "name": "RaffleState",
            "nameLocation": "702:11:20",
            "nodeType": "EnumDefinition",
            "src": "697:116:20"
          },
          {
            "canonicalName": "Raffle.RaffleType",
            "id": 32,
            "members": [
              {
                "id": 30,
                "name": "ERC721",
                "nameLocation": "845:6:20",
                "nodeType": "EnumValue",
                "src": "845:6:20"
              },
              {
                "id": 31,
                "name": "ERC20",
                "nameLocation": "861:5:20",
                "nodeType": "EnumValue",
                "src": "861:5:20"
              }
            ],
            "name": "RaffleType",
            "nameLocation": "824:10:20",
            "nodeType": "EnumDefinition",
            "src": "819:53:20"
          },
          {
            "canonicalName": "Raffle.RaffleData",
            "id": 61,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "assetContract",
                "nameLocation": "914:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "906:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "906:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "raffleOwner",
                "nameLocation": "945:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "937:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 35,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "937:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "raffleWinner",
                "nameLocation": "974:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "966:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "966:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "raffleState",
                "nameLocation": "1008:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "996:23:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RaffleState_$29",
                  "typeString": "enum Raffle.RaffleState"
                },
                "typeName": {
                  "id": 40,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 39,
                    "name": "RaffleState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29,
                    "src": "996:11:20"
                  },
                  "referencedDeclaration": 29,
                  "src": "996:11:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$29",
                    "typeString": "enum Raffle.RaffleState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "raffleType",
                "nameLocation": "1040:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1029:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RaffleType_$32",
                  "typeString": "enum Raffle.RaffleType"
                },
                "typeName": {
                  "id": 43,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 42,
                    "name": "RaffleType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 32,
                    "src": "1029:10:20"
                  },
                  "referencedDeclaration": 32,
                  "src": "1029:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleType_$32",
                    "typeString": "enum Raffle.RaffleType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "nftIdOrAmount",
                "nameLocation": "1068:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1060:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1060:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "currency",
                "nameLocation": "1099:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1091:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 47,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1091:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "pricePerTicket",
                "nameLocation": "1125:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1117:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1117:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "MerkleRoot",
                "nameLocation": "1157:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1149:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 51,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1149:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1185:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1177:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "numberOfTickets",
                "nameLocation": "1215:15:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1207:23:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 55,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1207:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "ticketsSold",
                "nameLocation": "1248:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1240:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1240:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "minimumTicketsSold",
                "nameLocation": "1277:18:20",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1269:26:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1269:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RaffleData",
            "nameLocation": "885:10:20",
            "nodeType": "StructDefinition",
            "scope": 1986,
            "src": "878:424:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "436cc138",
            "id": 65,
            "mutability": "mutable",
            "name": "whitelistedCurrencies",
            "nameLocation": "1379:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1347:53:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1355:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1347:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 63,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1366:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d4bc0ce",
            "id": 70,
            "mutability": "mutable",
            "name": "raffles",
            "nameLocation": "1474:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1436:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
              "typeString": "mapping(uint256 => struct Raffle.RaffleData)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 66,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1444:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1436:30:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                "typeString": "mapping(uint256 => struct Raffle.RaffleData)"
              },
              "valueType": {
                "id": 68,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 67,
                  "name": "RaffleData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "1455:10:20"
                },
                "referencedDeclaration": 61,
                "src": "1455:10:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                  "typeString": "struct Raffle.RaffleData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a1ec473",
            "id": 76,
            "mutability": "mutable",
            "name": "raffleTickets",
            "nameLocation": "1585:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1530:68:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1538:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1530:47:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 74,
                "keyType": {
                  "id": 72,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1557:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1549:27:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1568:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 80,
            "mutability": "mutable",
            "name": "chainlinkRequestToRaffleID",
            "nameLocation": "1676:26:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1640:62:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 77,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1648:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1640:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 78,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1659:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c2f306a5",
            "id": 82,
            "mutability": "mutable",
            "name": "raffleCounter",
            "nameLocation": "1764:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1749:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1749:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "82c7317d",
            "id": 84,
            "mutability": "immutable",
            "name": "linkKeyHash",
            "nameLocation": "1850:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1825:36:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 83,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1825:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01889611",
            "id": 86,
            "mutability": "immutable",
            "name": "linkFee",
            "nameLocation": "1892:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1867:32:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 92,
            "mutability": "constant",
            "name": "WETH",
            "nameLocation": "1921:4:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1906:71:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$2570",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 88,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2570,
                "src": "1906:5:20"
              },
              "referencedDeclaration": 2570,
              "src": "1906:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$2570",
                "typeString": "contract IWETH"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 90,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1934:42:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 89,
                "name": "IWETH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2570,
                "src": "1928:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IWETH_$2570_$",
                  "typeString": "type(contract IWETH)"
                }
              },
              "id": 91,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1928:49:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$2570",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 95,
            "mutability": "constant",
            "name": "REFUND_COLLATERAL_FEE",
            "nameLocation": "2000:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "1983:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1983:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 94,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2024:9:20",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "41cd47bf",
            "id": 98,
            "mutability": "mutable",
            "name": "FEE_NUMERATOR",
            "nameLocation": "2069:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "2054:34:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 96,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2054:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323030",
              "id": 97,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2085:3:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200_by_1",
                "typeString": "int_const 200"
              },
              "value": "200"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d73792a9",
            "id": 101,
            "mutability": "mutable",
            "name": "FEE_DENOMINATOR",
            "nameLocation": "2109:15:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "2094:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2094:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 100,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2127:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "2138:123:20",
              "text": "Token address => Amount that owners of the contract can claim as fee rewards\naddress(0) = Ether"
            },
            "functionSelector": "a21afc76",
            "id": 106,
            "mutability": "mutable",
            "name": "totalAmountClaimable",
            "nameLocation": "2301:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 1986,
            "src": "2266:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2274:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2266:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 104,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2285:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "1f1a5174455810457e3ca7cb27252db8d09030fad07eec86404c4dfeeeeadf87",
            "id": 114,
            "name": "NewERC721RaffleCreated",
            "nameLocation": "2334:22:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "2365:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2357:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftCollection",
                  "nameLocation": "2383:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2375:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2406:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2398:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:56:20"
            },
            "src": "2328:85:20"
          },
          {
            "anonymous": false,
            "eventSelector": "db1511a41a743840c03ce4a0850a49d2e916b3e8f06a42074bae224f0bce7919",
            "id": 122,
            "name": "NewERC20RaffleCreated",
            "nameLocation": "2424:21:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "2454:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2446:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2472:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2464:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2464:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2494:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2486:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:56:20"
            },
            "src": "2418:84:20"
          },
          {
            "anonymous": false,
            "eventSelector": "58a2fe6e4623d780cd314a4c44e0353006d6bc7e941965a2c2a1a51b8d416382",
            "id": 132,
            "name": "ERC721RaffleCancelled",
            "nameLocation": "2513:21:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "2543:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2535:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleOwner",
                  "nameLocation": "2561:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2553:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "2582:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2574:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2603:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2595:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2534:75:20"
            },
            "src": "2507:103:20"
          },
          {
            "anonymous": false,
            "eventSelector": "987f49fc5df600848382b03d43a2da53d161076cb739525cfa82137ef7878c21",
            "id": 142,
            "name": "ERC20RaffleCancelled",
            "nameLocation": "2621:20:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "2650:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2642:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleOwner",
                  "nameLocation": "2668:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2660:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assetContract",
                  "nameLocation": "2689:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2681:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2712:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2704:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2641:78:20"
            },
            "src": "2615:105:20"
          },
          {
            "anonymous": false,
            "eventSelector": "5c6cf68a9d7e416d0eee740661627dd794257920f1c63ddae6c6af81d02d12ea",
            "id": 146,
            "name": "ERC20CurrencyAdded",
            "nameLocation": "2731:18:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "2758:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2750:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2749:18:20"
            },
            "src": "2725:43:20"
          },
          {
            "anonymous": false,
            "eventSelector": "0dc0548bc90523a9e943ea77d199875fdc1e4f8a419b6d53a595b5e6671480e5",
            "id": 150,
            "name": "ERC20CurrencyRemoved",
            "nameLocation": "2779:20:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "2808:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2800:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:18:20"
            },
            "src": "2773:45:20"
          },
          {
            "anonymous": false,
            "eventSelector": "98f4d55a8071907ab4e28727c006f2a8a315cd8c01e117f04430d9587875ad3d",
            "id": 160,
            "name": "RaffleStateChanged",
            "nameLocation": "2829:18:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "2856:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2848:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldRaffleState",
                  "nameLocation": "2878:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2866:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$29",
                    "typeString": "enum Raffle.RaffleState"
                  },
                  "typeName": {
                    "id": 154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153,
                      "name": "RaffleState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29,
                      "src": "2866:11:20"
                    },
                    "referencedDeclaration": 29,
                    "src": "2866:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRaffleState",
                  "nameLocation": "2906:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2894:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$29",
                    "typeString": "enum Raffle.RaffleState"
                  },
                  "typeName": {
                    "id": 157,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 156,
                      "name": "RaffleState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29,
                      "src": "2894:11:20"
                    },
                    "referencedDeclaration": 29,
                    "src": "2894:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:74:20"
            },
            "src": "2823:99:20"
          },
          {
            "anonymous": false,
            "eventSelector": "0830daf1b0e427c4692464a26bdcb77252bc16b9bab2254964095367edf6430f",
            "id": 164,
            "name": "ChainlinkRequest",
            "nameLocation": "2933:16:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2958:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2950:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2949:19:20"
            },
            "src": "2927:42:20"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "3137:193:20",
              "statements": [
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 179,
                      "name": "linkKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "3147:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 180,
                      "name": "_linkKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3161:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3147:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:26:20"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 183,
                      "name": "linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3183:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 184,
                      "name": "_linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "3193:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3183:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:18:20"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 187,
                        "name": "whitelistedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3283:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 192,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3313:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3305:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3305:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3305:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3283:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3319:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3283:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:40:20"
                }
              ]
            },
            "id": 197,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 175,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "3098:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 176,
                    "name": "_vrfLinkTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 172,
                    "src": "3115:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 177,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 174,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3486,
                  "src": "3082:15:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "3082:54:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "_linkKeyHash",
                  "nameLocation": "2995:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2987:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_linkFee",
                  "nameLocation": "3017:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3009:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "3035:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3027:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_vrfLinkTokenAddress",
                  "nameLocation": "3060:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3052:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:95:20"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:0:20"
            },
            "scope": 1986,
            "src": "2975:355:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "4606:1436:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 220,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4624:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4624:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 226,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4670:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 223,
                                  "name": "_nftCollection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 200,
                                  "src": "4646:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 222,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3294,
                                "src": "4638:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3294_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4638:23:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3294",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3227,
                            "src": "4638:31:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4638:39:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4624:53:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973204e4654",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4679:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        },
                        "value": "You do not own this NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4616:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4616:89:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:89:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 233,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "4723:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 235,
                        "indexExpression": {
                          "id": 234,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4745:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4723:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732063757272656e6379206973206e6f742077686974656c6973746564",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4757:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                          "typeString": "literal_string \"This currency is not whitelisted\""
                        },
                        "value": "This currency is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                          "typeString": "literal_string \"This currency is not whitelisted\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4715:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 240,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4810:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4829:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4810:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c6573206d7573742068617665206174206c656173742032207469636b657473",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4832:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                          "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                        },
                        "value": "Raffles must have at least 2 tickets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                          "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4802:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4802:69:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 247,
                          "name": "_durationInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "4889:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33363030",
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4911:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "3600"
                        },
                        "src": "4889:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d756d206475726174696f6e206973203120686f7572",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4917:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bb3b21c36386158f5d4406c8340cc870e308f66115b2517540fc229d930717f",
                          "typeString": "literal_string \"Minimum duration is 1 hour\""
                        },
                        "value": "Minimum duration is 1 hour"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bb3b21c36386158f5d4406c8340cc870e308f66115b2517540fc229d930717f",
                          "typeString": "literal_string \"Minimum duration is 1 hour\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4881:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4881:65:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "4881:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 254,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5088:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5088:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 256,
                                "name": "_minimumTicketsSold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "5102:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 257,
                                "name": "REFUND_COLLATERAL_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "5124:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5102:43:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 259,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5101:45:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5088:58:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420636f6c6c61746572616c2073656e74",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5148:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94b9e66d16b838d8dd6208ff2b04c3d6f33876642d1f4b3ffdafaa56458f2653",
                          "typeString": "literal_string \"Incorrect collateral sent\""
                        },
                        "value": "Incorrect collateral sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94b9e66d16b838d8dd6208ff2b04c3d6f33876642d1f4b3ffdafaa56458f2653",
                          "typeString": "literal_string \"Incorrect collateral sent\""
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5080:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:96:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:96:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5273:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5273:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 272,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5293:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Raffle_$1986",
                              "typeString": "contract Raffle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Raffle_$1986",
                              "typeString": "contract Raffle"
                            }
                          ],
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5285:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5285:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5285:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 274,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "5300:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "_nftCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "5244:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 264,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3294,
                          "src": "5236:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$3294_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5236:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$3294",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3247,
                      "src": "5236:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5236:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "5236:71:20"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "5337:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "5318:29:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 278,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 277,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "5318:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "5318:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "baseExpression": {
                      "id": 280,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "5350:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 283,
                    "indexExpression": {
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5358:15:20",
                      "subExpression": {
                        "id": 281,
                        "name": "raffleCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "5358:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5350:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5318:56:20"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 285,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5384:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "5384:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "_nftCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "5411:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5384:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "5384:41:20"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 291,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5435:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "5435:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 294,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5460:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5460:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5435:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "5435:35:20"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 298,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5480:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "5480:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 301,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "5505:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "IN_PROGRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "5505:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "5480:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "5480:48:20"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 305,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5538:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5538:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 308,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5562:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "5562:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "5538:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:41:20"
                },
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 312,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5589:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftIdOrAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "5589:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 315,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "5616:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5589:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "5589:33:20"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 318,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5632:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "5632:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 321,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "5654:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5632:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "5632:31:20"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 324,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5673:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pricePerTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "5673:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 327,
                      "name": "_pricePerTicket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "5701:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5673:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:43:20"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5726:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "MerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "5726:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 333,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "5750:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5726:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "5726:35:20"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 336,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5771:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "5771:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 341,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5805:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5805:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5797:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 339,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "5797:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5797:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 344,
                        "name": "_durationInSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "5824:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "5797:45:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5771:71:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "5771:71:20"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 348,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5852:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfTickets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "5852:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 351,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "5881:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5852:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "5852:45:20"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 354,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5907:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumTicketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "5907:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 357,
                      "name": "_minimumTicketsSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "5939:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5907:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:51:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 361,
                        "name": "raffleCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "5997:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 362,
                        "name": "_nftCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "6012:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 363,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "6028:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 360,
                      "name": "NewERC721RaffleCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "5974:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5974:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "EmitStatement",
                  "src": "5969:66:20"
                }
              ]
            },
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "3336:1018:20",
              "text": " @notice  Allows users to create a raffle of an ERC721 asset\n @param   _nftCollection Address of the NFT to raffle\n @param   _nftId NFTid of the _nftCollection\n @param   _currency Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether\n @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\nreached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\nfor the gas fees. If this amount is reached, normal flow will be followed.\n @param   _durationInSeconds Duration in seconds of the raffle\n @param   _merkleRoot Used so only whitelisted users can buy raffle tickets"
            },
            "functionSelector": "f707c67c",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 216,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "4592:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "4592:13:20"
              }
            ],
            "name": "createERC721Raffle",
            "nameLocation": "4368:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_nftCollection",
                  "nameLocation": "4395:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4387:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4419:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4411:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4435:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4427:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_pricePerTicket",
                  "nameLocation": "4454:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4446:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4446:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_numberOfTickets",
                  "nameLocation": "4479:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4471:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4471:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_minimumTicketsSold",
                  "nameLocation": "4505:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4497:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4497:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_durationInSeconds",
                  "nameLocation": "4534:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4526:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4526:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "4562:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4554:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4554:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4386:188:20"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4606:0:20"
            },
            "scope": 1986,
            "src": "4359:1683:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "7355:1648:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 390,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "7373:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 392,
                        "indexExpression": {
                          "id": 391,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "7395:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7373:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420726166666c6520746869732074797065206f6620746f6b656e7320796574",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7411:43:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a95ad85cea4bd1bdcfaa461e871d1d67f59224baa53d7ec94d9e5f7e6dcf71",
                          "typeString": "literal_string \"You cannot raffle this type of tokens yet\""
                        },
                        "value": "You cannot raffle this type of tokens yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a95ad85cea4bd1bdcfaa461e871d1d67f59224baa53d7ec94d9e5f7e6dcf71",
                          "typeString": "literal_string \"You cannot raffle this type of tokens yet\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7365:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7365:90:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "7365:90:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 397,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "7473:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 399,
                        "indexExpression": {
                          "id": 398,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "7495:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7473:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732063757272656e6379206973206e6f742077686974656c6973746564",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7507:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                          "typeString": "literal_string \"This currency is not whitelisted\""
                        },
                        "value": "This currency is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                          "typeString": "literal_string \"This currency is not whitelisted\""
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7465:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7465:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "7465:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 404,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "7560:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7579:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7560:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c6573206d7573742068617665206174206c656173742032207469636b657473",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7582:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                          "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                        },
                        "value": "Raffles must have at least 2 tickets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                          "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                        }
                      ],
                      "id": 403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7552:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:69:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 411,
                          "name": "_durationInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "7639:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33363030",
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7661:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "3600"
                        },
                        "src": "7639:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d756d206475726174696f6e206973206f6e6520686f7572",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7667:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_339c27c92479fe7e7942cb0c7d75af1b383aa8314f6c136f2903a1f8ad0bf727",
                          "typeString": "literal_string \"Minimum duration is one hour\""
                        },
                        "value": "Minimum duration is one hour"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_339c27c92479fe7e7942cb0c7d75af1b383aa8314f6c136f2903a1f8ad0bf727",
                          "typeString": "literal_string \"Minimum duration is one hour\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7631:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7631:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "7631:67:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 417,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "7717:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7742:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7734:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7734:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7734:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7717:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "7887:383:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 438,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8036:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8036:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 440,
                                      "name": "_minimumTicketsSold",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 380,
                                      "src": "8050:19:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 441,
                                      "name": "REFUND_COLLATERAL_FEE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "8072:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8050:43:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 443,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8049:45:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8036:58:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e636f727265637420636f6c6c61746572616c2073656e74",
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8096:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94b9e66d16b838d8dd6208ff2b04c3d6f33876642d1f4b3ffdafaa56458f2653",
                                "typeString": "literal_string \"Incorrect collateral sent\""
                              },
                              "value": "Incorrect collateral sent"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94b9e66d16b838d8dd6208ff2b04c3d6f33876642d1f4b3ffdafaa56458f2653",
                                "typeString": "literal_string \"Incorrect collateral sent\""
                              }
                            ],
                            "id": 437,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8028:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8028:96:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 447,
                        "nodeType": "ExpressionStatement",
                        "src": "8028:96:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 452,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8224:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8224:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 456,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8244:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8236:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 454,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8236:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8236:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 458,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "8251:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 449,
                                  "name": "_tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "8192:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 448,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "8185:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8185:21:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3011,
                            "src": "8185:38:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8185:74:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 460,
                        "nodeType": "ExpressionStatement",
                        "src": "8185:74:20"
                      }
                    ]
                  },
                  "id": 462,
                  "nodeType": "IfStatement",
                  "src": "7713:557:20",
                  "trueBody": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "7746:135:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 424,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7768:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "7768:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 426,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "7781:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 429,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 427,
                                        "name": "_minimumTicketsSold",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 380,
                                        "src": "7792:19:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 428,
                                        "name": "REFUND_COLLATERAL_FEE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "7814:21:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7792:43:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 430,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7791:45:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7781:55:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7768:68:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652045746865722073656e74206973206e6f7420636f7272656374",
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7838:31:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_898dcd83bd56c58ecb037cbb715a05a9f45759e7389002fa5b0afd0dd8ef4655",
                                "typeString": "literal_string \"The Ether sent is not correct\""
                              },
                              "value": "The Ether sent is not correct"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_898dcd83bd56c58ecb037cbb715a05a9f45759e7389002fa5b0afd0dd8ef4655",
                                "typeString": "literal_string \"The Ether sent is not correct\""
                              }
                            ],
                            "id": 423,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7760:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7760:110:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "7760:110:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "8299:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "8280:29:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 464,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 463,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "8280:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "8280:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "baseExpression": {
                      "id": 466,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "8312:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8320:15:20",
                      "subExpression": {
                        "id": 467,
                        "name": "raffleCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "8320:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8312:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8280:56:20"
                },
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 471,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8346:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "8346:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 474,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "8373:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8346:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "8346:40:20"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 477,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8396:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "8396:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 480,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8421:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8421:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8396:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "8396:35:20"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 484,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8441:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "8441:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "8466:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "IN_PROGRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "8466:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "8441:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "8441:48:20"
                },
                {
                  "expression": {
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 491,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8499:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "8499:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 494,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "8523:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "8523:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "8499:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "8499:40:20"
                },
                {
                  "expression": {
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 498,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8549:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftIdOrAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "8549:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 501,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "8576:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8549:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "8549:34:20"
                },
                {
                  "expression": {
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 504,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8593:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "8593:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 507,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "8615:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8593:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "8593:31:20"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 510,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8634:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pricePerTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "8634:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 513,
                      "name": "_pricePerTicket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "8662:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8634:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "8634:43:20"
                },
                {
                  "expression": {
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 516,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8687:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "MerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "8687:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 519,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "8711:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8687:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "8687:35:20"
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 522,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8732:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "8732:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 527,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8766:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8766:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8758:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 525,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "8758:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8758:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 530,
                        "name": "_durationInSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "8785:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "8758:45:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "8732:71:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "8732:71:20"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 534,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8813:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfTickets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "8813:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 537,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "8842:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "8813:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "8813:45:20"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 540,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8869:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumTicketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "8869:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "_minimumTicketsSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "8901:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "8869:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "8869:51:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "raffleCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "8958:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 548,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "8973:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 549,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "8988:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 546,
                      "name": "NewERC20RaffleCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "8936:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8936:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "EmitStatement",
                  "src": "8931:65:20"
                }
              ]
            },
            "documentation": {
              "id": 368,
              "nodeType": "StructuredDocumentation",
              "src": "6048:1056:20",
              "text": " @notice  Allows users to create a raffle of an ERC20 asset\n @param   _tokenAddress Address of the token amount to raffle\n @param   _amount Quantity of tokens to be raffled\n @param   _currency Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether\n @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\nreached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\nfor the gas fees. If this amount is reached, normal flow will be followed\n @param   _durationInSeconds Duration in seconds of the raffle\n @param   _merkleRoot Used so only whitelisted users can buy raffle tickets"
            },
            "functionSelector": "c4fb83a9",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "7341:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "7341:13:20"
              }
            ],
            "name": "createERC20Raffle",
            "nameLocation": "7118:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "7144:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7136:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7136:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7167:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7159:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7159:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "7184:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7176:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_pricePerTicket",
                  "nameLocation": "7203:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7195:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7195:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_numberOfTickets",
                  "nameLocation": "7228:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7220:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7220:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_minimumTicketsSold",
                  "nameLocation": "7254:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7246:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7246:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_durationInSeconds",
                  "nameLocation": "7283:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7275:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "7311:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7303:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7303:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7135:188:20"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7355:0:20"
            },
            "scope": 1986,
            "src": "7109:1894:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "9229:2089:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 564,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "9247:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 565,
                          "name": "raffleCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "9260:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9247:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c6520646f6573206e6f74206578697374",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9275:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cb40dcc016dba42755bfaa64ce7508517f8d840344b4009ed1a0c40a85bd718",
                          "typeString": "literal_string \"Raffle does not exist\""
                        },
                        "value": "Raffle does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cb40dcc016dba42755bfaa64ce7508517f8d840344b4009ed1a0c40a85bd718",
                          "typeString": "literal_string \"Raffle does not exist\""
                        }
                      ],
                      "id": 563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9239:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9239:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "9239:60:20"
                },
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "9327:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "9309:28:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 570,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "9309:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "9309:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 576,
                  "initialValue": {
                    "baseExpression": {
                      "id": 573,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "9340:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 575,
                    "indexExpression": {
                      "id": 574,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "9348:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9340:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9309:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 578,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9376:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9376:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 580,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "9390:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "9390:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9376:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742063616e63656c20736f6d656f6e6520656c7365277320726166666c65",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9414:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffeffbfc9bb360e98e2c7faff8306641ebfc6bf3e0a2bbcd962bdd97220112fd",
                          "typeString": "literal_string \"You cannot cancel someone else's raffle\""
                        },
                        "value": "You cannot cancel someone else's raffle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffeffbfc9bb360e98e2c7faff8306641ebfc6bf3e0a2bbcd962bdd97220112fd",
                          "typeString": "literal_string \"You cannot cancel someone else's raffle\""
                        }
                      ],
                      "id": 577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9368:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9368:88:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "9368:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 587,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "9474:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "9474:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 589,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "9500:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "9500:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "9474:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652068617320616c726561647920656e646564",
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9525:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        },
                        "value": "This raffle has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        }
                      ],
                      "id": 586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9466:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9466:91:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "9466:91:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 596,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "9575:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ticketsSold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "9575:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9600:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9575:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b657473206861766520616c7265616479206265656e20626f75676874",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9603:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9fdb48e63c799a5a6807f7cb5aa7bb4df72575afef390f90371d1f189ddff80",
                          "typeString": "literal_string \"Tickets have already been bought\""
                        },
                        "value": "Tickets have already been bought"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9fdb48e63c799a5a6807f7cb5aa7bb4df72575afef390f90371d1f189ddff80",
                          "typeString": "literal_string \"Tickets have already been bought\""
                        }
                      ],
                      "id": 595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9567:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9567:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "9567:71:20"
                },
                {
                  "expression": {
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9691:25:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 603,
                        "name": "raffles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "9698:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                          "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "id": 604,
                        "name": "_raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "9706:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9698:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                        "typeString": "struct Raffle.RaffleData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:25:20"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 608,
                          "name": "raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "9755:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                            "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                          }
                        },
                        "id": 610,
                        "indexExpression": {
                          "id": 609,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "9763:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9755:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                          "typeString": "struct Raffle.RaffleData storage ref"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "9755:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 612,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9788:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "REFUNDED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "9788:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "9755:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "9755:53:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 617,
                        "name": "_raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "9842:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 618,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "9853:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "IN_PROGRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "9853:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      },
                      {
                        "expression": {
                          "id": 620,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "9878:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "REFUNDED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "9878:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      ],
                      "id": 616,
                      "name": "RaffleStateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "9823:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_RaffleState_$29_$_t_enum$_RaffleState_$29_$returns$__$",
                        "typeString": "function (uint256,enum Raffle.RaffleState,enum Raffle.RaffleState)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9823:76:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "EmitStatement",
                  "src": "9818:81:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 624,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "9952:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "9952:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 626,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "9977:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "9977:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "9952:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 655,
                  "nodeType": "IfStatement",
                  "src": "9948:311:20",
                  "trueBody": {
                    "id": 654,
                    "nodeType": "Block",
                    "src": "9996:263:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 636,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10065:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10057:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 634,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10057:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10057:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 638,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10072:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "raffleOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "10072:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 640,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10096:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftIdOrAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "10096:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 630,
                                    "name": "raffleData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 572,
                                    "src": "10018:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                      "typeString": "struct Raffle.RaffleData memory"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetContract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "10018:24:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 629,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3294,
                                "src": "10010:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3294_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10010:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3294",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3247,
                            "src": "10010:46:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10010:111:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "10010:111:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 645,
                              "name": "_raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "10162:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 646,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10173:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 647,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "raffleOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "10173:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 648,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10197:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 649,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "10197:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 650,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10223:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftIdOrAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "10223:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 644,
                            "name": "ERC721RaffleCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "10140:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256)"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10140:108:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 653,
                        "nodeType": "EmitStatement",
                        "src": "10135:113:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 656,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "10273:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "10273:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 658,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "10298:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "10298:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "10273:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 706,
                  "nodeType": "IfStatement",
                  "src": "10269:590:20",
                  "trueBody": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "10316:543:20",
                    "statements": [
                      {
                        "assignments": [
                          662
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 662,
                            "mutability": "mutable",
                            "name": "amountToRefund",
                            "nameLocation": "10338:14:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "10330:22:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 661,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10330:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 665,
                        "initialValue": {
                          "expression": {
                            "id": 663,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "10355:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nftIdOrAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "10355:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10330:49:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 666,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 572,
                              "src": "10397:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                "typeString": "struct Raffle.RaffleData memory"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "10397:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10433:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10425:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10425:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10425:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10397:38:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 694,
                          "nodeType": "Block",
                          "src": "10596:137:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 687,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10672:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      ],
                                      "id": 686,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10664:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 685,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10664:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10664:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 689,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 572,
                                      "src": "10679:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 690,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "raffleOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "10679:22:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 691,
                                    "name": "amountToRefund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10703:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 681,
                                          "name": "raffleData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 572,
                                          "src": "10621:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                            "typeString": "struct Raffle.RaffleData memory"
                                          }
                                        },
                                        "id": 682,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "10621:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 680,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2954,
                                      "src": "10614:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10614:32:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2954",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3011,
                                  "src": "10614:49:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10614:104:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 693,
                              "nodeType": "ExpressionStatement",
                              "src": "10614:104:20"
                            }
                          ]
                        },
                        "id": 695,
                        "nodeType": "IfStatement",
                        "src": "10393:340:20",
                        "trueBody": {
                          "id": 679,
                          "nodeType": "Block",
                          "src": "10437:140:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 674,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "10535:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "10535:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 676,
                                    "name": "amountToRefund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10547:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 673,
                                  "name": "_handleEtherTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1683,
                                  "src": "10514:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10514:48:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 678,
                              "nodeType": "ExpressionStatement",
                              "src": "10514:48:20"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 697,
                              "name": "_raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "10772:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 698,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10783:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "raffleOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "10783:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 700,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "10807:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 701,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "10807:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 702,
                              "name": "amountToRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "10833:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 696,
                            "name": "ERC20RaffleCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "10751:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256)"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10751:97:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 704,
                        "nodeType": "EmitStatement",
                        "src": "10746:102:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 709,
                      "mutability": "mutable",
                      "name": "totalCollateral",
                      "nameLocation": "11026:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "11018:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 708,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11018:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Giving the Raffle owner back only the 90% of the initial REFUND_COLLATERAL_FEE\n10% is taken as a fee",
                  "id": 714,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 710,
                      "name": "REFUND_COLLATERAL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "11044:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 711,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "11068:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minimumTicketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "11068:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "11044:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11018:79:20"
                },
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "mutability": "mutable",
                      "name": "collateralRefunded",
                      "nameLocation": "11115:18:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "11107:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11107:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 717,
                        "name": "totalCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "11137:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "39303030",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11155:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9000_by_1",
                          "typeString": "int_const 9000"
                        },
                        "value": "9000"
                      },
                      "src": "11137:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11162:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "11137:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11107:60:20"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 723,
                        "name": "totalAmountClaimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "11177:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 728,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11206:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11198:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11198:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11198:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11177:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 729,
                        "name": "totalCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "11213:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 730,
                        "name": "collateralRefunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "11231:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11213:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11177:72:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "11177:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 735,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11280:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11280:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 737,
                        "name": "collateralRefunded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "11292:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 734,
                      "name": "_handleEtherTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1683,
                      "src": "11259:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11259:52:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "11259:52:20"
                }
              ]
            },
            "documentation": {
              "id": 554,
              "nodeType": "StructuredDocumentation",
              "src": "9009:139:20",
              "text": " @notice  Allows users to cancel a raffle if NO tickets were sold yet\n @param   _raffleId The ID of the raffle"
            },
            "functionSelector": "5fba3171",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 558,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2875,
                  "src": "9203:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "9203:12:20"
              },
              {
                "id": 561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 560,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "9216:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "9216:13:20"
              }
            ],
            "name": "cancelRaffle",
            "nameLocation": "9162:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "9183:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "9175:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9175:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9174:19:20"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9229:0:20"
            },
            "scope": 1986,
            "src": "9153:2165:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "11657:1304:20",
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "11685:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 888,
                      "src": "11667:28:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 752,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 751,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "11667:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "11667:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "baseExpression": {
                      "id": 754,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "11698:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "id": 755,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "11706:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11698:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11667:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 759,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "11734:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "11734:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11768:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11760:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 761,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11760:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11760:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11734:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c6520646f6573206e6f74206578697374",
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11772:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        },
                        "value": "This raffle does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11726:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11726:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "11726:75:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 770,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "11819:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MerkleRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "11819:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11852:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11844:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 772,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11844:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11844:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11819:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374656420726166666c652e205573652062757957686974656c6973746564526166666c655469636b6574282920696e7374656164",
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11856:62:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ce2eba0205f60664c52265f7ca82a7bce3a80558d27d2cdbbb4c55d49c1fcf",
                          "typeString": "literal_string \"Whitelisted raffle. Use buyWhitelistedRaffleTicket() instead\""
                        },
                        "value": "Whitelisted raffle. Use buyWhitelistedRaffleTicket() instead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ce2eba0205f60664c52265f7ca82a7bce3a80558d27d2cdbbb4c55d49c1fcf",
                          "typeString": "literal_string \"Whitelisted raffle. Use buyWhitelistedRaffleTicket() instead\""
                        }
                      ],
                      "id": 769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11811:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11811:108:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "11811:108:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 781,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11937:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11937:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 783,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "11955:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54,
                          "src": "11955:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "11937:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652068617320616c726561647920656e646564",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11980:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        },
                        "value": "This raffle has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11929:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:83:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "11929:83:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 790,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "12030:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "12030:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 792,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "12056:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "12056:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "12030:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652068617320616c726561647920656e646564",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12081:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        },
                        "value": "This raffle has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        }
                      ],
                      "id": 789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12022:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12022:91:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "12022:91:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 799,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "12131:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ticketsSold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "12131:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 801,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "12156:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numberOfTickets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "12156:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12131:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b65747320736f6c64206f7574",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12184:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d128b6fa1214092e348d295615301a36cf25e5b632b523d8aaa049a716006f11",
                          "typeString": "literal_string \"Tickets sold out\""
                        },
                        "value": "Tickets sold out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d128b6fa1214092e348d295615301a36cf25e5b632b523d8aaa049a716006f11",
                          "typeString": "literal_string \"Tickets sold out\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12123:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12123:80:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "12123:80:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 808,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "12221:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 809,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "12242:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfTickets",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "12242:26:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 811,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "12271:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 812,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ticketsSold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "12271:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "12242:51:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12241:53:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12221:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520617265206e6f7420736f206d616e79207469636b65747320617661696c61626c6520746f20627579",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12296:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcb1cc4ae74651cb3f9ba78351664507ed1639e747419d5b3aa569279e930621",
                          "typeString": "literal_string \"There are not so many tickets available to buy\""
                        },
                        "value": "There are not so many tickets available to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcb1cc4ae74651cb3f9ba78351664507ed1639e747419d5b3aa569279e930621",
                          "typeString": "literal_string \"There are not so many tickets available to buy\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12213:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12213:132:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "12213:132:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 819,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "12389:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "12389:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12420:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12412:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12412:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12412:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12389:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 856,
                    "nodeType": "Block",
                    "src": "12567:142:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 844,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12626:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12626:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 848,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12646:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12638:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 846,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12638:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12638:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 850,
                                "name": "_numberOfTickets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "12653:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 851,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "12672:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 852,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "pricePerTicket",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50,
                                "src": "12672:25:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12653:44:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 840,
                                    "name": "raffleData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 753,
                                    "src": "12588:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                      "typeString": "struct Raffle.RaffleData memory"
                                    }
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "12588:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 839,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "12581:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12581:27:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3011,
                            "src": "12581:44:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12581:117:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "ExpressionStatement",
                        "src": "12581:117:20"
                      }
                    ]
                  },
                  "id": 857,
                  "nodeType": "IfStatement",
                  "src": "12385:324:20",
                  "trueBody": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "12423:130:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 827,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12446:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12446:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 829,
                                      "name": "_numberOfTickets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 746,
                                      "src": "12460:16:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 830,
                                        "name": "raffleData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "12479:10:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                          "typeString": "struct Raffle.RaffleData memory"
                                        }
                                      },
                                      "id": 831,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "pricePerTicket",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 50,
                                      "src": "12479:25:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12460:44:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 833,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "12459:46:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12446:59:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682045746865722073656e74206173207061796d656e74",
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12507:34:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71495b95af3c0b8883929a956643d4c665befaa6aaabaa71c61177b8e481a34b",
                                "typeString": "literal_string \"Not enough Ether sent as payment\""
                              },
                              "value": "Not enough Ether sent as payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_71495b95af3c0b8883929a956643d4c665befaa6aaabaa71c61177b8e481a34b",
                                "typeString": "literal_string \"Not enough Ether sent as payment\""
                              }
                            ],
                            "id": 826,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12437:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12437:105:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 837,
                        "nodeType": "ExpressionStatement",
                        "src": "12437:105:20"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "12803:90:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 867,
                                "name": "raffleTickets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "12817:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => address))"
                                }
                              },
                              "id": 873,
                              "indexExpression": {
                                "id": 868,
                                "name": "_raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 744,
                                "src": "12831:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12817:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 874,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 869,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "12842:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ticketsSold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "12842:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 871,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 859,
                                "src": "12867:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12842:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12817:52:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 875,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12872:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12872:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12817:65:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "12817:65:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 861,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "12777:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 862,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "12781:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12777:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 880,
                  "initializationExpression": {
                    "assignments": [
                      859
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12774:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "12766:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12766:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 860,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12766:9:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "12799:3:20",
                      "subExpression": {
                        "id": 864,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 859,
                        "src": "12801:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 866,
                    "nodeType": "ExpressionStatement",
                    "src": "12799:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "12761:132:20"
                },
                {
                  "expression": {
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 881,
                          "name": "raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "12902:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                            "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                          }
                        },
                        "id": 883,
                        "indexExpression": {
                          "id": 882,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 744,
                          "src": "12910:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12902:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                          "typeString": "struct Raffle.RaffleData storage ref"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "12902:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 885,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "12936:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12902:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "12902:50:20"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "11324:227:20",
              "text": " @notice  Allows users to buy tickets for a Raffle\n @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n @param   _numberOfTickets The number of tickets an user wants to buy "
            },
            "functionSelector": "60e02e69",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 748,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "11643:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "11643:13:20"
              }
            ],
            "name": "buyRaffleTicket",
            "nameLocation": "11565:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "11589:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "11581:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11581:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_numberOfTickets",
                  "nameLocation": "11608:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "11600:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11600:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11580:45:20"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11657:0:20"
            },
            "scope": 1986,
            "src": "11556:1405:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "13443:1464:20",
              "statements": [
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "13471:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "13453:28:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 903,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 902,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "13453:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "13453:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 908,
                  "initialValue": {
                    "baseExpression": {
                      "id": 905,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "13484:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 907,
                    "indexExpression": {
                      "id": 906,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "13492:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13484:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13453:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 910,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13520:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "13520:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13554:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13546:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 912,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13546:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13546:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13520:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c6520646f6573206e6f74206578697374",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13558:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        },
                        "value": "This raffle does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        }
                      ],
                      "id": 909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13512:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13512:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "13512:75:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 921,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13605:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MerkleRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "13605:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13638:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13630:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 923,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13630:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13630:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13605:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e2d77686974656c697374656420726166666c652e2055736520627579526166666c655469636b6574282920696e7374656164",
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13642:55:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02d153150d92547e3e55f00035398edb121c80c962df4178d05736ede7640944",
                          "typeString": "literal_string \"Non-whitelisted raffle. Use buyRaffleTicket() instead\""
                        },
                        "value": "Non-whitelisted raffle. Use buyRaffleTicket() instead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02d153150d92547e3e55f00035398edb121c80c962df4178d05736ede7640944",
                          "typeString": "literal_string \"Non-whitelisted raffle. Use buyRaffleTicket() instead\""
                        }
                      ],
                      "id": 920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13597:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13597:101:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "13597:101:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 932,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13716:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13716:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 934,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13734:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54,
                          "src": "13734:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13716:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652068617320616c726561647920656e646564",
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13759:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        },
                        "value": "This raffle has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        }
                      ],
                      "id": 931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13708:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13708:83:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "13708:83:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 941,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13809:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "13809:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 943,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "13835:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "13835:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "13809:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652068617320616c726561647920656e646564",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13860:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        },
                        "value": "This raffle has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fa8710f9259e36d514a4c3f1d5be74b4c80397df81e33cfeea345424aca7c2",
                          "typeString": "literal_string \"This raffle has already ended\""
                        }
                      ],
                      "id": 940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13801:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13801:91:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "13801:91:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 950,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13910:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ticketsSold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "13910:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 952,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "13935:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numberOfTickets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "13935:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13910:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b65747320736f6c64206f7574",
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13963:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d128b6fa1214092e348d295615301a36cf25e5b632b523d8aaa049a716006f11",
                          "typeString": "literal_string \"Tickets sold out\""
                        },
                        "value": "Tickets sold out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d128b6fa1214092e348d295615301a36cf25e5b632b523d8aaa049a716006f11",
                          "typeString": "literal_string \"Tickets sold out\""
                        }
                      ],
                      "id": 949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13902:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13902:80:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "13902:80:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 959,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "14000:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 960,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "14021:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfTickets",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "14021:26:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 962,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "14050:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ticketsSold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "14050:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "14021:51:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "id": 965,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14020:53:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "14000:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520617265206e6f7420736f206d616e79207469636b65747320617661696c61626c6520746f20627579",
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14075:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcb1cc4ae74651cb3f9ba78351664507ed1639e747419d5b3aa569279e930621",
                          "typeString": "literal_string \"There are not so many tickets available to buy\""
                        },
                        "value": "There are not so many tickets available to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcb1cc4ae74651cb3f9ba78351664507ed1639e747419d5b3aa569279e930621",
                          "typeString": "literal_string \"There are not so many tickets available to buy\""
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13992:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13992:132:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "13992:132:20"
                },
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "14142:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "14134:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14134:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 979,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 975,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14176:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14176:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 973,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14159:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14159:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14159:28:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 972,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14149:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14149:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14134:54:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 983,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "14225:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 984,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "14239:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                "typeString": "struct Raffle.RaffleData memory"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MerkleRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "14239:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 986,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "14262:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 981,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3365,
                            "src": "14206:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$3365_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3364,
                          "src": "14206:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14206:61:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f742077686974656c6973746564",
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14269:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d83f8fc1be9e0ba9b6bf347d45dfb8d13a4d0c555f03aee0616fa4569a33a9e5",
                          "typeString": "literal_string \"User not whitelisted\""
                        },
                        "value": "User not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d83f8fc1be9e0ba9b6bf347d45dfb8d13a4d0c555f03aee0616fa4569a33a9e5",
                          "typeString": "literal_string \"User not whitelisted\""
                        }
                      ],
                      "id": 980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14198:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14198:94:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "14198:94:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 991,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "14336:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14336:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14367:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14359:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14359:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14359:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14336:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "14514:142:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1016,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14573:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14573:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1020,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14593:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14585:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1018,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14585:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14585:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1022,
                                "name": "_numberOfTickets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 894,
                                "src": "14600:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1023,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "14619:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 1024,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "pricePerTicket",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50,
                                "src": "14619:25:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14600:44:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1012,
                                    "name": "raffleData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 904,
                                    "src": "14535:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                      "typeString": "struct Raffle.RaffleData memory"
                                    }
                                  },
                                  "id": 1013,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "14535:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1011,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "14528:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14528:27:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3011,
                            "src": "14528:44:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14528:117:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1027,
                        "nodeType": "ExpressionStatement",
                        "src": "14528:117:20"
                      }
                    ]
                  },
                  "id": 1029,
                  "nodeType": "IfStatement",
                  "src": "14332:324:20",
                  "trueBody": {
                    "id": 1010,
                    "nodeType": "Block",
                    "src": "14370:130:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 999,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14393:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "14393:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1001,
                                      "name": "_numberOfTickets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 894,
                                      "src": "14407:16:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 1002,
                                        "name": "raffleData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 904,
                                        "src": "14426:10:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                          "typeString": "struct Raffle.RaffleData memory"
                                        }
                                      },
                                      "id": 1003,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "pricePerTicket",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 50,
                                      "src": "14426:25:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14407:44:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1005,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14406:46:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14393:59:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682045746865722073656e74206173207061796d656e74",
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14454:34:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71495b95af3c0b8883929a956643d4c665befaa6aaabaa71c61177b8e481a34b",
                                "typeString": "literal_string \"Not enough Ether sent as payment\""
                              },
                              "value": "Not enough Ether sent as payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_71495b95af3c0b8883929a956643d4c665befaa6aaabaa71c61177b8e481a34b",
                                "typeString": "literal_string \"Not enough Ether sent as payment\""
                              }
                            ],
                            "id": 998,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14384:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14384:105:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "14384:105:20"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 1051,
                    "nodeType": "Block",
                    "src": "14750:90:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1039,
                                "name": "raffleTickets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "14764:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => address))"
                                }
                              },
                              "id": 1045,
                              "indexExpression": {
                                "id": 1040,
                                "name": "_raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "14778:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14764:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1046,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1041,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "14789:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 1042,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ticketsSold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "14789:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1043,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "14814:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14789:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14764:52:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1047,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14819:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14819:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14764:65:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1050,
                        "nodeType": "ExpressionStatement",
                        "src": "14764:65:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1033,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "14724:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1034,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "14728:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "14724:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1052,
                  "initializationExpression": {
                    "assignments": [
                      1031
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14721:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "14713:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14713:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1032,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14713:9:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "14746:3:20",
                      "subExpression": {
                        "id": 1036,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "14748:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1038,
                    "nodeType": "ExpressionStatement",
                    "src": "14746:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "14708:132:20"
                },
                {
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1053,
                          "name": "raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "14849:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                            "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                          }
                        },
                        "id": 1055,
                        "indexExpression": {
                          "id": 1054,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "14857:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14849:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                          "typeString": "struct Raffle.RaffleData storage ref"
                        }
                      },
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "14849:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1057,
                      "name": "_numberOfTickets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "14883:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "14849:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "14849:50:20"
                }
              ]
            },
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "12967:326:20",
              "text": " @notice  Allows users to buy tickets for a whitelisted Raffle\n @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n @param   _numberOfTickets The number of tickets an user wants to buy \n @param   _merkleProof MerkleProof used to verify user is aprt of the whitelist "
            },
            "functionSelector": "ed5f4bb1",
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 900,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 899,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "13429:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "13429:13:20"
              }
            ],
            "name": "buyWhitelistedRaffleTicket",
            "nameLocation": "13307:26:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "13342:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "13334:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13334:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "_numberOfTickets",
                  "nameLocation": "13361:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "13353:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13353:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "13398:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "13379:31:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 895,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "13379:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 896,
                    "nodeType": "ArrayTypeName",
                    "src": "13379:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13333:78:20"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13443:0:20"
            },
            "scope": 1986,
            "src": "13298:1609:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "15331:1707:20",
              "statements": [
                {
                  "assignments": [
                    1071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "15359:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "15341:28:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 1070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1069,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "15341:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "15341:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1072,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "15372:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 1074,
                    "indexExpression": {
                      "id": 1073,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "15380:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15372:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15341:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1077,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "15408:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "15408:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15442:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15434:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1079,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15434:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15434:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15408:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c6520646f6573206e6f74206578697374",
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15446:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        },
                        "value": "This raffle does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        }
                      ],
                      "id": 1076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15400:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15400:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "15400:75:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1088,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "15493:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "15493:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1090,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "15519:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "15519:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "15493:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652077617320616c726561647920636f6d706c65746564",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15544:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5200398b47229fab0bfcb68fe4d87458432ac8c3950be4bd180acd4ac7061da",
                          "typeString": "literal_string \"This raffle was already completed\""
                        },
                        "value": "This raffle was already completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5200398b47229fab0bfcb68fe4d87458432ac8c3950be4bd180acd4ac7061da",
                          "typeString": "literal_string \"This raffle was already completed\""
                        }
                      ],
                      "id": 1087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15485:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15485:95:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "15485:95:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1096,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15594:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "15594:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 1098,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15620:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfTickets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "15620:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "15594:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1111,
                  "nodeType": "IfStatement",
                  "src": "15590:160:20",
                  "trueBody": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "15647:103:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1102,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15669:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15669:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1104,
                                  "name": "raffleData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "15688:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54,
                                "src": "15688:23:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "15669:42:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526166666c65206973206e6f7420636f6d706c65746564",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15713:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d2daa817f7a8956c524cb2347dfae9693b207f2e35a3526836f5f8b22073b05",
                                "typeString": "literal_string \"Raffle is not completed\""
                              },
                              "value": "Raffle is not completed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3d2daa817f7a8956c524cb2347dfae9693b207f2e35a3526836f5f8b22073b05",
                                "typeString": "literal_string \"Raffle is not completed\""
                              }
                            ],
                            "id": 1101,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15661:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15661:78:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "15661:78:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1112,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15824:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "15824:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1114,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15849:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minimumTicketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "15849:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "15824:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "16770:262:20",
                    "statements": [
                      {
                        "assignments": [
                          1195
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1195,
                            "mutability": "mutable",
                            "name": "request",
                            "nameLocation": "16877:7:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 1210,
                            "src": "16869:15:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1194,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "16869:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1199,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1197,
                              "name": "_raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "16906:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1196,
                            "name": "_requestRandomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "16887:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256) returns (bytes32)"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16887:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16869:47:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1201,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1195,
                              "src": "16952:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1200,
                            "name": "ChainlinkRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "16935:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16935:25:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "EmitStatement",
                        "src": "16930:30:20"
                      },
                      {
                        "expression": {
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1204,
                              "name": "chainlinkRequestToRaffleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "16974:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1206,
                            "indexExpression": {
                              "id": 1205,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1195,
                              "src": "17001:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16974:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1207,
                            "name": "_raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1064,
                            "src": "17012:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16974:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1209,
                        "nodeType": "ExpressionStatement",
                        "src": "16974:47:20"
                      }
                    ]
                  },
                  "id": 1211,
                  "nodeType": "IfStatement",
                  "src": "15820:1212:20",
                  "trueBody": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "15879:854:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RaffleType_$32",
                            "typeString": "enum Raffle.RaffleType"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1117,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "15960:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                "typeString": "struct Raffle.RaffleData memory"
                              }
                            },
                            "id": 1118,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "raffleType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "15960:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleType_$32",
                              "typeString": "enum Raffle.RaffleType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1119,
                              "name": "RaffleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "15985:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                                "typeString": "type(enum Raffle.RaffleType)"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "15985:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleType_$32",
                              "typeString": "enum Raffle.RaffleType"
                            }
                          },
                          "src": "15960:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1138,
                        "nodeType": "IfStatement",
                        "src": "15956:191:20",
                        "trueBody": {
                          "id": 1137,
                          "nodeType": "Block",
                          "src": "16003:144:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1129,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "16076:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      ],
                                      "id": 1128,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16068:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1127,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16068:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16068:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1131,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16083:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1132,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "raffleOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "16083:22:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1133,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16107:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1134,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftIdOrAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "16107:24:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1123,
                                          "name": "raffleData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1071,
                                          "src": "16029:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                            "typeString": "struct Raffle.RaffleData memory"
                                          }
                                        },
                                        "id": 1124,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "16029:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1122,
                                      "name": "IERC721",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3294,
                                      "src": "16021:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721_$3294_$",
                                        "typeString": "type(contract IERC721)"
                                      }
                                    },
                                    "id": 1125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16021:33:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721_$3294",
                                      "typeString": "contract IERC721"
                                    }
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3247,
                                  "src": "16021:46:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16021:111:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1136,
                              "nodeType": "ExpressionStatement",
                              "src": "16021:111:20"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RaffleType_$32",
                            "typeString": "enum Raffle.RaffleType"
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1139,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "16164:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                "typeString": "struct Raffle.RaffleData memory"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "raffleType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "16164:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleType_$32",
                              "typeString": "enum Raffle.RaffleType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1141,
                              "name": "RaffleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "16189:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                                "typeString": "type(enum Raffle.RaffleType)"
                              }
                            },
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "16189:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleType_$32",
                              "typeString": "enum Raffle.RaffleType"
                            }
                          },
                          "src": "16164:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1160,
                        "nodeType": "IfStatement",
                        "src": "16160:193:20",
                        "trueBody": {
                          "id": 1159,
                          "nodeType": "Block",
                          "src": "16206:147:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1151,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "16282:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      ],
                                      "id": 1150,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16274:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1149,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16274:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1152,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16274:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1153,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16289:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1154,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "raffleOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "16289:22:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1155,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16313:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1156,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftIdOrAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "16313:24:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1145,
                                          "name": "raffleData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1071,
                                          "src": "16231:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                            "typeString": "struct Raffle.RaffleData memory"
                                          }
                                        },
                                        "id": 1146,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "16231:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1144,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2954,
                                      "src": "16224:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16224:32:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2954",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3011,
                                  "src": "16224:49:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16224:114:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1158,
                              "nodeType": "ExpressionStatement",
                              "src": "16224:114:20"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1161,
                              "name": "totalAmountClaimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "16444:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1166,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16473:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16465:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1162,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16465:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16465:10:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16444:32:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1167,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16480:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1168,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "minimumTicketsSold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 60,
                                    "src": "16480:29:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1169,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "16512:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                        "typeString": "struct Raffle.RaffleData memory"
                                      }
                                    },
                                    "id": 1170,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ticketsSold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "16512:22:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "16480:54:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "id": 1172,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16479:56:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1173,
                              "name": "REFUND_COLLATERAL_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "16538:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16479:80:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16444:115:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1176,
                        "nodeType": "ExpressionStatement",
                        "src": "16444:115:20"
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1177,
                                "name": "raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "16573:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                                  "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                                }
                              },
                              "id": 1179,
                              "indexExpression": {
                                "id": 1178,
                                "name": "_raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "16581:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16573:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                                "typeString": "struct Raffle.RaffleData storage ref"
                              }
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "raffleState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "16573:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleState_$29",
                              "typeString": "enum Raffle.RaffleState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1181,
                              "name": "RaffleState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "16606:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                                "typeString": "type(enum Raffle.RaffleState)"
                              }
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "REFUNDED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "16606:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleState_$29",
                              "typeString": "enum Raffle.RaffleState"
                            }
                          },
                          "src": "16573:53:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "16573:53:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1186,
                              "name": "_raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "16664:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1187,
                                "name": "RaffleState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "16675:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                                  "typeString": "type(enum Raffle.RaffleState)"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "IN_PROGRESS",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "16675:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RaffleState_$29",
                                "typeString": "enum Raffle.RaffleState"
                              }
                            },
                            {
                              "expression": {
                                "id": 1189,
                                "name": "RaffleState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "16700:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                                  "typeString": "type(enum Raffle.RaffleState)"
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "REFUNDED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "16700:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RaffleState_$29",
                                "typeString": "enum Raffle.RaffleState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_RaffleState_$29",
                                "typeString": "enum Raffle.RaffleState"
                              },
                              {
                                "typeIdentifier": "t_enum$_RaffleState_$29",
                                "typeString": "enum Raffle.RaffleState"
                              }
                            ],
                            "id": 1185,
                            "name": "RaffleStateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "16645:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_RaffleState_$29_$_t_enum$_RaffleState_$29_$returns$__$",
                              "typeString": "function (uint256,enum Raffle.RaffleState,enum Raffle.RaffleState)"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16645:76:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1192,
                        "nodeType": "EmitStatement",
                        "src": "16640:81:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1062,
              "nodeType": "StructuredDocumentation",
              "src": "14913:347:20",
              "text": " @notice  Allows users to complete a Raffle. The winner of the raffle will receive the asset.\nThe owner of the raffle will receive his payment\nCron job will call daily all the pending raffles. Users can also call it\n @param   _raffleId The ID of the raffle the user wants to buy a ticket for"
            },
            "functionSelector": "3077a863",
            "id": 1213,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1066,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "15317:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15317:13:20"
              }
            ],
            "name": "completeRaffle",
            "nameLocation": "15274:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "15297:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "15289:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15289:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15288:19:20"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15331:0:20"
            },
            "scope": 1986,
            "src": "15265:1773:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1395,
              "nodeType": "Block",
              "src": "17338:1898:20",
              "statements": [
                {
                  "assignments": [
                    1225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1225,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "17367:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "17348:29:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 1224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1223,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "17348:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "17348:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1229,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1226,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "17380:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 1228,
                    "indexExpression": {
                      "id": 1227,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "17388:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17380:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17348:50:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1231,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "17416:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                              "typeString": "struct Raffle.RaffleData storage pointer"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "17416:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17450:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17442:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17442:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17442:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17416:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c6520646f6573206e6f74206578697374",
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17454:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        },
                        "value": "This raffle does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7e937e523a60331fa6aff10cd3c266e9ca829373ee5ebfa2f5cc02763159ffc",
                          "typeString": "literal_string \"This raffle does not exist\""
                        }
                      ],
                      "id": 1230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17408:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17408:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "17408:75:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1242,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "17501:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                              "typeString": "struct Raffle.RaffleData storage pointer"
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "17501:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1244,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "17527:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COMPLETED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "17527:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "17501:47:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320726166666c652077617320616c726561647920636f6d706c65746564",
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17550:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5200398b47229fab0bfcb68fe4d87458432ac8c3950be4bd180acd4ac7061da",
                          "typeString": "literal_string \"This raffle was already completed\""
                        },
                        "value": "This raffle was already completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5200398b47229fab0bfcb68fe4d87458432ac8c3950be4bd180acd4ac7061da",
                          "typeString": "literal_string \"This raffle was already completed\""
                        }
                      ],
                      "id": 1241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17493:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17493:93:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1249,
                  "nodeType": "ExpressionStatement",
                  "src": "17493:93:20"
                },
                {
                  "expression": {
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1250,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "17597:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "17597:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1253,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "17622:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLAIMED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "17622:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "17597:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "17597:44:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1258,
                        "name": "_raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "17675:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1259,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "17686:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "17686:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      },
                      {
                        "expression": {
                          "id": 1261,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "17709:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "CLAIMED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "17709:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      ],
                      "id": 1257,
                      "name": "RaffleStateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "17656:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_RaffleState_$29_$_t_enum$_RaffleState_$29_$returns$__$",
                        "typeString": "function (uint256,enum Raffle.RaffleState,enum Raffle.RaffleState)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17656:73:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "EmitStatement",
                  "src": "17651:78:20"
                },
                {
                  "assignments": [
                    1266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1266,
                      "mutability": "mutable",
                      "name": "raffleOwner",
                      "nameLocation": "17748:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "17740:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17740:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "expression": {
                      "id": 1267,
                      "name": "raffleData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "17762:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData storage pointer"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "raffleOwner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 36,
                    "src": "17762:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17740:44:20"
                },
                {
                  "assignments": [
                    1271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1271,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "17802:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "17794:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17794:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1274,
                  "initialValue": {
                    "expression": {
                      "id": 1272,
                      "name": "raffleData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "17811:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData storage pointer"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "raffleWinner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 38,
                    "src": "17811:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17794:40:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    },
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1275,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "17892:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "17892:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1277,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "17917:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "17917:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "17892:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1295,
                  "nodeType": "IfStatement",
                  "src": "17888:167:20",
                  "trueBody": {
                    "id": 1294,
                    "nodeType": "Block",
                    "src": "17935:120:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1287,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18004:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17996:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1285,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17996:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17996:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1289,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1271,
                              "src": "18011:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1290,
                                "name": "raffleData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "18019:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                  "typeString": "struct Raffle.RaffleData storage pointer"
                                }
                              },
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftIdOrAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "18019:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1281,
                                    "name": "raffleData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1225,
                                    "src": "17957:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                      "typeString": "struct Raffle.RaffleData storage pointer"
                                    }
                                  },
                                  "id": 1282,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetContract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "17957:24:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1280,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3294,
                                "src": "17949:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3294_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17949:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3294",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3247,
                            "src": "17949:46:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17949:95:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1293,
                        "nodeType": "ExpressionStatement",
                        "src": "17949:95:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RaffleType_$32",
                      "typeString": "enum Raffle.RaffleType"
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1296,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "18068:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raffleType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "18068:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1298,
                        "name": "RaffleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "18093:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleType_$32_$",
                          "typeString": "type(enum Raffle.RaffleType)"
                        }
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "18093:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$32",
                        "typeString": "enum Raffle.RaffleType"
                      }
                    },
                    "src": "18068:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1332,
                  "nodeType": "IfStatement",
                  "src": "18064:386:20",
                  "trueBody": {
                    "id": 1331,
                    "nodeType": "Block",
                    "src": "18110:340:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1301,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "18168:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                "typeString": "struct Raffle.RaffleData storage pointer"
                              }
                            },
                            "id": 1302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "18168:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18202:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18194:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1303,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18194:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18194:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18168:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1329,
                          "nodeType": "Block",
                          "src": "18309:131:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1322,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "18385:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Raffle_$1986",
                                          "typeString": "contract Raffle"
                                        }
                                      ],
                                      "id": 1321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18377:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1320,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "18377:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18377:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1324,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1271,
                                    "src": "18392:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1325,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1225,
                                      "src": "18400:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                        "typeString": "struct Raffle.RaffleData storage pointer"
                                      }
                                    },
                                    "id": 1326,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftIdOrAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "18400:24:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1316,
                                          "name": "raffleData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1225,
                                          "src": "18334:10:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                            "typeString": "struct Raffle.RaffleData storage pointer"
                                          }
                                        },
                                        "id": 1317,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "18334:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1315,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2954,
                                      "src": "18327:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18327:32:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2954",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3011,
                                  "src": "18327:49:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18327:98:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1328,
                              "nodeType": "ExpressionStatement",
                              "src": "18327:98:20"
                            }
                          ]
                        },
                        "id": 1330,
                        "nodeType": "IfStatement",
                        "src": "18164:276:20",
                        "trueBody": {
                          "id": 1314,
                          "nodeType": "Block",
                          "src": "18205:87:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1309,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1271,
                                    "src": "18244:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1310,
                                      "name": "raffleData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1225,
                                      "src": "18252:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                                        "typeString": "struct Raffle.RaffleData storage pointer"
                                      }
                                    },
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftIdOrAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "18252:24:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1308,
                                  "name": "_handleEtherTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1683,
                                  "src": "18223:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18223:54:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1313,
                              "nodeType": "ExpressionStatement",
                              "src": "18223:54:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1334,
                      "mutability": "mutable",
                      "name": "totalAmountEarned",
                      "nameLocation": "18468:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "18460:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18460:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1340,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1335,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "18488:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "18488:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1337,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "18513:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pricePerTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "18513:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18488:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18460:78:20"
                },
                {
                  "assignments": [
                    1342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1342,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "18556:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "18548:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1341,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18548:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1349,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1343,
                            "name": "totalAmountEarned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "18563:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1344,
                            "name": "FEE_NUMERATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "18583:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18563:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1346,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18562:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1347,
                      "name": "FEE_DENOMINATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "18600:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18562:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18548:67:20"
                },
                {
                  "expression": {
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1350,
                      "name": "totalAmountEarned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "18625:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1351,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "18646:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18625:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "18625:24:20"
                },
                {
                  "assignments": [
                    1355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1355,
                      "mutability": "mutable",
                      "name": "raffleCurrency",
                      "nameLocation": "18667:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "18659:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18659:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1358,
                  "initialValue": {
                    "expression": {
                      "id": 1356,
                      "name": "raffleData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "18684:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData storage pointer"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 48,
                    "src": "18684:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18659:44:20"
                },
                {
                  "expression": {
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1359,
                        "name": "totalAmountClaimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "18713:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1361,
                      "indexExpression": {
                        "id": 1360,
                        "name": "raffleCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "18734:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18713:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1362,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "18753:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18713:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "18713:43:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1365,
                      "name": "raffleCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "18810:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18836:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "18828:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18828:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18828:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18810:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "18961:126:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1381,
                              "name": "raffleOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "19045:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1382,
                              "name": "totalAmountEarned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "19058:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1378,
                                  "name": "raffleCurrency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1355,
                                  "src": "19016:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1377,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "19009:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19009:22:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2985,
                            "src": "19009:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19009:67:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1384,
                        "nodeType": "ExpressionStatement",
                        "src": "19009:67:20"
                      }
                    ]
                  },
                  "id": 1386,
                  "nodeType": "IfStatement",
                  "src": "18807:280:20",
                  "trueBody": {
                    "id": 1376,
                    "nodeType": "Block",
                    "src": "18839:109:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1372,
                              "name": "raffleOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "18906:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1373,
                              "name": "totalAmountEarned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "18919:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1371,
                            "name": "_handleEtherTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1683,
                            "src": "18885:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18885:52:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1375,
                        "nodeType": "ExpressionStatement",
                        "src": "18885:52:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1388,
                        "name": "raffleOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "19162:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1389,
                          "name": "REFUND_COLLATERAL_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "19175:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1390,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "19199:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                              "typeString": "struct Raffle.RaffleData storage pointer"
                            }
                          },
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minimumTicketsSold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60,
                          "src": "19199:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "19175:53:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1387,
                      "name": "_handleEtherTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1683,
                      "src": "19141:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19141:88:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "19141:88:20"
                }
              ]
            },
            "documentation": {
              "id": 1214,
              "nodeType": "StructuredDocumentation",
              "src": "17044:213:20",
              "text": " @notice  Allows users to claim the raffle. Owner of the raffle will receive the payment and the winner his asset\n @param   _raffleId The ID of the raffle the user wants to buy a ticket for"
            },
            "functionSelector": "4178cdfb",
            "id": 1396,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1219,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1218,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2875,
                  "src": "17311:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "17311:12:20"
              },
              {
                "id": 1221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1220,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "17324:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "17324:13:20"
              }
            ],
            "name": "claimRaffle",
            "nameLocation": "17271:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "17291:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "17283:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17283:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17282:19:20"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17338:0:20"
            },
            "scope": 1986,
            "src": "17262:1974:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1507,
              "nodeType": "Block",
              "src": "19628:741:20",
              "statements": [
                {
                  "assignments": [
                    1411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1411,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "19656:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1507,
                      "src": "19638:28:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 1410,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1409,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "19638:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "19638:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1415,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1412,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "19669:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 1414,
                    "indexExpression": {
                      "id": 1413,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "19677:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19669:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19638:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1417,
                            "name": "raffleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "19705:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                              "typeString": "struct Raffle.RaffleData memory"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "raffleState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "19705:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1419,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "19731:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                              "typeString": "type(enum Raffle.RaffleState)"
                            }
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "REFUNDED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "19731:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          }
                        },
                        "src": "19705:46:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c65206973206e6f7420696e20524546554e444544207374617465",
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19753:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37427004a5972676c02f51f8bf36c345e0c23fb096dbd701805d6a083bf5e977",
                          "typeString": "literal_string \"Raffle is not in REFUNDED state\""
                        },
                        "value": "Raffle is not in REFUNDED state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37427004a5972676c02f51f8bf36c345e0c23fb096dbd701805d6a083bf5e977",
                          "typeString": "literal_string \"Raffle is not in REFUNDED state\""
                        }
                      ],
                      "id": 1416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19697:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19697:90:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1424,
                  "nodeType": "ExpressionStatement",
                  "src": "19697:90:20"
                },
                {
                  "assignments": [
                    1426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1426,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "19805:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1507,
                      "src": "19797:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19797:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1429,
                  "initialValue": {
                    "expression": {
                      "id": 1427,
                      "name": "ticketIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "19811:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "19811:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19797:30:20"
                },
                {
                  "body": {
                    "id": 1466,
                    "nodeType": "Block",
                    "src": "19862:184:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1440,
                                    "name": "raffleTickets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "19884:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                                      "typeString": "mapping(uint256 => mapping(uint256 => address))"
                                    }
                                  },
                                  "id": 1442,
                                  "indexExpression": {
                                    "id": 1441,
                                    "name": "_raffleId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1399,
                                    "src": "19898:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19884:24:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 1446,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 1443,
                                    "name": "ticketIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1402,
                                    "src": "19909:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1445,
                                  "indexExpression": {
                                    "id": 1444,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1431,
                                    "src": "19919:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19909:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19884:38:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1447,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "19926:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "19926:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "19884:52:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520646f206e6f74206f776e2074686973207469636b6574204964",
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19938:31:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6061ea419d4304bea09b73a180b501e830ada075dc40d916e2348e47f08f5c25",
                                "typeString": "literal_string \"You do not own this ticket Id\""
                              },
                              "value": "You do not own this ticket Id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6061ea419d4304bea09b73a180b501e830ada075dc40d916e2348e47f08f5c25",
                                "typeString": "literal_string \"You do not own this ticket Id\""
                              }
                            ],
                            "id": 1439,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19876:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19876:94:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1452,
                        "nodeType": "ExpressionStatement",
                        "src": "19876:94:20"
                      },
                      {
                        "expression": {
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1453,
                                "name": "raffleTickets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "19984:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => address))"
                                }
                              },
                              "id": 1458,
                              "indexExpression": {
                                "id": 1454,
                                "name": "_raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1399,
                                "src": "19998:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19984:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1459,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1455,
                                "name": "ticketIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1402,
                                "src": "20009:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1457,
                              "indexExpression": {
                                "id": 1456,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "20019:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20009:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19984:38:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20033:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20025:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1460,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20025:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20025:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19984:51:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1465,
                        "nodeType": "ExpressionStatement",
                        "src": "19984:51:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1433,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "19849:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1434,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "19853:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19849:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1467,
                  "initializationExpression": {
                    "assignments": [
                      1431
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "19846:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "19841:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19841:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1432,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "19841:6:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "19858:3:20",
                      "subExpression": {
                        "id": 1436,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "19860:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1438,
                    "nodeType": "ExpressionStatement",
                    "src": "19858:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "19837:209:20"
                },
                {
                  "assignments": [
                    1469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1469,
                      "mutability": "mutable",
                      "name": "totalRefund",
                      "nameLocation": "20063:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1507,
                      "src": "20055:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20055:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1480,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1470,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "20078:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 1471,
                              "name": "raffleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "20084:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                "typeString": "struct Raffle.RaffleData memory"
                              }
                            },
                            "id": 1472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pricePerTicket",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "20084:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20078:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1474,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "20077:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1475,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "20114:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1476,
                            "name": "REFUND_COLLATERAL_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "20120:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20114:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1478,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "20113:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20077:65:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20055:87:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1481,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "20156:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                          "typeString": "struct Raffle.RaffleData memory"
                        }
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "20156:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20187:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20179:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20179:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20179:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20156:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1505,
                    "nodeType": "Block",
                    "src": "20273:90:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1500,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20328:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20328:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1502,
                              "name": "totalRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "20340:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1496,
                                    "name": "raffleData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1411,
                                    "src": "20294:10:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                      "typeString": "struct Raffle.RaffleData memory"
                                    }
                                  },
                                  "id": 1497,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "20294:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1495,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "20287:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20287:27:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2985,
                            "src": "20287:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20287:65:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1504,
                        "nodeType": "ExpressionStatement",
                        "src": "20287:65:20"
                      }
                    ]
                  },
                  "id": 1506,
                  "nodeType": "IfStatement",
                  "src": "20152:211:20",
                  "trueBody": {
                    "id": 1494,
                    "nodeType": "Block",
                    "src": "20190:70:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1489,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20225:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20225:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1491,
                              "name": "totalRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "20237:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1488,
                            "name": "_handleEtherTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1683,
                            "src": "20204:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20204:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1493,
                        "nodeType": "ExpressionStatement",
                        "src": "20204:45:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1397,
              "nodeType": "StructuredDocumentation",
              "src": "19242:267:20",
              "text": " @notice  Allows users to claim a cancelled raffle where they will receive their initially payment plus 0.1 Ether\n @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n @param   ticketIds Array of ticketIds to claim"
            },
            "functionSelector": "2cf316f9",
            "id": 1508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1404,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2875,
                  "src": "19602:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "19602:12:20"
              },
              {
                "id": 1407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1406,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2792,
                  "src": "19615:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "19615:13:20"
              }
            ],
            "name": "claimCancelledRaffle",
            "nameLocation": "19523:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "19552:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "19544:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19544:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1402,
                  "mutability": "mutable",
                  "name": "ticketIds",
                  "nameLocation": "19582:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "19563:28:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1400,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19563:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1401,
                    "nodeType": "ArrayTypeName",
                    "src": "19563:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19543:49:20"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19628:0:20"
            },
            "scope": 1986,
            "src": "19514:855:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1558,
              "nodeType": "Block",
              "src": "20717:352:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1521,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "20758:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$1986",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 1520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20750:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1519,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20750:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20750:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1517,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3439,
                              "src": "20735:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$5284",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 1518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5216,
                            "src": "20735:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20735:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1524,
                          "name": "linkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "20768:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20735:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b",
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20777:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
                          "typeString": "literal_string \"Not enough LINK\""
                        },
                        "value": "Not enough LINK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
                          "typeString": "literal_string \"Not enough LINK\""
                        }
                      ],
                      "id": 1516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20727:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20727:68:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "20727:68:20"
                },
                {
                  "assignments": [
                    1531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1531,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "20824:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1558,
                      "src": "20805:29:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 1530,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1529,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "20805:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "20805:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1535,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1532,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "20837:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 1534,
                    "indexExpression": {
                      "id": 1533,
                      "name": "_raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "20845:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20837:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20805:50:20"
                },
                {
                  "expression": {
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1536,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "20865:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "20865:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1539,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "20890:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 1540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FINISHED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "20890:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "20865:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 1542,
                  "nodeType": "ExpressionStatement",
                  "src": "20865:45:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1544,
                        "name": "_raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "20944:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1545,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "20955:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "IN_PROGRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "20955:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      },
                      {
                        "expression": {
                          "id": 1547,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "20980:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FINISHED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "20980:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      ],
                      "id": 1543,
                      "name": "RaffleStateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "20925:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_RaffleState_$29_$_t_enum$_RaffleState_$29_$returns$__$",
                        "typeString": "function (uint256,enum Raffle.RaffleState,enum Raffle.RaffleState)"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20925:76:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "EmitStatement",
                  "src": "20920:81:20"
                },
                {
                  "expression": {
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1551,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1514,
                      "src": "21011:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1553,
                          "name": "linkKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "21041:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1554,
                          "name": "linkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "21054:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1552,
                        "name": "requestRandomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3436,
                        "src": "21023:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) returns (bytes32)"
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21023:39:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "21011:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "21011:51:20"
                }
              ]
            },
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "20375:252:20",
              "text": "############################################################################################\n              INTERNAL/PRIVATE FUNCTIONS\n  ############################################################################################"
            },
            "id": 1559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requestRandomness",
            "nameLocation": "20642:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "20669:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1559,
                  "src": "20661:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20661:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20660:19:20"
            },
            "returnParameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1514,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "20706:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1559,
                  "src": "20698:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20698:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20697:19:20"
            },
            "scope": 1986,
            "src": "20633:436:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3380
            ],
            "body": {
              "id": 1612,
              "nodeType": "Block",
              "src": "21159:450:20",
              "statements": [
                {
                  "assignments": [
                    1568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1568,
                      "mutability": "mutable",
                      "name": "raffleId",
                      "nameLocation": "21177:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1612,
                      "src": "21169:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21169:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1572,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1569,
                      "name": "chainlinkRequestToRaffleID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "21188:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1571,
                    "indexExpression": {
                      "id": 1570,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "21215:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21188:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21169:56:20"
                },
                {
                  "assignments": [
                    1575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1575,
                      "mutability": "mutable",
                      "name": "raffleData",
                      "nameLocation": "21254:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1612,
                      "src": "21235:29:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      },
                      "typeName": {
                        "id": 1574,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1573,
                          "name": "RaffleData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "21235:10:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "21235:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1579,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1576,
                      "name": "raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "21267:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                        "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                      }
                    },
                    "id": 1578,
                    "indexExpression": {
                      "id": 1577,
                      "name": "raffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1568,
                      "src": "21275:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21267:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21235:49:20"
                },
                {
                  "expression": {
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1580,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "21294:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "21294:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1583,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "21319:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                          "typeString": "type(enum Raffle.RaffleState)"
                        }
                      },
                      "id": 1584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "COMPLETED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "21319:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$29",
                        "typeString": "enum Raffle.RaffleState"
                      }
                    },
                    "src": "21294:46:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "21294:46:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1588,
                        "name": "raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "21374:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1589,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "21384:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FINISHED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "21384:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      },
                      {
                        "expression": {
                          "id": 1591,
                          "name": "RaffleState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "21406:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                            "typeString": "type(enum Raffle.RaffleState)"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "21406:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        },
                        {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      ],
                      "id": 1587,
                      "name": "RaffleStateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "21355:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_RaffleState_$29_$_t_enum$_RaffleState_$29_$returns$__$",
                        "typeString": "function (uint256,enum Raffle.RaffleState,enum Raffle.RaffleState)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21355:73:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "EmitStatement",
                  "src": "21350:78:20"
                },
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "winningIndex",
                      "nameLocation": "21479:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1612,
                      "src": "21471:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21471:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1601,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1597,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1563,
                      "src": "21494:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 1598,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "21507:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1599,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsSold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "21507:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "21494:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21471:58:20"
                },
                {
                  "expression": {
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1602,
                        "name": "raffleData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "21539:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                          "typeString": "struct Raffle.RaffleData storage pointer"
                        }
                      },
                      "id": 1604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raffleWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "21539:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1605,
                          "name": "raffleTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "21565:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => address))"
                          }
                        },
                        "id": 1607,
                        "indexExpression": {
                          "id": 1606,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "21579:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21565:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1609,
                      "indexExpression": {
                        "id": 1608,
                        "name": "winningIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "21589:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21565:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21539:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "21539:63:20"
                }
              ]
            },
            "id": 1613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "21084:17:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1565,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21150:8:20"
            },
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "21110:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1613,
                  "src": "21102:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1560,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21102:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "21129:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1613,
                  "src": "21121:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21121:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21101:39:20"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21159:0:20"
            },
            "scope": 1986,
            "src": "21075:534:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1625,
              "nodeType": "Block",
              "src": "21727:57:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1621,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1615,
                        "src": "21755:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1622,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "21766:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1620,
                      "name": "fulfillRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1613
                      ],
                      "referencedDeclaration": 1613,
                      "src": "21737:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21737:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1624,
                  "nodeType": "ExpressionStatement",
                  "src": "21737:40:20"
                }
              ]
            },
            "functionSelector": "11577339",
            "id": 1626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomnessTest",
            "nameLocation": "21657:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "21687:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "21679:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1614,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21679:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "21706:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "21698:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21698:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21678:39:20"
            },
            "returnParameters": {
              "id": 1619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21727:0:20"
            },
            "scope": 1986,
            "src": "21648:136:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1682,
              "nodeType": "Block",
              "src": "21920:450:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1637,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "21976:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Raffle_$1986",
                                  "typeString": "contract Raffle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Raffle_$1986",
                                  "typeString": "contract Raffle"
                                }
                              ],
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21968:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1635,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21968:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21968:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "21968:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1640,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "21993:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21968:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f68616e646c6545746865725472616e7366657220696e736f6c76656e74",
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22002:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f09764248301849ca12ec32414900f6808533c90dcec20d40309c3da9b091e",
                          "typeString": "literal_string \"_handleEtherTransfer insolvent\""
                        },
                        "value": "_handleEtherTransfer insolvent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f09764248301849ca12ec32414900f6808533c90dcec20d40309c3da9b091e",
                          "typeString": "literal_string \"_handleEtherTransfer insolvent\""
                        }
                      ],
                      "id": 1634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21960:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21960:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "21960:75:20"
                },
                {
                  "assignments": [
                    1646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1646,
                      "mutability": "mutable",
                      "name": "gas",
                      "nameLocation": "22053:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1682,
                      "src": "22045:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22045:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1649,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1647,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "22060:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22060:9:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22045:24:20"
                },
                {
                  "assignments": [
                    1651,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1651,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "22085:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1682,
                      "src": "22080:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1650,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "22080:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1659,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22135:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1652,
                          "name": "_dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1629,
                          "src": "22098:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "22098:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1654,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "22116:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1655,
                          "name": "gas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1646,
                          "src": "22130:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "22098:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22098:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22079:59:20"
                },
                {
                  "condition": {
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "22235:8:20",
                    "subExpression": {
                      "id": 1660,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "22236:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1681,
                  "nodeType": "IfStatement",
                  "src": "22231:133:20",
                  "trueBody": {
                    "id": 1680,
                    "nodeType": "Block",
                    "src": "22245:119:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1662,
                                "name": "WETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "22259:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWETH_$2570",
                                  "typeString": "contract IWETH"
                                }
                              },
                              "id": 1664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2564,
                              "src": "22259:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1665,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1631,
                                "src": "22279:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "22259:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22259:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1668,
                        "nodeType": "ExpressionStatement",
                        "src": "22259:30:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1676,
                              "name": "_dest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "22338:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1677,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1631,
                              "src": "22345:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1672,
                                      "name": "WETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 92,
                                      "src": "22318:4:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IWETH_$2570",
                                        "typeString": "contract IWETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IWETH_$2570",
                                        "typeString": "contract IWETH"
                                      }
                                    ],
                                    "id": 1671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22310:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1670,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22310:7:20",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22310:13:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1669,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "22303:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22303:21:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2954",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2985,
                            "src": "22303:34:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22303:50:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1679,
                        "nodeType": "ExpressionStatement",
                        "src": "22303:50:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1627,
              "nodeType": "StructuredDocumentation",
              "src": "21790:54:20",
              "text": "  Function to handle Ether transfers"
            },
            "id": 1683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleEtherTransfer",
            "nameLocation": "21858:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "_dest",
                  "nameLocation": "21887:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1683,
                  "src": "21879:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21879:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21902:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1683,
                  "src": "21894:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21894:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21878:32:20"
            },
            "returnParameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21920:0:20"
            },
            "scope": 1986,
            "src": "21849:521:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1699,
              "nodeType": "Block",
              "src": "22755:65:20",
              "statements": [
                {
                  "condition": {
                    "id": 1691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "22769:9:20",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1689,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2780,
                        "src": "22770:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 1690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22770:8:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1695,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2835,
                        "src": "22803:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22803:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1697,
                    "nodeType": "ExpressionStatement",
                    "src": "22803:10:20"
                  },
                  "id": 1698,
                  "nodeType": "IfStatement",
                  "src": "22765:48:20",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1692,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "22780:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22780:8:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1694,
                    "nodeType": "ExpressionStatement",
                    "src": "22780:8:20"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1684,
              "nodeType": "StructuredDocumentation",
              "src": "22627:81:20",
              "text": " @notice  Used to pause/unpause the smart contract by the owner"
            },
            "functionSelector": "c4ae3168",
            "id": 1700,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1687,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1686,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2693,
                  "src": "22745:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "22745:9:20"
              }
            ],
            "name": "togglePause",
            "nameLocation": "22722:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22733:2:20"
            },
            "returnParameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22755:0:20"
            },
            "scope": 1986,
            "src": "22713:107:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1726,
              "nodeType": "Block",
              "src": "23001:211:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "23019:42:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1709,
                            "name": "whitelistedCurrencies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "23020:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1711,
                          "indexExpression": {
                            "id": 1710,
                            "name": "_ERC20TokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1703,
                            "src": "23042:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23020:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20697320616c72656164792077686974656c6973746564",
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23063:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4bc537df57a6469ec8f75da4f5b5b7d3b0db903b261a801ce98ccf8b9d40c42",
                          "typeString": "literal_string \"Token is already whitelisted\""
                        },
                        "value": "Token is already whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4bc537df57a6469ec8f75da4f5b5b7d3b0db903b261a801ce98ccf8b9d40c42",
                          "typeString": "literal_string \"Token is already whitelisted\""
                        }
                      ],
                      "id": 1708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23011:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23011:83:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "23011:83:20"
                },
                {
                  "expression": {
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1716,
                        "name": "whitelistedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "23104:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1718,
                      "indexExpression": {
                        "id": 1717,
                        "name": "_ERC20TokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "23126:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23104:41:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23148:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "23104:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "23104:48:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1723,
                        "name": "_ERC20TokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1703,
                        "src": "23186:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1722,
                      "name": "ERC20CurrencyAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "23167:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23167:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1725,
                  "nodeType": "EmitStatement",
                  "src": "23162:43:20"
                }
              ]
            },
            "documentation": {
              "id": 1701,
              "nodeType": "StructuredDocumentation",
              "src": "22826:96:20",
              "text": " @notice  Used to whitelist a new ERC20 token to be used as a payment currency"
            },
            "functionSelector": "82d0f069",
            "id": 1727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1705,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2693,
                  "src": "22991:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "22991:9:20"
              }
            ],
            "name": "whitelistCurrency",
            "nameLocation": "22936:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "_ERC20TokenAddress",
                  "nameLocation": "22962:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "22954:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22954:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22953:28:20"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23001:0:20"
            },
            "scope": 1986,
            "src": "22927:285:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1752,
              "nodeType": "Block",
              "src": "23411:209:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1736,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "23429:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1738,
                        "indexExpression": {
                          "id": 1737,
                          "name": "_ERC20TokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1730,
                          "src": "23451:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23429:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f742077686974656c6973746564",
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23472:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                          "typeString": "literal_string \"Token is not whitelisted\""
                        },
                        "value": "Token is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                          "typeString": "literal_string \"Token is not whitelisted\""
                        }
                      ],
                      "id": 1735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23421:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23421:78:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1741,
                  "nodeType": "ExpressionStatement",
                  "src": "23421:78:20"
                },
                {
                  "expression": {
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1742,
                        "name": "whitelistedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "23509:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1744,
                      "indexExpression": {
                        "id": 1743,
                        "name": "_ERC20TokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "23531:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23509:41:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23553:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "23509:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1747,
                  "nodeType": "ExpressionStatement",
                  "src": "23509:49:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1749,
                        "name": "_ERC20TokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "23594:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1748,
                      "name": "ERC20CurrencyRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "23573:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23573:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1751,
                  "nodeType": "EmitStatement",
                  "src": "23568:45:20"
                }
              ]
            },
            "documentation": {
              "id": 1728,
              "nodeType": "StructuredDocumentation",
              "src": "23218:114:20",
              "text": " @notice  Used to blacklist a ERC20 token so it can not be used any longer as a payment currency"
            },
            "functionSelector": "52defbd0",
            "id": 1753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1732,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2693,
                  "src": "23401:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "23401:9:20"
              }
            ],
            "name": "blacklistCurrency",
            "nameLocation": "23346:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "_ERC20TokenAddress",
                  "nameLocation": "23372:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1753,
                  "src": "23364:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23364:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23363:28:20"
            },
            "returnParameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23411:0:20"
            },
            "scope": 1986,
            "src": "23337:283:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1847,
              "nodeType": "Block",
              "src": "24026:800:20",
              "statements": [
                {
                  "assignments": [
                    1768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1768,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "24044:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1847,
                      "src": "24036:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24036:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1771,
                  "initialValue": {
                    "expression": {
                      "id": 1769,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1757,
                      "src": "24050:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "24050:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24036:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1773,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1768,
                          "src": "24088:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1774,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "24095:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "24095:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24088:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4172726179206c656e6774687320646f206e6f74206d61746368",
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24112:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
                          "typeString": "literal_string \"Array lengths do not match\""
                        },
                        "value": "Array lengths do not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
                          "typeString": "literal_string \"Array lengths do not match\""
                        }
                      ],
                      "id": 1772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24080:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24080:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "24080:61:20"
                },
                {
                  "assignments": [
                    1781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1781,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "24159:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1847,
                      "src": "24151:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24151:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1782,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24151:14:20"
                },
                {
                  "assignments": [
                    1784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "24183:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1847,
                      "src": "24175:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "24175:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1785,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24175:20:20"
                },
                {
                  "body": {
                    "id": 1845,
                    "nodeType": "Block",
                    "src": "24235:585:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1795,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24249:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1796,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "24264:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1798,
                            "indexExpression": {
                              "id": 1797,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "24278:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24264:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24249:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1800,
                        "nodeType": "ExpressionStatement",
                        "src": "24249:31:20"
                      },
                      {
                        "expression": {
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1801,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "24294:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1802,
                              "name": "_amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "24303:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1804,
                            "indexExpression": {
                              "id": 1803,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "24312:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24303:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24294:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1806,
                        "nodeType": "ExpressionStatement",
                        "src": "24294:20:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1808,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1781,
                                "src": "24336:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1809,
                                  "name": "totalAmountClaimable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "24346:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1811,
                                "indexExpression": {
                                  "id": 1810,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "24367:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24346:34:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24336:44:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e7420746f6f2068696768",
                              "id": 1813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24382:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                                "typeString": "literal_string \"Amount too high\""
                              },
                              "value": "Amount too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                                "typeString": "literal_string \"Amount too high\""
                              }
                            ],
                            "id": 1807,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "24328:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24328:72:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1815,
                        "nodeType": "ExpressionStatement",
                        "src": "24328:72:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1816,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24417:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24441:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24433:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1817,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24433:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24433:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24417:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1836,
                          "nodeType": "Block",
                          "src": "24533:85:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1832,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1762,
                                    "src": "24585:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1833,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1781,
                                    "src": "24596:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1829,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1784,
                                        "src": "24558:12:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1828,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2954,
                                      "src": "24551:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2954_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24551:20:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2954",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1831,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2985,
                                  "src": "24551:33:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2954_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2954_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24551:52:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1835,
                              "nodeType": "ExpressionStatement",
                              "src": "24551:52:20"
                            }
                          ]
                        },
                        "id": 1837,
                        "nodeType": "IfStatement",
                        "src": "24414:204:20",
                        "trueBody": {
                          "id": 1827,
                          "nodeType": "Block",
                          "src": "24444:72:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1823,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1762,
                                    "src": "24483:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1824,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1781,
                                    "src": "24494:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1822,
                                  "name": "_handleEtherTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1683,
                                  "src": "24462:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24462:39:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1826,
                              "nodeType": "ExpressionStatement",
                              "src": "24462:39:20"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1844,
                        "nodeType": "UncheckedBlock",
                        "src": "24723:87:20",
                        "statements": [
                          {
                            "expression": {
                              "id": 1842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1838,
                                  "name": "totalAmountClaimable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "24751:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1840,
                                "indexExpression": {
                                  "id": 1839,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "24772:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "24751:34:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 1841,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1781,
                                "src": "24789:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24751:44:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1843,
                            "nodeType": "ExpressionStatement",
                            "src": "24751:44:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1789,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1787,
                      "src": "24221:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1790,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "24225:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24221:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1846,
                  "initializationExpression": {
                    "assignments": [
                      1787
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "24218:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 1846,
                        "src": "24210:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24210:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1788,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "24210:9:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "24230:3:20",
                      "subExpression": {
                        "id": 1792,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1787,
                        "src": "24232:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1794,
                    "nodeType": "ExpressionStatement",
                    "src": "24230:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "24205:615:20"
                }
              ]
            },
            "documentation": {
              "id": 1754,
              "nodeType": "StructuredDocumentation",
              "src": "23626:272:20",
              "text": " @notice  Used by the contract owners to claim the fees accrued\n @param   _tokenAddress List of tokens to withdraw the fees\n @param   _amounts List of amounts that will be withdrawn\n @param   _receiver Address that will receive the fees"
            },
            "functionSelector": "31f91a84",
            "id": 1848,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1764,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2693,
                  "src": "24016:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "24016:9:20"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "23912:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "23944:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "23925:32:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1755,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23925:7:20",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1756,
                    "nodeType": "ArrayTypeName",
                    "src": "23925:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "23978:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "23959:27:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1758,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23959:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1759,
                    "nodeType": "ArrayTypeName",
                    "src": "23959:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1762,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "23996:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "23988:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23988:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23924:82:20"
            },
            "returnParameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24026:0:20"
            },
            "scope": 1986,
            "src": "23903:923:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1869,
              "nodeType": "Block",
              "src": "25188:120:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1858,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "25206:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1859,
                          "name": "raffleCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "25219:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25206:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520494420646f6573206e6f74206578697374",
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25234:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5870b335c37ff0e645e0c7a8904b63ed94063b4f4944c48a5d790a078657a0aa",
                          "typeString": "literal_string \"The raffle ID does not exist\""
                        },
                        "value": "The raffle ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5870b335c37ff0e645e0c7a8904b63ed94063b4f4944c48a5d790a078657a0aa",
                          "typeString": "literal_string \"The raffle ID does not exist\""
                        }
                      ],
                      "id": 1857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25198:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25198:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "25198:67:20"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1864,
                          "name": "raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "25282:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                            "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                          }
                        },
                        "id": 1866,
                        "indexExpression": {
                          "id": 1865,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "25290:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25282:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                          "typeString": "struct Raffle.RaffleData storage ref"
                        }
                      }
                    ],
                    "id": 1867,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25281:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                      "typeString": "struct Raffle.RaffleData storage ref"
                    }
                  },
                  "functionReturnParameters": 1856,
                  "id": 1868,
                  "nodeType": "Return",
                  "src": "25275:26:20"
                }
              ]
            },
            "documentation": {
              "id": 1849,
              "nodeType": "StructuredDocumentation",
              "src": "24832:243:20",
              "text": "############################################################################################\n                 VIEW FUNCTIONS\n  ############################################################################################"
            },
            "functionSelector": "a080dffe",
            "id": 1870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRaffleDetails",
            "nameLocation": "25111:16:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "25136:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "25128:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25128:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25127:19:20"
            },
            "returnParameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "25169:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                    "typeString": "struct Raffle.RaffleData"
                  },
                  "typeName": {
                    "id": 1854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1853,
                      "name": "RaffleData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61,
                      "src": "25169:10:20"
                    },
                    "referencedDeclaration": 61,
                    "src": "25169:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                      "typeString": "struct Raffle.RaffleData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25168:19:20"
            },
            "scope": 1986,
            "src": "25102:206:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "25392:132:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1879,
                          "name": "_raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1872,
                          "src": "25410:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1880,
                          "name": "raffleCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "25423:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25410:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520494420646f6573206e6f74206578697374",
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25438:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5870b335c37ff0e645e0c7a8904b63ed94063b4f4944c48a5d790a078657a0aa",
                          "typeString": "literal_string \"The raffle ID does not exist\""
                        },
                        "value": "The raffle ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5870b335c37ff0e645e0c7a8904b63ed94063b4f4944c48a5d790a078657a0aa",
                          "typeString": "literal_string \"The raffle ID does not exist\""
                        }
                      ],
                      "id": 1878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25402:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25402:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1884,
                  "nodeType": "ExpressionStatement",
                  "src": "25402:67:20"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1885,
                            "name": "raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "25486:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                              "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                            }
                          },
                          "id": 1887,
                          "indexExpression": {
                            "id": 1886,
                            "name": "_raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1872,
                            "src": "25494:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25486:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                            "typeString": "struct Raffle.RaffleData storage ref"
                          }
                        },
                        "id": 1888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raffleState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "25486:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RaffleState_$29",
                          "typeString": "enum Raffle.RaffleState"
                        }
                      }
                    ],
                    "id": 1889,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25485:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "functionReturnParameters": 1877,
                  "id": 1890,
                  "nodeType": "Return",
                  "src": "25479:38:20"
                }
              ]
            },
            "functionSelector": "566777cc",
            "id": 1892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRaffleState",
            "nameLocation": "25323:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "25346:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "25338:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25338:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25337:19:20"
            },
            "returnParameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "25379:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$29",
                    "typeString": "enum Raffle.RaffleState"
                  },
                  "typeName": {
                    "id": 1875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1874,
                      "name": "RaffleState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29,
                      "src": "25379:11:20"
                    },
                    "referencedDeclaration": 29,
                    "src": "25379:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$29",
                      "typeString": "enum Raffle.RaffleState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25378:13:20"
            },
            "scope": 1986,
            "src": "25314:210:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1921,
              "nodeType": "Block",
              "src": "25630:171:20",
              "statements": [
                {
                  "assignments": [
                    1902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1902,
                      "mutability": "mutable",
                      "name": "ticketOwner",
                      "nameLocation": "25648:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1921,
                      "src": "25640:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1901,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25640:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1908,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1903,
                        "name": "raffleTickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "25662:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => address))"
                        }
                      },
                      "id": 1905,
                      "indexExpression": {
                        "id": 1904,
                        "name": "_raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1894,
                        "src": "25676:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25662:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1907,
                    "indexExpression": {
                      "id": 1906,
                      "name": "_ticketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1896,
                      "src": "25687:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25662:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25640:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1910,
                          "name": "ticketOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1902,
                          "src": "25715:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25738:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25730:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1911,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25730:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25730:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25715:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b657420646f6573206e6f74206578697374",
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25742:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6f881daf5493586c926ea43bd0ebb26ff4526882566b22789a554ce14dd04a",
                          "typeString": "literal_string \"Ticket does not exist\""
                        },
                        "value": "Ticket does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6f881daf5493586c926ea43bd0ebb26ff4526882566b22789a554ce14dd04a",
                          "typeString": "literal_string \"Ticket does not exist\""
                        }
                      ],
                      "id": 1909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25707:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25707:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "25707:59:20"
                },
                {
                  "expression": {
                    "id": 1919,
                    "name": "ticketOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1902,
                    "src": "25783:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1900,
                  "id": 1920,
                  "nodeType": "Return",
                  "src": "25776:18:20"
                }
              ]
            },
            "functionSelector": "b3b745a6",
            "id": 1922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRaffleTicketOwner",
            "nameLocation": "25540:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "_raffleId",
                  "nameLocation": "25569:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1922,
                  "src": "25561:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25561:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "_ticketId",
                  "nameLocation": "25588:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1922,
                  "src": "25580:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25580:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25560:38:20"
            },
            "returnParameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1922,
                  "src": "25621:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25621:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25620:9:20"
            },
            "scope": 1986,
            "src": "25531:270:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1933,
              "nodeType": "Block",
              "src": "25887:58:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1929,
                      "name": "whitelistedCurrencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "25904:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1931,
                    "indexExpression": {
                      "id": 1930,
                      "name": "_erc20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "25926:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25904:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1928,
                  "id": 1932,
                  "nodeType": "Return",
                  "src": "25897:41:20"
                }
              ]
            },
            "functionSelector": "43b938c5",
            "id": 1934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCurrencyWhitelisted",
            "nameLocation": "25816:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1924,
                  "mutability": "mutable",
                  "name": "_erc20Token",
                  "nameLocation": "25846:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1934,
                  "src": "25838:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25838:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25837:21:20"
            },
            "returnParameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1934,
                  "src": "25881:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25881:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25880:6:20"
            },
            "scope": 1986,
            "src": "25807:138:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "26121:330:20",
              "statements": [
                {
                  "assignments": [
                    1945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1945,
                      "mutability": "mutable",
                      "name": "activeRaffles",
                      "nameLocation": "26151:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1984,
                      "src": "26131:33:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Raffle.RaffleData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1943,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1942,
                            "name": "RaffleData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 61,
                            "src": "26131:10:20"
                          },
                          "referencedDeclaration": 61,
                          "src": "26131:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                            "typeString": "struct Raffle.RaffleData"
                          }
                        },
                        "id": 1944,
                        "nodeType": "ArrayTypeName",
                        "src": "26131:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_storage_$dyn_storage_ptr",
                          "typeString": "struct Raffle.RaffleData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1946,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26131:33:20"
                },
                {
                  "assignments": [
                    1948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1948,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "26182:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1984,
                      "src": "26174:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1947,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26174:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1950,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "26190:1:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26174:17:20"
                },
                {
                  "body": {
                    "id": 1980,
                    "nodeType": "Block",
                    "src": "26241:174:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RaffleState_$29",
                            "typeString": "enum Raffle.RaffleState"
                          },
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1960,
                                "name": "raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "26259:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                                  "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                                }
                              },
                              "id": 1962,
                              "indexExpression": {
                                "id": 1961,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1952,
                                "src": "26267:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26259:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                                "typeString": "struct Raffle.RaffleData storage ref"
                              }
                            },
                            "id": 1963,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "raffleState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "26259:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleState_$29",
                              "typeString": "enum Raffle.RaffleState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1964,
                              "name": "RaffleState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "26285:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RaffleState_$29_$",
                                "typeString": "type(enum Raffle.RaffleState)"
                              }
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "IN_PROGRESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "26285:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RaffleState_$29",
                              "typeString": "enum Raffle.RaffleState"
                            }
                          },
                          "src": "26259:49:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1979,
                        "nodeType": "IfStatement",
                        "src": "26255:150:20",
                        "trueBody": {
                          "id": 1978,
                          "nodeType": "Block",
                          "src": "26310:95:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 1973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1967,
                                    "name": "activeRaffles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1945,
                                    "src": "26328:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Raffle.RaffleData memory[] memory"
                                    }
                                  },
                                  "id": 1969,
                                  "indexExpression": {
                                    "id": 1968,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1948,
                                    "src": "26342:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "26328:22:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                    "typeString": "struct Raffle.RaffleData memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1970,
                                    "name": "raffles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70,
                                    "src": "26353:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RaffleData_$61_storage_$",
                                      "typeString": "mapping(uint256 => struct Raffle.RaffleData storage ref)"
                                    }
                                  },
                                  "id": 1972,
                                  "indexExpression": {
                                    "id": 1971,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1952,
                                    "src": "26361:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26353:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RaffleData_$61_storage",
                                    "typeString": "struct Raffle.RaffleData storage ref"
                                  }
                                },
                                "src": "26328:35:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RaffleData_$61_memory_ptr",
                                  "typeString": "struct Raffle.RaffleData memory"
                                }
                              },
                              "id": 1974,
                              "nodeType": "ExpressionStatement",
                              "src": "26328:35:20"
                            },
                            {
                              "expression": {
                                "id": 1976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "26381:9:20",
                                "subExpression": {
                                  "id": 1975,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1948,
                                  "src": "26383:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1977,
                              "nodeType": "ExpressionStatement",
                              "src": "26381:9:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1954,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "26217:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1955,
                      "name": "raffleCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "26221:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26217:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1981,
                  "initializationExpression": {
                    "assignments": [
                      1952
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1952,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "26214:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 1981,
                        "src": "26206:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1951,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26206:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1953,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "26206:9:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "26236:3:20",
                      "subExpression": {
                        "id": 1957,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "26238:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1959,
                    "nodeType": "ExpressionStatement",
                    "src": "26236:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "26201:214:20"
                },
                {
                  "expression": {
                    "id": 1982,
                    "name": "activeRaffles",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1945,
                    "src": "26431:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Raffle.RaffleData memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1940,
                  "id": 1983,
                  "nodeType": "Return",
                  "src": "26424:20:20"
                }
              ]
            },
            "functionSelector": "3dc70c16",
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveRaffles",
            "nameLocation": "26059:16:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26075:2:20"
            },
            "returnParameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "26100:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Raffle.RaffleData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1937,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1936,
                        "name": "RaffleData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 61,
                        "src": "26100:10:20"
                      },
                      "referencedDeclaration": 61,
                      "src": "26100:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RaffleData_$61_storage_ptr",
                        "typeString": "struct Raffle.RaffleData"
                      }
                    },
                    "id": 1938,
                    "nodeType": "ArrayTypeName",
                    "src": "26100:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RaffleData_$61_storage_$dyn_storage_ptr",
                      "typeString": "struct Raffle.RaffleData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26099:21:20"
            },
            "scope": 1986,
            "src": "26050:401:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1987,
        "src": "587:25866:20",
        "usedErrors": []
      }
    ],
    "src": "32:26422:20"
  },
  "bytecode": "",
  "bytecodeSha1": "077b317c654a603b371948bd71eb0597524085ad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Raffle",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "233": [
            2082,
            2104,
            true
          ]
        }
      },
      "1": {},
      "11": {
        "Address._verifyCallResult": {
          "230": [
            7226,
            7233,
            false
          ],
          "231": [
            7367,
            7388,
            false
          ]
        }
      },
      "12": {},
      "14": {
        "MerkleProof.verify": {
          "232": [
            749,
            777,
            false
          ]
        }
      },
      "16": {},
      "17": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "236": [
            9667,
            9695,
            true
          ]
        }
      },
      "18": {},
      "2": {},
      "20": {
        "Raffle._handleEtherTransfer": {
          "227": [
            21968,
            22000,
            true
          ],
          "228": [
            22236,
            22243,
            false
          ]
        },
        "Raffle._requestRandomness": {
          "229": [
            20735,
            20775,
            true
          ]
        },
        "Raffle.blacklistCurrency": {
          "188": [
            23429,
            23470,
            true
          ]
        },
        "Raffle.buyRaffleTicket": {
          "197": [
            11734,
            11770,
            true
          ],
          "198": [
            11819,
            11854,
            true
          ],
          "199": [
            11937,
            11978,
            true
          ],
          "200": [
            12030,
            12079,
            true
          ],
          "201": [
            12131,
            12182,
            true
          ],
          "202": [
            12221,
            12294,
            true
          ],
          "203": [
            12389,
            12422,
            false
          ],
          "204": [
            12446,
            12505,
            true
          ]
        },
        "Raffle.buyWhitelistedRaffleTicket": {
          "214": [
            13520,
            13556,
            true
          ],
          "215": [
            13716,
            13757,
            true
          ],
          "216": [
            13809,
            13858,
            true
          ],
          "217": [
            13910,
            13961,
            true
          ],
          "218": [
            14000,
            14073,
            true
          ],
          "219": [
            14206,
            14267,
            true
          ],
          "220": [
            14336,
            14369,
            false
          ],
          "221": [
            14393,
            14452,
            true
          ]
        },
        "Raffle.cancelRaffle": {
          "190": [
            9247,
            9273,
            true
          ],
          "191": [
            9376,
            9412,
            true
          ],
          "192": [
            9474,
            9523,
            true
          ],
          "193": [
            9575,
            9601,
            true
          ],
          "194": [
            9952,
            9994,
            false
          ],
          "195": [
            10273,
            10314,
            false
          ],
          "196": [
            10397,
            10435,
            false
          ]
        },
        "Raffle.claimCancelledRaffle": {
          "170": [
            19705,
            19751,
            true
          ],
          "171": [
            19884,
            19936,
            true
          ],
          "172": [
            20156,
            20189,
            false
          ]
        },
        "Raffle.claimRaffle": {
          "184": [
            17501,
            17548,
            true
          ],
          "185": [
            17892,
            17934,
            false
          ],
          "186": [
            18068,
            18109,
            false
          ],
          "187": [
            18810,
            18838,
            false
          ]
        },
        "Raffle.completeRaffle": {
          "173": [
            15408,
            15444,
            true
          ],
          "174": [
            15493,
            15542,
            true
          ],
          "175": [
            15594,
            15646,
            false
          ],
          "176": [
            15669,
            15711,
            true
          ],
          "177": [
            15824,
            15878,
            false
          ],
          "178": [
            15960,
            16002,
            false
          ],
          "179": [
            16164,
            16205,
            false
          ]
        },
        "Raffle.createERC20Raffle": {
          "207": [
            7373,
            7409,
            true
          ],
          "208": [
            7473,
            7505,
            true
          ],
          "209": [
            7560,
            7580,
            true
          ],
          "210": [
            7639,
            7665,
            true
          ],
          "211": [
            7717,
            7744,
            false
          ],
          "212": [
            7768,
            7836,
            true
          ],
          "213": [
            8036,
            8094,
            true
          ]
        },
        "Raffle.createERC721Raffle": {
          "222": [
            4624,
            4677,
            true
          ],
          "223": [
            4723,
            4755,
            true
          ],
          "224": [
            4810,
            4830,
            true
          ],
          "225": [
            4889,
            4915,
            true
          ],
          "226": [
            5088,
            5146,
            true
          ]
        },
        "Raffle.getActiveRaffles": {
          "183": [
            26259,
            26308,
            false
          ]
        },
        "Raffle.getRaffleDetails": {
          "206": [
            25206,
            25232,
            true
          ]
        },
        "Raffle.getRaffleState": {
          "189": [
            25410,
            25436,
            true
          ]
        },
        "Raffle.whitelistCurrency": {
          "205": [
            23019,
            23061,
            true
          ]
        },
        "Raffle.withdrawFees": {
          "180": [
            24088,
            24110,
            true
          ],
          "181": [
            24336,
            24380,
            true
          ],
          "182": [
            24417,
            24443,
            false
          ]
        }
      },
      "22": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "234": [
            3550,
            3571,
            false
          ],
          "235": [
            3679,
            3709,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "2": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "75": [
            1764,
            1809
          ],
          "76": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "118": [
            2074,
            2147
          ],
          "119": [
            2157,
            2200
          ],
          "120": [
            2210,
            2227
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "151": [
            1866,
            1880
          ],
          "152": [
            1890,
            1915
          ]
        },
        "Pausable._unpause": {
          "153": [
            2112,
            2127
          ],
          "154": [
            2137,
            2164
          ]
        },
        "Pausable.paused": {
          "1": [
            1105,
            1119
          ]
        }
      },
      "11": {
        "Address._verifyCallResult": {
          "168": [
            7249,
            7266
          ],
          "169": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "165": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "166": [
            4842,
            4902
          ],
          "167": [
            5057,
            5116
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "20": [
            658,
            675
          ]
        }
      },
      "14": {
        "MerkleProof.verify": {
          "155": [
            875,
            945
          ],
          "156": [
            1062,
            1132
          ],
          "157": [
            680,
            683
          ],
          "158": [
            1242,
            1269
          ]
        }
      },
      "16": {},
      "17": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "80": [
            9659,
            9731
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "160": [
            7833,
            7920
          ],
          "162": [
            8662,
            8701
          ],
          "163": [
            8707,
            8746
          ]
        }
      },
      "18": {
        "VRFRequestIDBase.makeRequestId": {
          "164": [
            1518,
            1577
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "161": [
            953,
            1031
          ]
        }
      },
      "2": {},
      "20": {
        "Raffle._handleEtherTransfer": {
          "142": [
            21960,
            22035
          ],
          "143": [
            22259,
            22289
          ],
          "144": [
            22303,
            22353
          ]
        },
        "Raffle._requestRandomness": {
          "147": [
            20727,
            20795
          ],
          "148": [
            20865,
            20910
          ],
          "149": [
            20920,
            21001
          ],
          "150": [
            21011,
            21062
          ]
        },
        "Raffle.blacklistCurrency": {
          "45": [
            23421,
            23499
          ],
          "46": [
            23509,
            23558
          ],
          "47": [
            23568,
            23613
          ]
        },
        "Raffle.buyRaffleTicket": {
          "64": [
            11726,
            11801
          ],
          "65": [
            11811,
            11919
          ],
          "66": [
            11929,
            12012
          ],
          "67": [
            12022,
            12113
          ],
          "68": [
            12123,
            12203
          ],
          "69": [
            12213,
            12345
          ],
          "70": [
            12437,
            12542
          ],
          "71": [
            12581,
            12698
          ],
          "72": [
            12817,
            12882
          ],
          "73": [
            12799,
            12802
          ],
          "74": [
            12902,
            12952
          ]
        },
        "Raffle.buyWhitelistedRaffleTicket": {
          "106": [
            13512,
            13587
          ],
          "107": [
            13597,
            13698
          ],
          "108": [
            13708,
            13791
          ],
          "109": [
            13801,
            13892
          ],
          "110": [
            13902,
            13982
          ],
          "111": [
            13992,
            14124
          ],
          "112": [
            14198,
            14292
          ],
          "113": [
            14384,
            14489
          ],
          "114": [
            14528,
            14645
          ],
          "115": [
            14764,
            14829
          ],
          "116": [
            14746,
            14749
          ],
          "117": [
            14849,
            14899
          ]
        },
        "Raffle.cancelRaffle": {
          "50": [
            9239,
            9299
          ],
          "51": [
            9368,
            9456
          ],
          "52": [
            9466,
            9557
          ],
          "53": [
            9567,
            9638
          ],
          "54": [
            9691,
            9716
          ],
          "55": [
            9755,
            9808
          ],
          "56": [
            9818,
            9899
          ],
          "57": [
            10010,
            10121
          ],
          "58": [
            10135,
            10248
          ],
          "59": [
            10514,
            10562
          ],
          "60": [
            10614,
            10718
          ],
          "61": [
            10746,
            10848
          ],
          "62": [
            11177,
            11249
          ],
          "63": [
            11259,
            11311
          ]
        },
        "Raffle.claimCancelledRaffle": {
          "4": [
            19697,
            19787
          ],
          "5": [
            19876,
            19970
          ],
          "6": [
            19984,
            20035
          ],
          "7": [
            19858,
            19861
          ],
          "8": [
            20204,
            20249
          ],
          "9": [
            20287,
            20352
          ]
        },
        "Raffle.claimRaffle": {
          "33": [
            17408,
            17483
          ],
          "34": [
            17493,
            17586
          ],
          "35": [
            17597,
            17641
          ],
          "36": [
            17651,
            17729
          ],
          "37": [
            17949,
            18044
          ],
          "38": [
            18223,
            18277
          ],
          "39": [
            18327,
            18425
          ],
          "40": [
            18625,
            18649
          ],
          "41": [
            18713,
            18756
          ],
          "42": [
            18885,
            18937
          ],
          "43": [
            19009,
            19076
          ],
          "44": [
            19141,
            19229
          ]
        },
        "Raffle.completeRaffle": {
          "10": [
            15400,
            15475
          ],
          "11": [
            15485,
            15580
          ],
          "12": [
            15661,
            15739
          ],
          "13": [
            16021,
            16132
          ],
          "14": [
            16224,
            16338
          ],
          "15": [
            16444,
            16559
          ],
          "16": [
            16573,
            16626
          ],
          "17": [
            16640,
            16721
          ],
          "18": [
            16930,
            16960
          ],
          "19": [
            16974,
            17021
          ]
        },
        "Raffle.createERC20Raffle": {
          "87": [
            7365,
            7455
          ],
          "88": [
            7465,
            7542
          ],
          "89": [
            7552,
            7621
          ],
          "90": [
            7631,
            7698
          ],
          "91": [
            7760,
            7870
          ],
          "92": [
            8028,
            8124
          ],
          "93": [
            8185,
            8259
          ],
          "94": [
            8346,
            8386
          ],
          "95": [
            8396,
            8431
          ],
          "96": [
            8441,
            8489
          ],
          "97": [
            8499,
            8539
          ],
          "98": [
            8549,
            8583
          ],
          "99": [
            8593,
            8624
          ],
          "100": [
            8634,
            8677
          ],
          "101": [
            8687,
            8722
          ],
          "102": [
            8732,
            8803
          ],
          "103": [
            8813,
            8858
          ],
          "104": [
            8869,
            8920
          ],
          "105": [
            8931,
            8996
          ]
        },
        "Raffle.createERC721Raffle": {
          "121": [
            4616,
            4705
          ],
          "122": [
            4715,
            4792
          ],
          "123": [
            4802,
            4871
          ],
          "124": [
            4881,
            4946
          ],
          "125": [
            5080,
            5176
          ],
          "126": [
            5236,
            5307
          ],
          "127": [
            5384,
            5425
          ],
          "128": [
            5435,
            5470
          ],
          "129": [
            5480,
            5528
          ],
          "130": [
            5538,
            5579
          ],
          "131": [
            5589,
            5622
          ],
          "132": [
            5632,
            5663
          ],
          "133": [
            5673,
            5716
          ],
          "134": [
            5726,
            5761
          ],
          "135": [
            5771,
            5842
          ],
          "136": [
            5852,
            5897
          ],
          "137": [
            5907,
            5958
          ],
          "138": [
            5969,
            6035
          ]
        },
        "Raffle.fulfillRandomness": {
          "139": [
            21294,
            21340
          ],
          "140": [
            21350,
            21428
          ],
          "141": [
            21539,
            21602
          ]
        },
        "Raffle.fulfillRandomnessTest": {
          "3": [
            21737,
            21777
          ]
        },
        "Raffle.getActiveRaffles": {
          "29": [
            26328,
            26363
          ],
          "30": [
            26381,
            26390
          ],
          "31": [
            26236,
            26239
          ],
          "32": [
            26424,
            26444
          ]
        },
        "Raffle.getRaffleDetails": {
          "81": [
            25198,
            25265
          ],
          "82": [
            25275,
            25301
          ]
        },
        "Raffle.getRaffleState": {
          "48": [
            25402,
            25469
          ],
          "49": [
            25479,
            25517
          ]
        },
        "Raffle.getRaffleTicketOwner": {
          "83": [
            25707,
            25766
          ],
          "84": [
            25776,
            25794
          ]
        },
        "Raffle.isCurrencyWhitelisted": {
          "0": [
            25897,
            25938
          ]
        },
        "Raffle.togglePause": {
          "85": [
            22780,
            22788
          ],
          "86": [
            22803,
            22813
          ]
        },
        "Raffle.whitelistCurrency": {
          "77": [
            23011,
            23094
          ],
          "78": [
            23104,
            23152
          ],
          "79": [
            23162,
            23205
          ]
        },
        "Raffle.withdrawFees": {
          "21": [
            24080,
            24141
          ],
          "22": [
            24249,
            24280
          ],
          "23": [
            24294,
            24314
          ],
          "24": [
            24328,
            24400
          ],
          "25": [
            24462,
            24501
          ],
          "26": [
            24551,
            24603
          ],
          "27": [
            24751,
            24795
          ],
          "28": [
            24230,
            24233
          ]
        }
      },
      "22": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "159": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "145": [
            716,
            802
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "146": [
            915,
            1011
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721",
    "IWETH",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeERC20",
    "smartcontractkit/chainlink@1.1.0/VRFConsumerBase",
    "smartcontractkit/chainlink@1.1.0/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "587:25866:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:32;;;;;;;;;;;;;;;;;;160:25:25;;;148:2;133:18;1867:32:20;;;;;;;;21648:136;;;;;;;;;;-1:-1:-1;21648:136:20;;;;;:::i;:::-;;:::i;:::-;;19514:855;;;;;;;;;;-1:-1:-1;19514:855:20;;;;;:::i;:::-;;:::i;15265:1773::-;;;;;;;;;;-1:-1:-1;15265:1773:20;;;;;:::i;:::-;;:::i;23903:923::-;;;;;;;;;;-1:-1:-1;23903:923:20;;;;;:::i;:::-;;:::i;1530:68::-;;;;;;;;;;-1:-1:-1;1530:68:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1530:68:20;;;;;;-1:-1:-1;;;;;3091:32:25;;;3073:51;;3061:2;3046:18;1530:68:20;2927:203:25;26050:401:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17262:1974::-;;;;;;;;;;-1:-1:-1;17262:1974:20;;;;;:::i;:::-;;:::i;2054:34::-;;;;;;;;;;;;;;;;1347:53;;;;;;;;;;-1:-1:-1;1347:53:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6231:14:25;;6224:22;6206:41;;6194:2;6179:18;1347:53:20;6066:187:25;25807:138:20;;;;;;;;;;-1:-1:-1;25807:138:20;;;;;:::i;:::-;-1:-1:-1;;;;;25904:34:20;25881:4;25904:34;;;:21;:34;;;;;;;;;25807:138;23337:283;;;;;;;;;;-1:-1:-1;23337:283:20;;;;;:::i;:::-;;:::i;25314:210::-;;;;;;;;;;-1:-1:-1;25314:210:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1042:84:1:-;;;;;;;;;;-1:-1:-1;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1042:84;;1436:45:20;;;;;;;;;;-1:-1:-1;1436:45:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1436:45:20;;;;;;;;;;;;;-1:-1:-1;;;1436:45:20;;;;;-1:-1:-1;;;1436:45:20;;;;;;;;;;-1:-1:-1;;;;;1436:45:20;;;;-1:-1:-1;;;1436:45:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9153:2165::-;;;;;;;;;;-1:-1:-1;9153:2165:20;;;;;:::i;:::-;;:::i;11556:1405::-;;;;;;:::i;:::-;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;1825:36:20:-;;;;;;;;;;;;;;;22927:285;;;;;;;;;;-1:-1:-1;22927:285:20;;;;;:::i;:::-;;:::i;1068:85:0:-;;;;;;;;;;-1:-1:-1;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;;9575:207:17;;;;;;;;;;-1:-1:-1;9575:207:17;;;;;:::i;:::-;;:::i;25102:206:20:-;;;;;;;;;;-1:-1:-1;25102:206:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2266:55::-;;;;;;;;;;-1:-1:-1;2266:55:20;;;;;:::i;:::-;;;;;;;;;;;;;;25531:270;;;;;;;;;;-1:-1:-1;25531:270:20;;;;;:::i;:::-;;:::i;1749:28::-;;;;;;;;;;;;;;;;22713:107;;;;;;;;;;;;;:::i;7109:1894::-;;;;;;:::i;:::-;;:::i;2094:38::-;;;;;;;;;;;;;;;;13298:1609;;;;;;:::i;:::-;;:::i;1994:240:0:-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;4359:1683:20:-;;;;;;:::i;:::-;;:::i;21648:136::-;21737:40;21755:9;21766:10;21737:17;:40::i;:::-;21648:136;;:::o;19514:855::-;1680:1:2;2260:7;;:19;2252:63;;;;-1:-1:-1;;;2252:63:2;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9:::1;1347:38;;;;-1:-1:-1::0;;;1347:38:1::1;;;;;;;:::i;:::-;19638:28:20::2;19669:18:::0;;;:7:::2;:18;::::0;;;;;;;19638:49;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;19638:49:20;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;19669:18;;19638:49;;;;-1:-1:-1;;;19638:49:20;;::::2;;;::::0;;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;19638:49:20::2;::::0;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;19638:49:20;;::::2;::::0;;;;-1:-1:-1;;;19638:49:20;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;;::::0;;;;;;-1:-1:-1;19705:10:20::2;:22;;;:46;;;;;;;;:::i;:::-;;19697:90;;;::::0;-1:-1:-1;;;19697:90:20;;10974:2:25;19697:90:20::2;::::0;::::2;10956:21:25::0;11013:2;10993:18;;;10986:30;11052:33;11032:18;;;11025:61;11103:18;;19697:90:20::2;10772:355:25::0;19697:90:20::2;19811:9:::0;19797:11:::2;19837:209;19853:3;19849:1;:7;19837:209;;;19884:24;::::0;;;:13:::2;:24;::::0;;;;19926:10:::2;::::0;19909:9;;19919:1;19909:12;;::::2;;;;;:::i;:::-;;::::0;;::::2;::::0;;;::::2;;19884:38:::0;;-1:-1:-1;19884:38:20;::::2;::::0;;;;;;-1:-1:-1;19884:38:20;;-1:-1:-1;;;;;19884:38:20::2;:52;19876:94;;;::::0;-1:-1:-1;;;19876:94:20;;11466:2:25;19876:94:20::2;::::0;::::2;11448:21:25::0;11505:2;11485:18;;;11478:30;11544:31;11524:18;;;11517:59;11593:18;;19876:94:20::2;11264:353:25::0;19876:94:20::2;20033:1;19984:24:::0;;;:13:::2;:24;::::0;;;;20033:1;20009:9;;20019:1;20009:12;;::::2;;;;;:::i;:::-;;;;;;;19984:38;;;;;;;;;;;;:51;;;;;-1:-1:-1::0;;;;;19984:51:20::2;;;;;-1:-1:-1::0;;;;;19984:51:20::2;;;;;;19858:3;;;;:::i;:::-;;;19837:209;;;-1:-1:-1::0;20055:19:20::2;20114:27;2024:9;20114:3:::0;:27:::2;:::i;:::-;20084:25;::::0;::::2;::::0;20078:31:::2;::::0;:3;:31:::2;:::i;:::-;20077:65;;;;:::i;:::-;20156:19;::::0;::::2;::::0;20055:87;;-1:-1:-1;;;;;;20156:33:20::2;20152:211;;20204:45;20225:10;20237:11;20204:20;:45::i;:::-;20152:211;;;20294:19;::::0;::::2;::::0;20287:65:::2;::::0;-1:-1:-1;;;;;20287:40:20::2;20328:10;20340:11:::0;20287:40:::2;:65::i;:::-;-1:-1:-1::0;;1637:1:2;2563:22;;-1:-1:-1;;;;19514:855:20:o;15265:1773::-;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;15341:28:20::1;15372:18:::0;;;:7:::1;:18;::::0;;;;;;;15341:49;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;15341:49:20;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;15372:18;;15341:49;;;;-1:-1:-1;;;15341:49:20;;::::1;;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;15341:49:20;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;15341:49:20;;::::1;::::0;;;;-1:-1:-1;;;15341:49:20;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;;;;;15408:22;::::1;::::0;15341:49;;-1:-1:-1;15408:36:20::1;15400:75;;;;-1:-1:-1::0;;;15400:75:20::1;;;;;;;:::i;:::-;15519:23;15493:10;:22;;;:49;;;;;;;;:::i;:::-;;15485:95;;;;-1:-1:-1::0;;;15485:95:20::1;;;;;;;:::i;:::-;15620:10;:26;;;-1:-1:-1::0;;;;;15594:52:20::1;:10;:22;;;-1:-1:-1::0;;;;;15594:52:20::1;;15590:160;;15688:10;:23;;;-1:-1:-1::0;;;;;15669:42:20::1;:15;:42;;15661:78;;;::::0;-1:-1:-1;;;15661:78:20;;13159:2:25;15661:78:20::1;::::0;::::1;13141:21:25::0;13198:2;13178:18;;;13171:30;13237:25;13217:18;;;13210:53;13280:18;;15661:78:20::1;12957:347:25::0;15661:78:20::1;15849:10;:29;;;-1:-1:-1::0;;;;;15824:54:20::1;:10;:22;;;-1:-1:-1::0;;;;;15824:54:20::1;;15820:1212;;;15985:17;15960:10;:21;;;:42;;;;;;;;:::i;:::-;::::0;15956:191:::1;;16029:24:::0;;16083:22:::1;::::0;::::1;::::0;16107:24:::1;::::0;::::1;::::0;16021:111:::1;::::0;-1:-1:-1;;;16021:111:20;;-1:-1:-1;;;;;16021:46:20;;::::1;::::0;::::1;::::0;:111:::1;::::0;16076:4:::1;::::0;16021:111:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15956:191;16189:16;16164:10;:21;;;:41;;;;;;;;:::i;:::-;::::0;16160:193:::1;;16289:22;::::0;::::1;::::0;16313:24:::1;::::0;::::1;::::0;16231;;16224:114:::1;::::0;-1:-1:-1;;;;;16224:49:20;;::::1;::::0;16282:4:::1;::::0;16289:22;16224:49:::1;:114::i;:::-;2024:9;16512:10;:22;;;16480:10;:29;;;:54;;;;:::i;:::-;-1:-1:-1::0;;;;;16479:80:20::1;;;;;:::i;:::-;16444:32:::0;:115;:32:::1;16573:18:::0;;;:7:::1;16444:32;16573:18:::0;16444:32;16573:18;;;:30:::1;;:53:::0;;-1:-1:-1;;;;16573:53:20::1;-1:-1:-1::0;;;16573:53:20::1;::::0;;16645:76;-1:-1:-1;;;;;;;;;;;16645:76:20;::::1;::::0;16573:18;;16444:32;16606:20:::1;::::0;16645:76:::1;:::i;:::-;;;;;;;;21648:136:::0;;:::o;15820:1212::-:1;16869:15;16887:29;16906:9;16887:18;:29::i;:::-;16869:47;;16935:25;16952:7;16935:25;;;;160::25::0;;148:2;133:18;;14:177;16935:25:20::1;;;;;;;;16974:35;::::0;;;:26:::1;:35;::::0;;;;:47;;;15331:1707:::1;15265:1773:::0;:::o;23903:923::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;24050:13:20;24088:22;;::::1;24080:61;;;::::0;-1:-1:-1;;;24080:61:20;;14893:2:25;24080:61:20::1;::::0;::::1;14875:21:25::0;14932:2;14912:18;;;14905:30;14971:28;14951:18;;;14944:56;15017:18;;24080:61:20::1;14691:350:25::0;24080:61:20::1;24151:14;24175:20:::0;24210:9:::1;24205:615;24225:3;24221:1;:7;24205:615;;;24264:13;;24278:1;24264:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;24249:31;;24303:8;;24312:1;24303:11;;;;;;;:::i;:::-;;;;;;;24294:20;;24346;:34;24367:12;-1:-1:-1::0;;;;;24346:34:20::1;-1:-1:-1::0;;;;;24346:34:20::1;;;;;;;;;;;;;24336:6;:44;;24328:72;;;::::0;-1:-1:-1;;;24328:72:20;;15248:2:25;24328:72:20::1;::::0;::::1;15230:21:25::0;15287:2;15267:18;;;15260:30;-1:-1:-1;;;15306:18:25;;;15299:45;15361:18;;24328:72:20::1;15046:339:25::0;24328:72:20::1;-1:-1:-1::0;;;;;24417:26:20;::::1;24414:204;;24462:39;24483:9;24494:6;24462:20;:39::i;:::-;24414:204;;;24551:52;-1:-1:-1::0;;;;;24551:33:20;::::1;24585:9:::0;24596:6;24551:33:::1;:52::i;:::-;-1:-1:-1::0;;;;;24751:34:20;::::1;;::::0;;;:20:::1;:34;::::0;;;;:44;;;;::::1;::::0;;24230:3:::1;::::0;::::1;:::i;:::-;;;24205:615;;;;24026:800;;;23903:923:::0;;;;;:::o;26050:401::-;26100:19;26131:33;26174:15;26206:9;26201:214;26221:13;;26217:1;:17;26201:214;;;26285:23;26259:10;;;:7;:10;;;;;;;:22;;;-1:-1:-1;;;26259:22:20;;;;;:49;;;;;;;:::i;:::-;;26255:150;;26353:10;;;;:7;:10;;;;;;;;;26328:35;;;;;;;;;-1:-1:-1;;;;;26328:35:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26353:10;26328:35;;;;-1:-1:-1;;;26328:35:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;26328:35:20;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26328:35:20;;;;;;;-1:-1:-1;;;26328:35:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:13;;26342:7;;26328:22;;;;;;:::i;:::-;;;;;;:35;;;;26381:9;;;;:::i;:::-;;;26255:150;26236:3;;;:::i;:::-;;;26201:214;;;-1:-1:-1;26431:13:20;;26050:401;-1:-1:-1;;26050:401:20:o;17262:1974::-;1680:1:2;2260:7;;:19;2252:63;;;;-1:-1:-1;;;2252:63:2;;;;;;;:::i;:::-;1680:1;2390:7;:18;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9:::1;1347:38;;;;-1:-1:-1::0;;;1347:38:1::1;;;;;;;:::i;:::-;17348:29:20::2;17380:18:::0;;;:7:::2;:18;::::0;;;;17416:22:::2;::::0;::::2;::::0;-1:-1:-1;;;;;17416:22:20::2;17408:75;;;;-1:-1:-1::0;;;17408:75:20::2;;;;;;;:::i;:::-;17527:21;17501:22:::0;;::::2;::::0;-1:-1:-1;;;17501:22:20;::::2;;;:47;::::0;::::2;;;;;;:::i;:::-;;17493:93;;;;-1:-1:-1::0;;;17493:93:20::2;;;;;;;:::i;:::-;17597:22;::::0;;::::2;:44:::0;;-1:-1:-1;;;;17597:44:20::2;-1:-1:-1::0;;;17597:44:20::2;::::0;;17656:73:::2;::::0;-1:-1:-1;;;;;;;;;;;17656:73:20;::::2;::::0;17675:9;;17597:22;17622:19:::2;::::0;17656:73:::2;:::i;:::-;;;;;;;;17762:22;::::0;::::2;::::0;17811:23:::2;::::0;::::2;::::0;-1:-1:-1;;;;;17762:22:20;;::::2;::::0;17811:23:::2;17740:19;17892:21;::::0;::::2;::::0;-1:-1:-1;;;17892:21:20;::::2;;;:42;::::0;::::2;;;;;;:::i;:::-;::::0;17888:167:::2;;17957:24:::0;;18019::::2;::::0;::::2;::::0;17949:95:::2;::::0;-1:-1:-1;;;17949:95:20;;-1:-1:-1;;;;;17957:24:20;;::::2;::::0;17949:46:::2;::::0;:95:::2;::::0;18004:4:::2;::::0;18011:6;;17949:95:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;17888:167;18093:16;18068:21;::::0;::::2;::::0;-1:-1:-1;;;18068:21:20;::::2;;;:41;::::0;::::2;;;;;;:::i;:::-;::::0;18064:386:::2;;18168:24:::0;;-1:-1:-1;;;;;18168:24:20::2;18164:276;;18223:54;18244:6;18252:10;:24;;;18223:20;:54::i;:::-;18164:276;;;18400:24;::::0;::::2;::::0;18334;;18327:98:::2;::::0;-1:-1:-1;;;;;18334:24:20;;::::2;::::0;18385:4:::2;::::0;18392:6;;18327:49:::2;:98::i;:::-;18513:25;::::0;::::2;::::0;18488:22:::2;::::0;::::2;::::0;18460:25:::2;::::0;18488:50:::2;::::0;-1:-1:-1;;;;;18488:22:20::2;:50;:::i;:::-;18460:78;;18548:11;18600:15;;18583:13;;18563:17;:33;;;;:::i;:::-;18562:53;;;;:::i;:::-;18548:67:::0;-1:-1:-1;18625:24:20::2;18548:67:::0;18625:24;::::2;:::i;:::-;18684:19;::::0;::::2;::::0;-1:-1:-1;;;;;18684:19:20::2;18659:22;18713:36:::0;;;:20:::2;:36;::::0;;;;:43;;18625:24;;-1:-1:-1;18684:19:20;;18753:3;;18713:36;18659:22;18713:43:::2;::::0;18753:3;;18713:43:::2;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;18810:28:20;::::2;18807:280;;18885:52;18906:11;18919:17;18885:20;:52::i;:::-;18807:280;;;19009:67;-1:-1:-1::0;;;;;19009:35:20;::::2;19045:11:::0;19058:17;19009:35:::2;:67::i;:::-;19199:29;::::0;::::2;::::0;19141:88:::2;::::0;19162:11;;19175:53:::2;::::0;-1:-1:-1;;;19199:29:20;::::2;-1:-1:-1::0;;;;;19199:29:20::2;2024:9;19175:53;:::i;:::-;19141:20;:88::i;:::-;-1:-1:-1::0;;1637:1:2;2563:22;;-1:-1:-1;;;;;17262:1974:20:o;23337:283::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;23429:41:20;::::1;;::::0;;;:21:::1;:41;::::0;;;;;::::1;;23421:78;;;::::0;-1:-1:-1;;;23421:78:20;;15979:2:25;23421:78:20::1;::::0;::::1;15961:21:25::0;16018:2;15998:18;;;15991:30;16057:26;16037:18;;;16030:54;16101:18;;23421:78:20::1;15777:348:25::0;23421:78:20::1;-1:-1:-1::0;;;;;23509:41:20;::::1;23553:5;23509:41:::0;;;:21:::1;:41;::::0;;;;;;;;:49;;-1:-1:-1;;23509:49:20::1;::::0;;23573:40;;3073:51:25;;;23573:40:20::1;::::0;3046:18:25;23573:40:20::1;;;;;;;;23337:283:::0;:::o;25314:210::-;25379:11;25423:13;;25410:9;:26;;25402:67;;;;-1:-1:-1;;;25402:67:20;;16332:2:25;25402:67:20;;;16314:21:25;16371:2;16351:18;;;16344:30;16410;16390:18;;;16383:58;16458:18;;25402:67:20;16130:352:25;25402:67:20;-1:-1:-1;25486:18:20;;;;:7;:18;;;;;:30;;;-1:-1:-1;;;25486:30:20;;;;;25314:210::o;9153:2165::-;1680:1:2;2260:7;;:19;2252:63;;;;-1:-1:-1;;;2252:63:2;;;;;;;:::i;:::-;1680:1;2390:7;:18;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9:::1;1347:38;;;;-1:-1:-1::0;;;1347:38:1::1;;;;;;;:::i;:::-;9260:13:20::2;;9247:9;:26;;9239:60;;;::::0;-1:-1:-1;;;9239:60:20;;16689:2:25;9239:60:20::2;::::0;::::2;16671:21:25::0;16728:2;16708:18;;;16701:30;-1:-1:-1;;;16747:18:25;;;16740:51;16808:18;;9239:60:20::2;16487:345:25::0;9239:60:20::2;9309:28;9340:18:::0;;;:7:::2;:18;::::0;;;;;;;9309:49;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;9309:49:20;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;9340:18;;9309:49;;;;-1:-1:-1;;;9309:49:20;;::::2;;;::::0;;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;9309:49:20;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;9309:49:20;;::::2;::::0;;;;-1:-1:-1;;;9309:49:20;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;;::::0;;;;;;;9390:22;::::2;::::0;;;-1:-1:-1;9376:36:20::2;:10;:36;9368:88;;;::::0;-1:-1:-1;;;9368:88:20;;17039:2:25;9368:88:20::2;::::0;::::2;17021:21:25::0;17078:2;17058:18;;;17051:30;17117:34;17097:18;;;17090:62;-1:-1:-1;;;17168:18:25;;;17161:37;17215:19;;9368:88:20::2;16837:403:25::0;9368:88:20::2;9500:23;9474:10;:22;;;:49;;;;;;;;:::i;:::-;;9466:91;;;;-1:-1:-1::0;;;9466:91:20::2;;;;;;;:::i;:::-;9600:1;9575:10;:22;;;-1:-1:-1::0;;;;;9575:26:20::2;;9567:71;;;::::0;-1:-1:-1;;;9567:71:20;;17805:2:25;9567:71:20::2;::::0;::::2;17787:21:25::0;;;17824:18;;;17817:30;17883:34;17863:18;;;17856:62;17935:18;;9567:71:20::2;17603:356:25::0;9567:71:20::2;9698:18;::::0;;;:7:::2;:18;::::0;;;;;;;9691:25;;-1:-1:-1;;;;;;9691:25:20;;::::2;::::0;;-1:-1:-1;9691:25:20;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;;;;;;9691:25:20;-1:-1:-1;;;9755:53:20::2;::::0;;9823:76;-1:-1:-1;;;;;;;;;;;9823:76:20;::::2;::::0;9698:18;;9823:76:::2;:::i;:::-;;;;;;;;9977:17;9952:10;:21;;;:42;;;;;;;;:::i;:::-;::::0;9948:311:::2;;10018:24:::0;;10072:22:::2;::::0;::::2;::::0;10096:24:::2;::::0;::::2;::::0;10010:111:::2;::::0;-1:-1:-1;;;10010:111:20;;-1:-1:-1;;;;;10010:46:20;;::::2;::::0;::::2;::::0;:111:::2;::::0;10065:4:::2;::::0;10010:111:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;10140:108;10162:9;10173:10;:22;;;10197:10;:24;;;10223:10;:24;;;10140:108;;;;;;;;18195:25:25::0;;;-1:-1:-1;;;;;18294:15:25;;;18289:2;18274:18;;18267:43;18346:15;;18341:2;18326:18;;18319:43;18393:2;18378:18;;18371:34;18182:3;18167:19;;17964:447;10140:108:20::2;;;;;;;;9948:311;10298:16;10273:10;:21;;;:41;;;;;;;;:::i;:::-;::::0;10269:590:::2;;10355:24;::::0;::::2;::::0;10397;;-1:-1:-1;;;;;10397:38:20::2;10393:340;;10514:48;10535:10;10547:14;10514:20;:48::i;:::-;10393:340;;;10679:22;::::0;::::2;::::0;10621:24;;10614:104:::2;::::0;-1:-1:-1;;;;;10614:49:20;;::::2;::::0;10672:4:::2;::::0;10703:14;10614:49:::2;:104::i;:::-;10783:22;::::0;::::2;::::0;10807:24;;10751:97:::2;::::0;::::2;::::0;::::2;::::0;10772:9;;10833:14;;18195:25:25;;;-1:-1:-1;;;;;18294:15:25;;;18289:2;18274:18;;18267:43;18346:15;;18341:2;18326:18;;18319:43;18393:2;18378:18;;18371:34;18182:3;18167:19;;17964:447;10751:97:20::2;;;;;;;;10316:543;10269:590;11018:23;11068:10;:29;;;-1:-1:-1::0;;;;;11044:53:20::2;2024:9;11044:53;;;;:::i;:::-;11018:79:::0;-1:-1:-1;11107:26:20::2;11162:5;11137:22;11018:79:::0;11155:4:::2;11137:22;:::i;:::-;:30;;;;:::i;:::-;11107:60:::0;-1:-1:-1;11213:36:20::2;11107:60:::0;11213:15;:36:::2;:::i;:::-;11177:32;::::0;;;:20:::2;:32;::::0;;:72;;:32;;;:72:::2;::::0;;;::::2;:::i;:::-;::::0;;;-1:-1:-1;11259:52:20::2;::::0;-1:-1:-1;11280:10:20::2;11292:18:::0;11259:20:::2;:52::i;:::-;-1:-1:-1::0;;1637:1:2;2563:22;;-1:-1:-1;;9153:2165:20:o;11556:1405::-;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;11667:28:20::1;11698:18:::0;;;:7:::1;:18;::::0;;;;;;;11667:49;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;11667:49:20;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;11698:18;;11667:49;;;;-1:-1:-1;;;11667:49:20;;::::1;;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;11667:49:20;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;11667:49:20;;::::1;::::0;;;;-1:-1:-1;;;11667:49:20;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;;;;;11734:22;::::1;::::0;11667:49;;-1:-1:-1;11734:36:20::1;11726:75;;;;-1:-1:-1::0;;;11726:75:20::1;;;;;;;:::i;:::-;11819:21;::::0;::::1;::::0;:35;11811:108:::1;;;::::0;-1:-1:-1;;;11811:108:20;;18618:2:25;11811:108:20::1;::::0;::::1;18600:21:25::0;18657:2;18637:18;;;18630:30;18696:34;18676:18;;;18669:62;18767:30;18747:18;;;18740:58;18815:19;;11811:108:20::1;18416:424:25::0;11811:108:20::1;11955:10;:23;;;-1:-1:-1::0;;;;;11937:41:20::1;:15;:41;11929:83;;;;-1:-1:-1::0;;;11929:83:20::1;;;;;;;:::i;:::-;12056:23;12030:10;:22;;;:49;;;;;;;;:::i;:::-;;12022:91;;;;-1:-1:-1::0;;;12022:91:20::1;;;;;;;:::i;:::-;12156:10;:26;;;-1:-1:-1::0;;;;;12131:51:20::1;:10;:22;;;-1:-1:-1::0;;;;;12131:51:20::1;;12123:80;;;::::0;-1:-1:-1;;;12123:80:20;;19047:2:25;12123:80:20::1;::::0;::::1;19029:21:25::0;19086:2;19066:18;;;19059:30;-1:-1:-1;;;19105:18:25;;;19098:46;19161:18;;12123:80:20::1;18845:340:25::0;12123:80:20::1;12271:10;:22;;;12242:10;:26;;;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12221:73:20::1;:16;-1:-1:-1::0;;;;;12221:73:20::1;;;12213:132;;;;-1:-1:-1::0;;;12213:132:20::1;;;;;;;:::i;:::-;12389:19;::::0;::::1;::::0;-1:-1:-1;;;;;12389:33:20::1;12385:324;;12479:25;::::0;::::1;::::0;12460:44:::1;::::0;-1:-1:-1;;;;;12460:44:20;::::1;;:::i;:::-;12446:9;:59;;12437:105;;;::::0;-1:-1:-1;;;12437:105:20;;19807:2:25;12437:105:20::1;::::0;::::1;19789:21:25::0;;;19826:18;;;19819:30;19885:34;19865:18;;;19858:62;19937:18;;12437:105:20::1;19605:356:25::0;12437:105:20::1;12385:324;;;12581:117;12626:10;12646:4;12672:10;:25;;;12653:16;-1:-1:-1::0;;;;;12653:44:20::1;;;;;:::i;:::-;12588:19;::::0;::::1;::::0;-1:-1:-1;;;;;12581:44:20::1;::::0;:117;;:44:::1;:117::i;:::-;12766:9;12761:132;12781:16;-1:-1:-1::0;;;;;12777:20:20::1;:1;:20;12761:132;;;12817:24;::::0;;;:13:::1;:24;::::0;;;;12842:22:::1;::::0;::::1;::::0;12872:10:::1;::::0;12817:24;12842:26:::1;::::0;12867:1;;-1:-1:-1;;;;;12842:26:20::1;;:::i;:::-;12817:52:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12817:52:20;:65;;-1:-1:-1;;;;;;12817:65:20::1;-1:-1:-1::0;;;;;12817:65:20;;;::::1;::::0;;;::::1;::::0;;12799:3:::1;::::0;::::1;:::i;:::-;;;12761:132;;;-1:-1:-1::0;12902:18:20::1;::::0;;;:7:::1;:18;::::0;;;;:30:::1;;:50:::0;;12936:16;;12902:18;:50:::1;::::0;12936:16;;-1:-1:-1;;;;;12902:50:20::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12902:50:20::1;;;;;-1:-1:-1::0;;;;;12902:50:20::1;;;;;;11657:1304;11556:1405:::0;;:::o;1700:145:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;22927:285:20:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;23020:41:20;::::1;;::::0;;;:21:::1;:41;::::0;;;;;::::1;;23019:42;23011:83;;;::::0;-1:-1:-1;;;23011:83:20;;20426:2:25;23011:83:20::1;::::0;::::1;20408:21:25::0;20465:2;20445:18;;;20438:30;20504;20484:18;;;20477:58;20552:18;;23011:83:20::1;20224:352:25::0;23011:83:20::1;-1:-1:-1::0;;;;;23104:41:20;::::1;;::::0;;;:21:::1;:41;::::0;;;;;;;;:48;;-1:-1:-1;;23104:48:20::1;23148:4;23104:48;::::0;;23167:38;;3073:51:25;;;23167:38:20::1;::::0;3046:18:25;23167:38:20::1;2927:203:25::0;9575:207:17;9667:10;-1:-1:-1;;;;;9681:14:17;9667:28;;9659:72;;;;-1:-1:-1;;;9659:72:17;;20783:2:25;9659:72:17;;;20765:21:25;20822:2;20802:18;;;20795:30;20861:33;20841:18;;;20834:61;20912:18;;9659:72:17;20581:355:25;25102:206:20;25169:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25169:17:20;25219:13;;25206:9;:26;;25198:67;;;;-1:-1:-1;;;25198:67:20;;16332:2:25;25198:67:20;;;16314:21:25;16371:2;16351:18;;;16344:30;16410;16390:18;;;16383:58;16458:18;;25198:67:20;16130:352:25;25198:67:20;25282:18;;;;:7;:18;;;;;;;;;25275:26;;;;;;;;;-1:-1:-1;;;;;25275:26:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25282:18;25275:26;;;;-1:-1:-1;;;25275:26:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;25275:26:20;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25275:26:20;;;;;;;-1:-1:-1;;;25275:26:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25102:206;-1:-1:-1;;25102:206:20:o;25531:270::-;25621:7;25662:24;;;:13;:24;;;;;;;;:35;;;;;;;;;-1:-1:-1;;;;;25662:35:20;;25707:59;;;;-1:-1:-1;;;25707:59:20;;21143:2:25;25707:59:20;;;21125:21:25;21182:2;21162:18;;;21155:30;-1:-1:-1;;;21201:18:25;;;21194:51;21262:18;;25707:59:20;20941:345:25;25707:59:20;25783:11;-1:-1:-1;25531:270:20;;;;;:::o;22713:107::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;22765:48:20::1;;22780:8;:6;:8::i;:::-;22713:107::o:0;22765:48::-:1;22803:10;:8;:10::i;7109:1894::-:0;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7373:36:20;::::1;;::::0;;;:21:::1;:36;::::0;;;;;::::1;;7365:90;;;::::0;-1:-1:-1;;;7365:90:20;;21493:2:25;7365:90:20::1;::::0;::::1;21475:21:25::0;21532:2;21512:18;;;21505:30;21571:34;21551:18;;;21544:62;-1:-1:-1;;;21622:18:25;;;21615:39;21671:19;;7365:90:20::1;21291:405:25::0;7365:90:20::1;-1:-1:-1::0;;;;;7473:32:20;::::1;;::::0;;;:21:::1;:32;::::0;;;;;::::1;;7465:77;;;::::0;-1:-1:-1;;;7465:77:20;;21903:2:25;7465:77:20::1;::::0;::::1;21885:21:25::0;;;21922:18;;;21915:30;21981:34;21961:18;;;21954:62;22033:18;;7465:77:20::1;21701:356:25::0;7465:77:20::1;7579:1;7560:16;-1:-1:-1::0;;;;;7560:20:20::1;;7552:69;;;;-1:-1:-1::0;;;7552:69:20::1;;;;;;;:::i;:::-;7661:4;7639:18;-1:-1:-1::0;;;;;7639:26:20::1;;;7631:67;;;::::0;-1:-1:-1;;;7631:67:20;;22669:2:25;7631:67:20::1;::::0;::::1;22651:21:25::0;22708:2;22688:18;;;22681:30;22747;22727:18;;;22720:58;22795:18;;7631:67:20::1;22467:352:25::0;7631:67:20::1;-1:-1:-1::0;;;;;7717:27:20;::::1;7713:557;;7792:43;2024:9;-1:-1:-1::0;;;;;7792:43:20;::::1;;:::i;:::-;7781:55;::::0;:7;:55:::1;:::i;:::-;7768:9;:68;7760:110;;;::::0;-1:-1:-1;;;7760:110:20;;23026:2:25;7760:110:20::1;::::0;::::1;23008:21:25::0;23065:2;23045:18;;;23038:30;23104:31;23084:18;;;23077:59;23153:18;;7760:110:20::1;22824:353:25::0;7760:110:20::1;7713:557;;;8050:43;2024:9;-1:-1:-1::0;;;;;8050:43:20;::::1;;:::i;:::-;8036:9;:58;8028:96;;;::::0;-1:-1:-1;;;8028:96:20;;23384:2:25;8028:96:20::1;::::0;::::1;23366:21:25::0;23423:2;23403:18;;;23396:30;-1:-1:-1;;;23442:18:25;;;23435:55;23507:18;;8028:96:20::1;23182:349:25::0;8028:96:20::1;8185:74;-1:-1:-1::0;;;;;8185:38:20;::::1;8224:10;8244:4;8251:7:::0;8185:38:::1;:74::i;:::-;8320:13;:15:::0;;8280:29:::1;::::0;8312:7:::1;::::0;8280:29;;;8320:15:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;8312:24:20;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;8312:24:20;8346:40;;-1:-1:-1;;;;;8346:40:20;;::::1;-1:-1:-1::0;;;;;;8346:40:20;;::::1;;::::0;;-1:-1:-1;8396:22:20;::::1;:35:::0;;;::::1;8421:10;8396:35;::::0;;8441:22:::1;::::0;::::1;:48:::0;;-1:-1:-1;;;;8499:40:20;-1:-1:-1;;;8499:40:20::1;::::0;;8549:24:::1;::::0;::::1;:34:::0;;;8593:19:::1;::::0;::::1;:31:::0;;;;::::1;::::0;;::::1;;::::0;;8634:25:::1;::::0;::::1;:43:::0;;;8687:21:::1;::::0;::::1;:35:::0;;;8312:24;-1:-1:-1;8758:45:20::1;8785:18:::0;8766:15:::1;8758:45;:::i;:::-;-1:-1:-1::0;;;;;8732:71:20;;::::1;-1:-1:-1::0;;;8813:45:20;;::::1;::::0;::::1;::::0;;;::::1;8732:23;::::0;;::::1;8813:45:::0;;;;8869:29:::1;::::0;::::1;:51:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8958:13;8936:60:::1;::::0;;23738:25:25;;;-1:-1:-1;;;;;23799:32:25;;23794:2;23779:18;;23772:60;23848:18;;23841:34;;;8936:60:20::1;::::0;23726:2:25;23711:18;8936:60:20::1;;;;;;;;7355:1648;7109:1894:::0;;;;;;;;:::o;13298:1609::-;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;13453:28:20::1;13484:18:::0;;;:7:::1;:18;::::0;;;;;;;13453:49;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;13453:49:20;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;13484:18;;13453:49;;;;-1:-1:-1;;;13453:49:20;;::::1;;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;13453:49:20;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;13453:49:20;;::::1;::::0;;;;-1:-1:-1;;;13453:49:20;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;;;;;13520:22;::::1;::::0;13453:49;;-1:-1:-1;13520:36:20::1;13512:75;;;;-1:-1:-1::0;;;13512:75:20::1;;;;;;;:::i;:::-;13605:21;::::0;::::1;::::0;13597:101:::1;;;::::0;-1:-1:-1;;;13597:101:20;;24088:2:25;13597:101:20::1;::::0;::::1;24070:21:25::0;24127:2;24107:18;;;24100:30;24166:34;24146:18;;;24139:62;-1:-1:-1;;;24217:18:25;;;24210:51;24278:19;;13597:101:20::1;23886:417:25::0;13597:101:20::1;13734:10;:23;;;-1:-1:-1::0;;;;;13716:41:20::1;:15;:41;13708:83;;;;-1:-1:-1::0;;;13708:83:20::1;;;;;;;:::i;:::-;13835:23;13809:10;:22;;;:49;;;;;;;;:::i;:::-;;13801:91;;;;-1:-1:-1::0;;;13801:91:20::1;;;;;;;:::i;:::-;13935:10;:26;;;-1:-1:-1::0;;;;;13910:51:20::1;:10;:22;;;-1:-1:-1::0;;;;;13910:51:20::1;;13902:80;;;::::0;-1:-1:-1;;;13902:80:20;;19047:2:25;13902:80:20::1;::::0;::::1;19029:21:25::0;19086:2;19066:18;;;19059:30;-1:-1:-1;;;19105:18:25;;;19098:46;19161:18;;13902:80:20::1;18845:340:25::0;13902:80:20::1;14050:10;:22;;;14021:10;:26;;;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;14000:73:20::1;:16;-1:-1:-1::0;;;;;14000:73:20::1;;;13992:132;;;;-1:-1:-1::0;;;13992:132:20::1;;;;;;;:::i;:::-;14159:28;::::0;-1:-1:-1;;14176:10:20::1;24457:2:25::0;24453:15;24449:53;14159:28:20::1;::::0;::::1;24437:66:25::0;14134:12:20::1;::::0;24519::25;;14159:28:20::1;;;;;;;;;;;;14149:39;;;;;;14134:54;;14206:61;14225:12;;14206:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;;14239:21:20::1;::::0;::::1;::::0;14262:4;14206:18:::1;:61::i;:::-;14198:94;;;::::0;-1:-1:-1;;;14198:94:20;;24744:2:25;14198:94:20::1;::::0;::::1;24726:21:25::0;24783:2;24763:18;;;24756:30;-1:-1:-1;;;24802:18:25;;;24795:50;24862:18;;14198:94:20::1;24542:344:25::0;14198:94:20::1;14336:19;::::0;::::1;::::0;-1:-1:-1;;;;;14336:33:20::1;14332:324;;14426:25;::::0;::::1;::::0;14407:44:::1;::::0;-1:-1:-1;;;;;14407:44:20;::::1;;:::i;:::-;14393:9;:59;;14384:105;;;::::0;-1:-1:-1;;;14384:105:20;;19807:2:25;14384:105:20::1;::::0;::::1;19789:21:25::0;;;19826:18;;;19819:30;19885:34;19865:18;;;19858:62;19937:18;;14384:105:20::1;19605:356:25::0;14384:105:20::1;14332:324;;;14528:117;14573:10;14593:4;14619:10;:25;;;14600:16;-1:-1:-1::0;;;;;14600:44:20::1;;;;;:::i;:::-;14535:19;::::0;::::1;::::0;-1:-1:-1;;;;;14528:44:20::1;::::0;:117;;:44:::1;:117::i;:::-;14713:9;14708:132;14728:16;-1:-1:-1::0;;;;;14724:20:20::1;:1;:20;14708:132;;;14764:24;::::0;;;:13:::1;:24;::::0;;;;14789:22:::1;::::0;::::1;::::0;14819:10:::1;::::0;14764:24;14789:26:::1;::::0;14814:1;;-1:-1:-1;;;;;14789:26:20::1;;:::i;:::-;14764:52:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14764:52:20;:65;;-1:-1:-1;;;;;;14764:65:20::1;-1:-1:-1::0;;;;;14764:65:20;;;::::1;::::0;;;::::1;::::0;;14746:3:::1;::::0;::::1;:::i;:::-;;;14708:132;;;-1:-1:-1::0;14849:18:20::1;::::0;;;:7:::1;:18;::::0;;;;:30:::1;;:50:::0;;14883:16;;14849:18;:50:::1;::::0;14883:16;;-1:-1:-1;;;;;14849:50:20::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;14849:50:20::1;;;;;-1:-1:-1::0;;;;;14849:50:20::1;;;;;;13443:1464;;13298:1609:::0;;;;:::o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:12;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;25093:2:25;2074:73:0::1;::::0;::::1;25075:21:25::0;25132:2;25112:18;;;25105:30;25171:34;25151:18;;;25144:62;-1:-1:-1;;;25222:18:25;;;25215:36;25268:19;;2074:73:0::1;24891:402:25::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;4359:1683:20:-;1089:4:1;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;4638:39:20::1;::::0;-1:-1:-1;;;4638:39:20;;::::1;::::0;::::1;160:25:25::0;;;-1:-1:-1;;;;;4638:31:20;::::1;::::0;::::1;::::0;133:18:25;;4638:39:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4624:53:20::1;:10;-1:-1:-1::0;;;;;4624:53:20::1;;4616:89;;;::::0;-1:-1:-1;;;4616:89:20;;25756:2:25;4616:89:20::1;::::0;::::1;25738:21:25::0;25795:2;25775:18;;;25768:30;25834:25;25814:18;;;25807:53;25877:18;;4616:89:20::1;25554:347:25::0;4616:89:20::1;-1:-1:-1::0;;;;;4723:32:20;::::1;;::::0;;;:21:::1;:32;::::0;;;;;::::1;;4715:77;;;::::0;-1:-1:-1;;;4715:77:20;;21903:2:25;4715:77:20::1;::::0;::::1;21885:21:25::0;;;21922:18;;;21915:30;21981:34;21961:18;;;21954:62;22033:18;;4715:77:20::1;21701:356:25::0;4715:77:20::1;4829:1;4810:16;-1:-1:-1::0;;;;;4810:20:20::1;;4802:69;;;;-1:-1:-1::0;;;4802:69:20::1;;;;;;;:::i;:::-;4911:4;4889:18;-1:-1:-1::0;;;;;4889:26:20::1;;;4881:65;;;::::0;-1:-1:-1;;;4881:65:20;;26108:2:25;4881:65:20::1;::::0;::::1;26090:21:25::0;26147:2;26127:18;;;26120:30;26186:28;26166:18;;;26159:56;26232:18;;4881:65:20::1;25906:350:25::0;4881:65:20::1;5102:43;2024:9;-1:-1:-1::0;;;;;5102:43:20;::::1;;:::i;:::-;5088:9;:58;5080:96;;;::::0;-1:-1:-1;;;5080:96:20;;23384:2:25;5080:96:20::1;::::0;::::1;23366:21:25::0;23423:2;23403:18;;;23396:30;-1:-1:-1;;;23442:18:25;;;23435:55;23507:18;;5080:96:20::1;23182:349:25::0;5080:96:20::1;5236:71;::::0;-1:-1:-1;;;5236:71:20;;-1:-1:-1;;;;;5236:36:20;::::1;::::0;::::1;::::0;:71:::1;::::0;5273:10:::1;::::0;5293:4:::1;::::0;5300:6;;5236:71:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5358:13:20::1;:15:::0;;5318:29:::1;::::0;-1:-1:-1;5350:7:20::1;::::0;-1:-1:-1;5318:29:20;;;5358:15:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;5350:24:20;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5350:24:20;5384:41;;-1:-1:-1;;;;;5384:41:20;;::::1;-1:-1:-1::0;;;;;;5384:41:20;;::::1;;::::0;;-1:-1:-1;5435:22:20;::::1;:35:::0;;;::::1;5460:10;5435:35;::::0;;5480:22:::1;::::0;::::1;:48:::0;;-1:-1:-1;;;;5538:41:20;;;5589:24:::1;::::0;::::1;:33:::0;;;5632:19:::1;::::0;::::1;:31:::0;;;;::::1;::::0;;::::1;;::::0;;5673:25:::1;::::0;::::1;:43:::0;;;5726:21:::1;::::0;::::1;:35:::0;;;5350:24;-1:-1:-1;5797:45:20::1;5824:18:::0;5805:15:::1;5797:45;:::i;:::-;-1:-1:-1::0;;;;;5771:71:20;;::::1;-1:-1:-1::0;;;5852:45:20;;::::1;::::0;::::1;::::0;;;::::1;5771:23;::::0;;::::1;5852:45:::0;;;;5907:29:::1;::::0;::::1;:51:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;5997:13;5974:61:::1;::::0;;23738:25:25;;;-1:-1:-1;;;;;23799:32:25;;23794:2;23779:18;;23772:60;23848:18;;23841:34;;;5974:61:20::1;::::0;23726:2:25;23711:18;5974:61:20::1;23536:345:25::0;21075:534:20;21169:16;21188:37;;;:26;:37;;;;;;;;;21267:17;;;:7;:17;;;;;;21319:21;21294:22;;;:46;;-1:-1:-1;;;;21294:46:20;-1:-1:-1;;;21319:21:20;21294:46;;;;;-1:-1:-1;;;;;;;;;;;21374:8:20;21384:20;21406:21;21355:73;;;;;;;;:::i;:::-;;;;;;;;21507:22;;;;21471:20;;21494:35;;-1:-1:-1;;;;;21507:22:20;21494:10;:35;:::i;:::-;21565:23;;;;:13;:23;;;;;;;;:37;;;;;;;;;;21539:23;;;;:63;;-1:-1:-1;;;;;;21539:63:20;-1:-1:-1;;;;;21565:37:20;;;21539:63;;;;;;-1:-1:-1;;;21075:534:20:o;21849:521::-;21993:7;21968:21;:32;;21960:75;;;;-1:-1:-1;;;21960:75:20;;26580:2:25;21960:75:20;;;26562:21:25;26619:2;26599:18;;;26592:30;26658:32;26638:18;;;26631:60;26708:18;;21960:75:20;26378:354:25;21960:75:20;22045:11;22060:9;22045:24;;22080:12;22098:5;-1:-1:-1;;;;;22098:10:20;22116:7;22130:3;22098:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22079:59;;;22236:7;22231:133;;1934:42;-1:-1:-1;;;;;22259:12:20;;22279:7;22259:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22303:50:20;;-1:-1:-1;1934:42:20;;-1:-1:-1;22338:5:20;;-1:-1:-1;22345:7:20;;-1:-1:-1;22303:34:20;:50::i;:::-;21920:450;;21849:521;;:::o;634:175:5:-;743:58;;-1:-1:-1;;;;;27139:32:25;;743:58:5;;;27121:51:25;27188:18;;;27181:34;;;716:86:5;;736:5;;-1:-1:-1;;;766:23:5;27094:18:25;;743:58:5;;;;-1:-1:-1;;743:58:5;;;;;;;;;;;;;;-1:-1:-1;;;;;743:58:5;-1:-1:-1;;;;;;743:58:5;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;815:203::-;915:96;935:5;965:27;;;994:4;1000:2;1004:5;942:68;;;;;;;;;;:::i;20633:436:20:-;20735:29;;-1:-1:-1;;;20735:29:20;;20758:4;20735:29;;;3073:51:25;20698:17:20;;20768:7;;-1:-1:-1;;;;;20735:4:20;:14;;;;3046:18:25;;20735:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;20727:68;;;;-1:-1:-1;;;20727:68:20;;27617:2:25;20727:68:20;;;27599:21:25;27656:2;27636:18;;;27629:30;-1:-1:-1;;;27675:18:25;;;27668:45;27730:18;;20727:68:20;27415:339:25;20727:68:20;20805:29;20837:18;;;:7;:18;;;;;;20865:22;;;:45;;-1:-1:-1;;;;20865:45:20;-1:-1:-1;;;20865:45:20;;;20925:76;;20837:18;;-1:-1:-1;;;;;;;;;;;20925:76:20;;;20837:18;;-1:-1:-1;;20925:76:20;:::i;:::-;;;;;;;;21023:39;21041:11;21054:7;21023:17;:39::i;:::-;21011:51;20633:436;-1:-1:-1;;;20633:436:20:o;1807:115:1:-;1089:4;1112:7;-1:-1:-1;;;1112:7:1;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:1;;;;;;;:::i;:::-;1866:7:::1;:14:::0;;-1:-1:-1;;;;1866:14:1::1;-1:-1:-1::0;;;1866:14:1::1;::::0;;1895:20:::1;1902:12;665:10:12::0;;586:96;1902:12:1::1;1895:20;::::0;-1:-1:-1;;;;;3091:32:25;;;3073:51;;3061:2;3046:18;1895:20:1::1;;;;;;;1807:115::o:0;2054:117::-;1089:4;1112:7;-1:-1:-1;;;1112:7:1;;;;1613:41;;;;-1:-1:-1;;;1613:41:1;;27961:2:25;1613:41:1;;;27943:21:25;28000:2;27980:18;;;27973:30;-1:-1:-1;;;28019:18:25;;;28012:50;28079:18;;1613:41:1;27759:344:25;1613:41:1;2122:5:::1;2112:15:::0;;-1:-1:-1;;;;2112:15:1::1;::::0;;2142:22:::1;665:10:12::0;2151:12:1::1;586:96:12::0;497:779:14;588:4;627;588;642:515;666:5;:12;662:1;:16;642:515;;;699:20;722:5;728:1;722:8;;;;;;;;:::i;:::-;;;;;;;699:31;;765:12;749;:28;745:402;;900:44;;;;;;28265:19:25;;;28300:12;;;28293:28;;;28337:12;;900:44:14;;;;;;;;;;;;890:55;;;;;;875:70;;745:402;;;1087:44;;;;;;28265:19:25;;;28300:12;;;28293:28;;;28337:12;;1087:44:14;;;;;;;;;;;;1077:55;;;;;;1062:70;;745:402;-1:-1:-1;680:3:14;;;;:::i;:::-;;;;642:515;;;-1:-1:-1;1249:20:14;;;;497:779;-1:-1:-1;;;497:779:14:o;3022:751:5:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:5;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:5;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:5;;28844:2:25;3671:85:5;;;28826:21:25;28883:2;28863:18;;;28856:30;28922:34;28902:18;;;28895:62;-1:-1:-1;;;28973:18:25;;;28966:40;29023:19;;3671:85:5;28642:406:25;7731:1020:17;7808:17;7833:4;-1:-1:-1;;;;;7833:20:17;;7854:14;7870:4;7887:8;6588:1;7876:43;;;;;;;;29227:25:25;;;29283:2;29268:18;;29261:34;29215:2;29200:18;;29053:248;7876:43:17;;;;;;;;;;;;;7833:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8151:15:17;8234:16;;;:6;:16;;;;;;;;;978:51:18;;;;;30452:25:25;;;30493:18;;;30486:34;;;8227:4:17;30536:18:25;;;30529:60;30605:18;;;;30598:34;;;978:51:18;;;;;;;;;;30424:19:25;;;;978:51:18;;;968:62;;;;;;;;;8681:16:17;;;;;;;:20;;8700:1;8681:20;:::i;:::-;8662:16;;;;:6;:16;;;;;:39;8714:32;8669:8;8738:7;1535:41:18;;;;;;;28265:19:25;;;;28300:12;;;28293:28;;;;1535:41:18;;;;;;;;;28337:12:25;;;;1535:41:18;;1525:52;;;;;;1416:166;8714:32:17;8707:39;7731:1020;-1:-1:-1;;;;7731:1020:17:o;3573:193:11:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3676;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:11;;31504:2:25;4842:60:11;;;31486:21:25;31543:2;31523:18;;;31516:30;31582:31;31562:18;;;31555:59;31631:18;;4842:60:11;31302:353:25;4842:60:11;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:11;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:11:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:11;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:11;;;;;;;;:::i;196:248:25:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;364:23:25;;;434:2;419:18;;;406:32;;-1:-1:-1;196:248:25:o;449:367::-;512:8;522:6;576:3;569:4;561:6;557:17;553:27;543:55;;594:1;591;584:12;543:55;-1:-1:-1;617:20:25;;660:18;649:30;;646:50;;;692:1;689;682:12;646:50;729:4;721:6;717:17;705:29;;789:3;782:4;772:6;769:1;765:14;757:6;753:27;749:38;746:47;743:67;;;806:1;803;796:12;743:67;449:367;;;;;:::o;821:505::-;916:6;924;932;985:2;973:9;964:7;960:23;956:32;953:52;;;1001:1;998;991:12;953:52;1037:9;1024:23;1014:33;;1098:2;1087:9;1083:18;1070:32;1125:18;1117:6;1114:30;1111:50;;;1157:1;1154;1147:12;1111:50;1196:70;1258:7;1249:6;1238:9;1234:22;1196:70;:::i;:::-;821:505;;1285:8;;-1:-1:-1;1170:96:25;;-1:-1:-1;;;;821:505:25:o;1331:180::-;1390:6;1443:2;1431:9;1422:7;1418:23;1414:32;1411:52;;;1459:1;1456;1449:12;1411:52;-1:-1:-1;1482:23:25;;1331:180;-1:-1:-1;1331:180:25:o;1516:131::-;-1:-1:-1;;;;;1591:31:25;;1581:42;;1571:70;;1637:1;1634;1627:12;1571:70;1516:131;:::o;1652:908::-;1783:6;1791;1799;1807;1815;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;1924:9;1911:23;1953:18;1994:2;1986:6;1983:14;1980:34;;;2010:1;2007;2000:12;1980:34;2049:70;2111:7;2102:6;2091:9;2087:22;2049:70;:::i;:::-;2138:8;;-1:-1:-1;2023:96:25;-1:-1:-1;2226:2:25;2211:18;;2198:32;;-1:-1:-1;2242:16:25;;;2239:36;;;2271:1;2268;2261:12;2239:36;;2310:72;2374:7;2363:8;2352:9;2348:24;2310:72;:::i;:::-;2401:8;;-1:-1:-1;2284:98:25;-1:-1:-1;;2486:2:25;2471:18;;2458:32;2499:31;2458:32;2499:31;:::i;:::-;2549:5;2539:15;;;1652:908;;;;;;;;:::o;3135:127::-;3196:10;3191:3;3187:20;3184:1;3177:31;3227:4;3224:1;3217:15;3251:4;3248:1;3241:15;3267:142;3350:1;3343:5;3340:12;3330:46;;3356:18;;:::i;:::-;3385;;3267:142::o;3414:141::-;3496:1;3489:5;3486:12;3476:46;;3502:18;;:::i;3684:1410::-;3767:12;;-1:-1:-1;;;;;2884:31:25;2872:44;;3831:4;3824:5;3820:16;3814:23;3846:48;3888:4;3883:3;3879:14;3865:12;-1:-1:-1;;;;;2884:31:25;2872:44;;2818:104;3846:48;;3942:4;3935:5;3931:16;3925:23;3957:50;4001:4;3996:3;3992:14;3976;-1:-1:-1;;;;;2884:31:25;2872:44;;2818:104;3957:50;;4055:4;4048:5;4044:16;4038:23;4070:59;4123:4;4118:3;4114:14;4098;4070:59;:::i;:::-;;4177:4;4170:5;4166:16;4160:23;4192:58;4244:4;4239:3;4235:14;4219;4192:58;:::i;:::-;;4299:4;4292:5;4288:16;4282:23;4275:4;4270:3;4266:14;4259:47;4354:4;4347:5;4343:16;4337:23;4369:50;4413:4;4408:3;4404:14;4388;-1:-1:-1;;;;;2884:31:25;2872:44;;2818:104;4369:50;-1:-1:-1;4468:4:25;4457:16;;;4451:23;4435:14;;;4428:47;4494:6;4536:14;;;4530:21;4516:12;;;4509:43;4571:6;4614:14;;;4608:21;-1:-1:-1;;;;;3626:46:25;;;4673:12;;;3614:59;;;;4705:6;4748:14;;;4742:21;3626:46;;4807:12;;;3614:59;4839:6;4882:14;;;4876:21;3626:46;;4941:12;;;3614:59;4973:6;5016:14;;;5010:21;3626:46;;;5075:12;;;3614:59;4973:6;5040:48;3560:119;5099:710;5322:2;5374:21;;;5444:13;;5347:18;;;5466:22;;;5293:4;;5322:2;5545:15;;;;5519:2;5504:18;;;5293:4;5588:195;5602:6;5599:1;5596:13;5588:195;;;5651:48;5695:3;5686:6;5680:13;5651:48;:::i;:::-;5758:15;;;;5728:6;5719:16;;;;;5624:1;5617:9;5588:195;;;-1:-1:-1;5800:3:25;;5099:710;-1:-1:-1;;;;;;5099:710:25:o;5814:247::-;5873:6;5926:2;5914:9;5905:7;5901:23;5897:32;5894:52;;;5942:1;5939;5932:12;5894:52;5981:9;5968:23;6000:31;6025:5;6000:31;:::i;6258:210::-;6404:2;6389:18;;6416:46;6393:9;6444:6;6416:46;:::i;6473:1290::-;-1:-1:-1;;;;;7000:32:25;;;6982:51;;7069:32;;;7064:2;7049:18;;7042:60;7138:32;;7133:2;7118:18;;7111:60;6969:3;6954:19;;7180:55;7231:2;7216:18;;7208:6;7180:55;:::i;:::-;7244;7294:3;7283:9;7279:19;7271:6;7244:55;:::i;:::-;7330:3;7315:19;;7308:35;;;;-1:-1:-1;;;;;7380:32:25;;;;7374:3;7359:19;;7352:61;7444:3;7429:19;;7422:35;;;;7488:3;7473:19;;7466:35;;;;-1:-1:-1;;;;;7538:47:25;;;7532:3;7517:19;;7510:76;3626:46;;7638:3;7623:19;;3614:59;3626:46;;;7695:3;7680:19;;3614:59;3626:46;7752:3;7737:19;;;3614:59;6473:1290;;-1:-1:-1;;;;;6473:1290:25:o;7768:188::-;7836:20;;-1:-1:-1;;;;;7885:46:25;;7875:57;;7865:85;;7946:1;7943;7936:12;7865:85;7768:188;;;:::o;7961:254::-;8029:6;8037;8090:2;8078:9;8069:7;8065:23;8061:32;8058:52;;;8106:1;8103;8096:12;8058:52;8142:9;8129:23;8119:33;;8171:38;8205:2;8194:9;8190:18;8171:38;:::i;:::-;8161:48;;7961:254;;;;;:::o;8402:252::-;8588:3;8573:19;;8601:47;8577:9;8630:6;8601:47;:::i;8659:819::-;8781:6;8789;8797;8805;8813;8821;8829;8837;8890:3;8878:9;8869:7;8865:23;8861:33;8858:53;;;8907:1;8904;8897:12;8858:53;8946:9;8933:23;8965:31;8990:5;8965:31;:::i;:::-;9015:5;-1:-1:-1;9067:2:25;9052:18;;9039:32;;-1:-1:-1;9123:2:25;9108:18;;9095:32;9136:33;9095:32;9136:33;:::i;:::-;9188:7;-1:-1:-1;9242:2:25;9227:18;;9214:32;;-1:-1:-1;9265:39:25;9299:3;9284:19;;9265:39;:::i;:::-;9255:49;;9323:39;9357:3;9346:9;9342:19;9323:39;:::i;:::-;9313:49;;9381:39;9415:3;9404:9;9400:19;9381:39;:::i;:::-;9371:49;;9467:3;9456:9;9452:19;9439:33;9429:43;;8659:819;;;;;;;;;;;:::o;9483:579::-;9587:6;9595;9603;9611;9664:2;9652:9;9643:7;9639:23;9635:32;9632:52;;;9680:1;9677;9670:12;9632:52;9716:9;9703:23;9693:33;;9745:38;9779:2;9768:9;9764:18;9745:38;:::i;:::-;9735:48;;9834:2;9823:9;9819:18;9806:32;9861:18;9853:6;9850:30;9847:50;;;9893:1;9890;9883:12;9847:50;9932:70;9994:7;9985:6;9974:9;9970:22;9932:70;:::i;:::-;9483:579;;;;-1:-1:-1;10021:8:25;-1:-1:-1;;;;9483:579:25:o;10067:355::-;10269:2;10251:21;;;10308:2;10288:18;;;10281:30;10347:33;10342:2;10327:18;;10320:61;10413:2;10398:18;;10067:355::o;10427:340::-;10629:2;10611:21;;;10668:2;10648:18;;;10641:30;-1:-1:-1;;;10702:2:25;10687:18;;10680:46;10758:2;10743:18;;10427:340::o;11132:127::-;11193:10;11188:3;11184:20;11181:1;11174:31;11224:4;11221:1;11214:15;11248:4;11245:1;11238:15;11622:127;11683:10;11678:3;11674:20;11671:1;11664:31;11714:4;11711:1;11704:15;11738:4;11735:1;11728:15;11754:135;11793:3;11814:17;;;11811:43;;11834:18;;:::i;:::-;-1:-1:-1;11881:1:25;11870:13;;11754:135::o;11894:168::-;11934:7;12000:1;11996;11992:6;11988:14;11985:1;11982:21;11977:1;11970:9;11963:17;11959:45;11956:71;;;12007:18;;:::i;:::-;-1:-1:-1;12047:9:25;;11894:168::o;12067:128::-;12107:3;12138:1;12134:6;12131:1;12128:13;12125:39;;;12144:18;;:::i;:::-;-1:-1:-1;12180:9:25;;12067:128::o;12200:350::-;12402:2;12384:21;;;12441:2;12421:18;;;12414:30;12480:28;12475:2;12460:18;;12453:56;12541:2;12526:18;;12200:350::o;12555:397::-;12757:2;12739:21;;;12796:2;12776:18;;;12769:30;12835:34;12830:2;12815:18;;12808:62;-1:-1:-1;;;12901:2:25;12886:18;;12879:31;12942:3;12927:19;;12555:397::o;13309:375::-;-1:-1:-1;;;;;13567:15:25;;;13549:34;;13619:15;;;;13614:2;13599:18;;13592:43;13666:2;13651:18;;13644:34;;;;13499:2;13484:18;;13309:375::o;13689:246::-;13729:4;-1:-1:-1;;;;;13842:10:25;;;;13812;;13864:12;;;13861:38;;;13879:18;;:::i;:::-;13916:13;;13689:246;-1:-1:-1;;;13689:246:25:o;13940:385::-;14166:25;;;14154:2;14139:18;;14200:55;14251:2;14236:18;;14228:6;14200:55;:::i;:::-;14264;14315:2;14304:9;14300:18;14292:6;14264:55;:::i;14330:356::-;14532:2;14514:21;;;14551:18;;;14544:30;14610:34;14605:2;14590:18;;14583:62;14677:2;14662:18;;14330:356::o;15390:127::-;15451:10;15446:3;15442:20;15439:1;15432:31;15482:4;15479:1;15472:15;15506:4;15503:1;15496:15;15522:120;15562:1;15588;15578:35;;15593:18;;:::i;:::-;-1:-1:-1;15627:9:25;;15522:120::o;15647:125::-;15687:4;15715:1;15712;15709:8;15706:34;;;15720:18;;:::i;:::-;-1:-1:-1;15757:9:25;;15647:125::o;17245:353::-;17447:2;17429:21;;;17486:2;17466:18;;;17459:30;17525:31;17520:2;17505:18;;17498:59;17589:2;17574:18;;17245:353::o;19190:410::-;19392:2;19374:21;;;19431:2;19411:18;;;19404:30;19470:34;19465:2;19450:18;;19443:62;-1:-1:-1;;;19536:2:25;19521:18;;19514:44;19590:3;19575:19;;19190:410::o;19966:253::-;20006:3;-1:-1:-1;;;;;20095:2:25;20092:1;20088:10;20125:2;20122:1;20118:10;20156:3;20152:2;20148:12;20143:3;20140:21;20137:47;;;20164:18;;:::i;:::-;20200:13;;19966:253;-1:-1:-1;;;;19966:253:25:o;22062:400::-;22264:2;22246:21;;;22303:2;22283:18;;;22276:30;22342:34;22337:2;22322:18;;22315:62;-1:-1:-1;;;22408:2:25;22393:18;;22386:34;22452:3;22437:19;;22062:400::o;25298:251::-;25368:6;25421:2;25409:9;25400:7;25396:23;25392:32;25389:52;;;25437:1;25434;25427:12;25389:52;25469:9;25463:16;25488:31;25513:5;25488:31;:::i;26261:112::-;26293:1;26319;26309:35;;26324:18;;:::i;:::-;-1:-1:-1;26358:9:25;;26261:112::o;27226:184::-;27296:6;27349:2;27337:9;27328:7;27324:23;27320:32;27317:52;;;27365:1;27362;27355:12;27317:52;-1:-1:-1;27388:16:25;;27226:184;-1:-1:-1;27226:184:25:o;28360:277::-;28427:6;28480:2;28468:9;28459:7;28455:23;28451:32;28448:52;;;28496:1;28493;28486:12;28448:52;28528:9;28522:16;28581:5;28574:13;28567:21;28560:5;28557:32;28547:60;;28603:1;28600;28593:12;29306:258;29378:1;29388:113;29402:6;29399:1;29396:13;29388:113;;;29478:11;;;29472:18;29459:11;;;29452:39;29424:2;29417:10;29388:113;;;29519:6;29516:1;29513:13;29510:48;;;-1:-1:-1;;29554:1:25;29536:16;;29529:27;29306:258::o;29569:257::-;29610:3;29648:5;29642:12;29675:6;29670:3;29663:19;29691:63;29747:6;29740:4;29735:3;29731:14;29724:4;29717:5;29713:16;29691:63;:::i;:::-;29808:2;29787:15;-1:-1:-1;;29783:29:25;29774:39;;;;29815:4;29770:50;;29569:257;-1:-1:-1;;29569:257:25:o;29831:385::-;30063:1;30059;30054:3;30050:11;30046:19;30038:6;30034:32;30023:9;30016:51;30103:6;30098:2;30087:9;30083:18;30076:34;30146:2;30141;30130:9;30126:18;30119:30;29997:4;30166:44;30206:2;30195:9;30191:18;30183:6;30166:44;:::i;:::-;30158:52;29831:385;-1:-1:-1;;;;;29831:385:25:o;31660:274::-;31789:3;31827:6;31821:13;31843:53;31889:6;31884:3;31877:4;31869:6;31865:17;31843:53;:::i;:::-;31912:16;;;;;31660:274;-1:-1:-1;;31660:274:25:o;31939:219::-;32088:2;32077:9;32070:21;32051:4;32108:44;32148:2;32137:9;32133:18;32125:6;32108:44;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "blacklistCurrency(address)": {
        "notice": "Used to blacklist a ERC20 token so it can not be used any longer as a payment currency"
      },
      "buyRaffleTicket(uint256,uint128)": {
        "notice": "Allows users to buy tickets for a Raffle",
        "params": {
          "_numberOfTickets": "The number of tickets an user wants to buy ",
          "_raffleId": "The ID of the raffle the user wants to buy a ticket for"
        }
      },
      "buyWhitelistedRaffleTicket(uint256,uint128,bytes32[])": {
        "notice": "Allows users to buy tickets for a whitelisted Raffle",
        "params": {
          "_merkleProof": "MerkleProof used to verify user is aprt of the whitelist ",
          "_numberOfTickets": "The number of tickets an user wants to buy ",
          "_raffleId": "The ID of the raffle the user wants to buy a ticket for"
        }
      },
      "cancelRaffle(uint256)": {
        "notice": "Allows users to cancel a raffle if NO tickets were sold yet",
        "params": {
          "_raffleId": "The ID of the raffle"
        }
      },
      "claimCancelledRaffle(uint256,uint256[])": {
        "notice": "Allows users to claim a cancelled raffle where they will receive their initially payment plus 0.1 Ether",
        "params": {
          "_raffleId": "The ID of the raffle the user wants to buy a ticket for",
          "ticketIds": "Array of ticketIds to claim"
        }
      },
      "claimRaffle(uint256)": {
        "notice": "Allows users to claim the raffle. Owner of the raffle will receive the payment and the winner his asset",
        "params": {
          "_raffleId": "The ID of the raffle the user wants to buy a ticket for"
        }
      },
      "completeRaffle(uint256)": {
        "notice": "Allows users to complete a Raffle. The winner of the raffle will receive the asset. The owner of the raffle will receive his payment Cron job will call daily all the pending raffles. Users can also call it",
        "params": {
          "_raffleId": "The ID of the raffle the user wants to buy a ticket for"
        }
      },
      "createERC20Raffle(address,uint256,address,uint256,uint128,uint128,uint128,bytes32)": {
        "notice": "Allows users to create a raffle of an ERC20 asset",
        "params": {
          "_amount": "Quantity of tokens to be raffled",
          "_currency": "Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether",
          "_durationInSeconds": "Duration in seconds of the raffle",
          "_merkleRoot": "Used so only whitelisted users can buy raffle tickets",
          "_minimumTicketsSold": "Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover for the gas fees. If this amount is reached, normal flow will be followed",
          "_numberOfTickets": "Number of tickets that will be sold as maximum in the raffle",
          "_pricePerTicket": "Price per ticket. It can be zero in case of an \"airdrop\"",
          "_tokenAddress": "Address of the token amount to raffle"
        }
      },
      "createERC721Raffle(address,uint256,address,uint256,uint128,uint128,uint128,bytes32)": {
        "notice": "Allows users to create a raffle of an ERC721 asset",
        "params": {
          "_currency": "Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether",
          "_durationInSeconds": "Duration in seconds of the raffle",
          "_merkleRoot": "Used so only whitelisted users can buy raffle tickets",
          "_minimumTicketsSold": "Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover for the gas fees. If this amount is reached, normal flow will be followed.",
          "_nftCollection": "Address of the NFT to raffle",
          "_nftId": "NFTid of the _nftCollection",
          "_numberOfTickets": "Number of tickets that will be sold as maximum in the raffle",
          "_pricePerTicket": "Price per ticket. It can be zero in case of an \"airdrop\""
        }
      },
      "getRaffleDetails(uint256)": {
        "notice": "############################################################################################                 VIEW FUNCTIONS  ############################################################################################"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "togglePause()": {
        "notice": "Used to pause/unpause the smart contract by the owner"
      },
      "totalAmountClaimable(address)": {
        "notice": "Token address => Amount that owners of the contract can claim as fee rewards address(0) = Ether"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "whitelistCurrency(address)": {
        "notice": "Used to whitelist a new ERC20 token to be used as a payment currency"
      },
      "withdrawFees(address[],uint256[],address)": {
        "notice": "Used by the contract owners to claim the fees accrued",
        "params": {
          "_amounts": "List of amounts that will be withdrawn",
          "_receiver": "Address that will receive the fees",
          "_tokenAddress": "List of tokens to withdraw the fees"
        }
      }
    },
    "version": 1
  },
  "offset": [
    587,
    26453
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60E02E69 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB3B745A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xED5F4BB1 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0xF707C67C EQ PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3B745A6 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xC2F306A5 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xC4FB83A9 EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xA080DFFE EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xA21AFC76 EQ PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60E02E69 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x82C7317D EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x82D0F069 EQ PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41CD47BF GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x566777CC GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x566777CC EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x5D4BC0CE EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x5FBA3171 EQ PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41CD47BF EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x436CC138 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x43B938C5 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x52DEFBD0 EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31F91A84 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x31F91A84 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x3A1EC473 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x3DC70C16 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x4178CDFB EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x11577339 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2CF316F9 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x3077A863 EQ PUSH2 0x271 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8C JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x3BFA JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F2 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH2 0x11CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH2 0x14D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x3E8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x392 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EF PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP9 SWAP6 DUP8 AND SWAP8 DUP6 DUP9 AND SWAP8 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP9 DIV DUP2 AND SWAP9 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP9 DIV AND SWAP7 SWAP6 AND SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV DUP3 AND SWAP3 DUP1 DUP4 AND SWAP3 SWAP2 SWAP1 DIV AND DUP14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F4D JUMP JUMPDEST PUSH2 0x1BE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x2061 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x59F CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH2 0x20D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8C JUMP JUMPDEST PUSH2 0x21BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3C46 JUMP JUMPDEST PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x3F79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F2 PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8C JUMP JUMPDEST PUSH2 0x241A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x248B JUMP JUMPDEST PUSH2 0x24F PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F88 JUMP JUMPDEST PUSH2 0x24D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x6BE CALLDATASIZE PUSH1 0x4 PUSH2 0x400E JUMP JUMPDEST PUSH2 0x288B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x6DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6E JUMP JUMPDEST PUSH2 0x2DC1 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F88 JUMP JUMPDEST PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x700 DUP3 DUP3 PUSH2 0x325F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D9 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x812 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x8 SWAP1 SWAP5 ADD SLOAD DUP1 DUP6 AND PUSH1 0xE0 DUP6 ADD MSTORE DIV SWAP1 SWAP3 AND PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 POP DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89D PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C65206973206E6F7420696E20524546554E44454420737461746500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 CALLER SWAP2 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206F776E2074686973207469636B6574204964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x9A9 JUMPI PUSH2 0x9A9 PUSH2 0x40C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH2 0x9EC SWAP1 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EE JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA08 PUSH8 0x16345785D8A0000 DUP4 PUSH2 0x410E JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0xA17 SWAP1 DUP5 PUSH2 0x410E JUMP JUMPDEST PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x412D JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA45 JUMPI PUSH2 0xA40 CALLER DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0xA5E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x3461 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xAFE JUMPI PUSH2 0xAFE PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB0F JUMPI PUSH2 0xB0F PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD DUP1 DUP7 AND PUSH1 0xE0 DUP7 ADD MSTORE DIV SWAP1 SWAP4 AND PUSH2 0x100 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD SWAP2 SWAP3 POP AND PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4145 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFD PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x417C JUMP JUMPDEST DUP1 PUSH2 0x140 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0xC9B JUMPI DUP1 PUSH2 0x120 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C65206973206E6F7420636F6D706C65746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH2 0x180 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD7 PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0xD48 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xD15 SWAP3 ADDRESS SWAP3 PUSH1 0x4 ADD PUSH2 0x41BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD60 PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0xD89 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xA0 DUP3 ADD MLOAD DUP3 MLOAD PUSH2 0xD89 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 ADDRESS SWAP2 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 PUSH2 0x160 ADD MLOAD DUP3 PUSH2 0x180 ADD MLOAD PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x41E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x410E JUMP JUMPDEST PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xE20 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE37 DUP4 PUSH2 0x34EA JUMP JUMPDEST SWAP1 POP PUSH32 0x830DAF1B0E427C4692464A26BDCB77252BC16B9BAB2254964095367EDF6430F DUP2 PUSH1 0x40 MLOAD PUSH2 0xE6A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST DUP4 DUP3 DUP2 EQ PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x101A JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0xF21 JUMPI PUSH2 0xF21 PUSH2 0x40C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST SWAP2 POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xF4A JUMPI PUSH2 0xF4A PUSH2 0x40C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP PUSH1 0xA PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD7 JUMPI PUSH2 0xFD2 DUP6 DUP5 PUSH2 0x331D JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xFEB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP7 DUP6 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1013 DUP2 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF07 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1064 PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1A0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x10D0 JUMPI PUSH2 0x10D0 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1109 JUMPI PUSH2 0x1109 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x8 SWAP1 SWAP4 ADD SLOAD DUP1 DUP5 AND PUSH1 0xE0 DUP5 ADD MSTORE DIV SWAP1 SWAP2 AND PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x119F JUMPI PUSH2 0x119F PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH2 0x11B4 SWAP1 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x11C0 DUP2 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x102C JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4068 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4145 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH2 0x1279 PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0x1296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x417C JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA2 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x12CE SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH1 0x0 PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0x137D JUMPI DUP3 SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x134A SWAP2 ADDRESS SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x41BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1378 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x139F JUMPI PUSH2 0x139F PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0x13E6 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13C6 JUMPI PUSH2 0x13C1 DUP2 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x331D JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP4 SLOAD PUSH2 0x13E6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 DUP5 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1405 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x410E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0x141A SWAP2 SWAP1 PUSH2 0x410E JUMP JUMPDEST PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x4275 JUMP JUMPDEST SWAP1 POP PUSH2 0x1430 DUP2 DUP4 PUSH2 0x4289 JUMP JUMPDEST PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH2 0x1462 SWAP1 DUP5 SWAP1 PUSH2 0x412D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1484 JUMPI PUSH2 0x147F DUP6 DUP5 PUSH2 0x331D JUMP JUMPDEST PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x1498 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP7 DUP6 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x14CA SWAP1 DUP7 SWAP1 PUSH2 0x14C5 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH8 0x16345785D8A0000 PUSH2 0x410E JUMP JUMPDEST PUSH2 0x331D JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDC0548BC90523A9E943EA77D199875FDC1E4F8A419B6D53A595B5E6671480E5 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520494420646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4068 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x16D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149859999B1948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x173A JUMPI PUSH2 0x173A PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x174B JUMPI PUSH2 0x174B PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1773 JUMPI PUSH2 0x1773 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1784 JUMPI PUSH2 0x1784 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD DUP1 DUP7 AND PUSH1 0xE0 DUP7 ADD MSTORE DIV SWAP1 SWAP4 AND PUSH2 0x100 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD SWAP2 SWAP3 POP AND CALLER EQ PUSH2 0x1863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742063616E63656C20736F6D656F6E6520656C73652773 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20726166666C65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187B PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0x1898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657473206861766520616C7265616479206265656E20626F75676874 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x3 DUP1 DUP6 ADD DUP9 SWAP1 SSTORE SWAP6 DUP5 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP4 ADD DUP7 SWAP1 SSTORE PUSH1 0x6 DUP4 ADD DUP7 SWAP1 SSTORE PUSH1 0x7 DUP4 ADD DUP7 SWAP1 SSTORE PUSH1 0x8 SWAP1 SWAP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x1985 SWAP3 DUP7 SWAP3 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A5 PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0x1A7F JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x19E3 SWAP3 ADDRESS SWAP3 PUSH1 0x4 ADD PUSH2 0x41BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x58A2FE6E4623D780CD314A4C44E0353006D6BC7E941965A2C2A1A51B8D416382 DUP3 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1A76 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A97 JUMPI PUSH2 0x1A97 PUSH2 0x3CFB JUMP JUMPDEST SUB PUSH2 0x1B41 JUMPI PUSH1 0xA0 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1ABF JUMPI PUSH2 0x1ABA CALLER DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH2 0x1ADE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 DUP5 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x987F49FC5DF600848382B03D43A2DA53D161076CB739525CFA82137EF7878C21 SWAP3 PUSH2 0x1B37 SWAP3 DUP8 SWAP3 DUP7 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH8 0x16345785D8A0000 PUSH2 0x1B65 SWAP2 SWAP1 PUSH2 0x410E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x1B78 DUP4 PUSH2 0x2328 PUSH2 0x410E JUMP JUMPDEST PUSH2 0x1B82 SWAP2 SWAP1 PUSH2 0x4275 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B8E DUP2 DUP4 PUSH2 0x4289 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1BC9 SWAP1 DUP5 SWAP1 PUSH2 0x412D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BD9 SWAP1 POP CALLER DUP3 PUSH2 0x331D JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1C77 JUMPI PUSH2 0x1C77 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C88 JUMPI PUSH2 0x1C88 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CB0 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC1 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD DUP1 DUP7 AND PUSH1 0xE0 DUP7 ADD MSTORE DIV SWAP1 SWAP4 AND PUSH2 0x100 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD SWAP2 SWAP3 POP AND PUSH2 0x1D5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4145 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374656420726166666C652E20557365206275795768697465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6973746564526166666C655469636B6574282920696E737465616400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH2 0x120 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND TIMESTAMP LT PUSH2 0x1E04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E1C JUMPI PUSH2 0x1E1C PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0x1E39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42A0 JUMP JUMPDEST DUP1 PUSH2 0x140 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x1E97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x151A58DAD95D1CC81CDBDB19081BDD5D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x140 ADD MLOAD PUSH2 0x1EAD SWAP2 SWAP1 PUSH2 0x41E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x1EDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42D7 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5C JUMPI PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x1F08 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x410E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1F57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682045746865722073656E74206173207061796D656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0x1F90 CALLER ADDRESS DUP4 PUSH1 0xE0 ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1F7A SWAP2 SWAP1 PUSH2 0x410E JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 LT ISZERO PUSH2 0x200D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x160 DUP5 ADD MLOAD CALLER SWAP3 SWAP1 PUSH2 0x1FCF SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x412D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2006 DUP2 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F93 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2038 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4325 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C72656164792077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x5C6CF68A9D7E416D0EEE740661627DD794257920F1C63DDAE6C6AF81D02D12EA SWAP2 ADD PUSH2 0x15B6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x6F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x22A0 PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH2 0x22F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520494420646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1A0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2359 JUMPI PUSH2 0x2359 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x236A JUMPI PUSH2 0x236A PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2392 JUMPI PUSH2 0x2392 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A3 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x8 SWAP1 SWAP4 ADD SLOAD DUP1 DUP5 AND PUSH1 0xE0 DUP5 ADD MSTORE DIV SWAP1 SWAP2 AND PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A58DAD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24D0 JUMPI PUSH2 0x24CE PUSH2 0x3676 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x24CE PUSH2 0x36F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x257C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420726166666C6520746869732074797065206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1BDAD95B9CC81E595D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063757272656E6379206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x260D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH2 0xE10 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x2668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E206973206F6E6520686F757200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x26EE JUMPI PUSH2 0x2691 PUSH8 0x16345785D8A0000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x410E JUMP JUMPDEST PUSH2 0x269B SWAP1 DUP9 PUSH2 0x412D JUMP JUMPDEST CALLVALUE EQ PUSH2 0x26E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652045746865722073656E74206973206E6F7420636F7272656374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2768 JUMP JUMPDEST PUSH2 0x2709 PUSH8 0x16345785D8A0000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x410E JUMP JUMPDEST CALLVALUE EQ PUSH2 0x2753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x125B98DBDC9C9958DD0818DBDB1B185D195C985B081CD95B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2768 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP11 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 PUSH1 0x4 SWAP2 DUP4 SWAP2 DUP3 PUSH2 0x277E DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD DUP4 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP12 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP11 AND OR SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP8 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 POP PUSH2 0x2800 DUP4 TIMESTAMP PUSH2 0x4325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL DUP8 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x7 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP4 DUP9 AND SWAP1 SWAP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0xDB1511A41A743840C03CE4A0850A49D2E916B3E8F06A42074BAE224F0BCE7919 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x28B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x291F JUMPI PUSH2 0x291F PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2930 JUMPI PUSH2 0x2930 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2958 JUMPI PUSH2 0x2958 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2969 JUMPI PUSH2 0x2969 PUSH2 0x3CFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD DUP1 DUP7 AND PUSH1 0xE0 DUP7 ADD MSTORE DIV SWAP1 SWAP4 AND PUSH2 0x100 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD SWAP2 SWAP3 POP AND PUSH2 0x2A06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4145 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x2A76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E2D77686974656C697374656420726166666C652E205573652062757952 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1859999B19551A58DAD95D0A0A481A5B9CDD195859 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH2 0x120 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND TIMESTAMP LT PUSH2 0x2AA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2ABB JUMPI PUSH2 0x2ABB PUSH2 0x3CFB JUMP JUMPDEST EQ PUSH2 0x2AD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42A0 JUMP JUMPDEST DUP1 PUSH2 0x140 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x2B36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x151A58DAD95D1CC81CDBDB19081BDD5D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x140 ADD MLOAD PUSH2 0x2B4C SWAP2 SWAP1 PUSH2 0x41E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x2B7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x42D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2BF8 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH2 0x100 DUP5 ADD MLOAD DUP4 PUSH2 0x377C JUMP JUMPDEST PUSH2 0x2C3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x155CD95C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CB9 JUMPI PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2C65 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH2 0x410E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x2CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682045746865722073656E74206173207061796D656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2CED JUMP JUMPDEST PUSH2 0x2CED CALLER ADDRESS DUP5 PUSH1 0xE0 ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2CD7 SWAP2 SWAP1 PUSH2 0x410E JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 LT ISZERO PUSH2 0x2D6A JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x160 DUP6 ADD MLOAD CALLER SWAP3 SWAP1 PUSH2 0x2D2C SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x412D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2D63 DUP2 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF0 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x2D95 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4325 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x422A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2ED5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F3E SWAP2 SWAP1 PUSH2 0x4394 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2F9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206F776E2074686973204E4654000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3006 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063757272656E6379206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x302F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH2 0xE10 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x308A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E206973203120686F7572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH2 0x30A5 PUSH8 0x16345785D8A0000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x410E JUMP JUMPDEST CALLVALUE EQ PUSH2 0x30EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x125B98DBDC9C9958DD0818DBDB1B185D195C985B081CD95B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x311F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x41BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP4 POP PUSH1 0x4 SWAP3 POP DUP4 SWAP2 DUP3 PUSH2 0x3167 DUP4 PUSH2 0x40F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD DUP4 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP12 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP11 AND OR SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP8 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 POP PUSH2 0x31E3 DUP4 TIMESTAMP PUSH2 0x4325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL DUP8 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x7 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP4 DUP9 AND SWAP1 SWAP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x1F1A5174455810457E3CA7CB27252DB8D09030FAD07EEC86404C4DFEEEEADF87 SWAP1 PUSH1 0x60 ADD PUSH2 0x2878 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x1 PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x32B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x32DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x43B1 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 SWAP1 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x336D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F68616E646C6545746865725472616E7366657220696E736F6C76656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x345B JUMPI PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x341F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x345B SWAP4 POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP3 POP DUP8 SWAP2 POP DUP7 SWAP1 POP PUSH2 0x3461 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x34C4 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x382B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x345B DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x348D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3597 SWAP2 SWAP1 PUSH2 0x43C5 JUMP JUMPDEST LT ISZERO PUSH2 0x35D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F756768204C494E4B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x361D SWAP2 DUP7 SWAP2 PUSH1 0x1 SWAP1 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x366F PUSH32 0x0 PUSH32 0x0 PUSH2 0x38FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x36A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x409F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x36DB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x36DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3820 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x379E JUMPI PUSH2 0x379E PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x37E0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x380D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x3818 DUP2 PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3781 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3880 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A81 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x34C4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x389E SWAP2 SWAP1 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x34C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x396D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4458 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39DD SWAP2 SWAP1 PUSH2 0x43DE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP2 SWAP1 MSTORE PUSH2 0x3A39 SWAP1 PUSH1 0x1 PUSH2 0x412D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x3A79 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3A79 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x3ADA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3AF6 SWAP2 SWAP1 PUSH2 0x4488 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3B48 DUP3 DUP3 DUP7 PUSH2 0x3B53 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3B62 JUMPI POP DUP2 PUSH2 0x366F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3B72 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x44A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C39 DUP7 DUP3 DUP8 ADD PUSH2 0x3BAE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CB3 DUP10 DUP4 DUP11 ADD PUSH2 0x3BAE JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD9 DUP9 DUP3 DUP10 ADD PUSH2 0x3BAE JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x3CED DUP2 PUSH2 0x3C5F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x3D21 JUMPI PUSH2 0x3D21 PUSH2 0x3CFB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3D21 JUMPI PUSH2 0x3D21 PUSH2 0x3CFB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x3D5C PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x3D77 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x3D8A PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x3D11 JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x3D9D PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x3D25 JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x3DC2 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x140 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH2 0x180 DUP1 DUP4 ADD MLOAD SWAP2 DUP3 AND DUP2 DUP6 ADD MSTORE SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E62 JUMPI PUSH2 0x3E4E DUP4 DUP6 MLOAD PUSH2 0x3D35 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH2 0x1A0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3E3B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2482 DUP2 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2485 DUP3 DUP5 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP3 MSTORE DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A0 DUP2 ADD PUSH2 0x3EC7 PUSH1 0x60 DUP4 ADD DUP14 PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3ED4 PUSH1 0x80 DUP4 ADD DUP13 PUSH2 0x3D25 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x100 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND PUSH2 0x120 DUP7 ADD MSTORE DUP2 AND PUSH2 0x140 DUP6 ADD MSTORE SWAP1 DUP2 AND PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 SWAP1 SWAP2 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3F70 PUSH1 0x20 DUP5 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 ADD PUSH2 0x2485 DUP3 DUP5 PUSH2 0x3D35 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3FA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x3FB0 DUP2 PUSH2 0x3C5F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3FC7 DUP2 PUSH2 0x3C5F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH2 0x3FDC PUSH1 0x80 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FEA PUSH1 0xA0 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FF8 PUSH1 0xC0 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x4034 PUSH1 0x20 DUP7 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x405C DUP8 DUP3 DUP9 ADD PUSH2 0x3BAE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4107 JUMPI PUSH2 0x4107 PUSH2 0x40DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4128 JUMPI PUSH2 0x4128 PUSH2 0x40DF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4140 JUMPI PUSH2 0x4140 PUSH2 0x40DF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320726166666C6520646F6573206E6F74206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320726166666C652077617320616C726561647920636F6D706C657465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x4201 JUMPI PUSH2 0x4201 PUSH2 0x40DF JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x421D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3A79 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4284 JUMPI PUSH2 0x4284 PUSH2 0x425F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x429B JUMPI PUSH2 0x429B PUSH2 0x40DF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320726166666C652068617320616C726561647920656E646564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x546865726520617265206E6F7420736F206D616E79207469636B657473206176 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x61696C61626C6520746F20627579 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4347 JUMPI PUSH2 0x4347 PUSH2 0x40DF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526166666C6573206D7573742068617665206174206C65617374203220746963 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x6B657473 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2482 DUP2 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x43C0 JUMPI PUSH2 0x43C0 PUSH2 0x425F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x441B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4403 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x345B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4444 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4400 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x447F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x442C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x449A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4400 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x366F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x442C JUMP INVALID SWAP9 DELEGATECALL 0xD5 GAS DUP1 PUSH18 0x907AB4E28727C006F2A8A315CD8C01E117F0 DIFFICULTY ADDRESS 0xD9 PC PUSH25 0x75AD3DA264697066735822122031616546CF2640004C7E0721 0xC2 0xE3 0xB6 0xD5 DIV DUP10 0xEA 0xDF 0xA6 ADDRESS 0x4D PUSH18 0x463C139AD6C76F6264736F6C634300080D00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "LT",
      "path": "20"
    },
    "9": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E3"
    },
    "12": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "SHR",
      "path": "20"
    },
    "19": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "20": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x60E02E69"
    },
    "25": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x102"
    },
    "29": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "30": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "31": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB3B745A6"
    },
    "36": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "37": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "41": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "42": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD73792A9"
    },
    "47": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "48": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "52": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "53": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD73792A9"
    },
    "58": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "59": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x69A"
    },
    "62": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "63": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "64": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xED5F4BB1"
    },
    "69": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "70": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6B0"
    },
    "73": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "74": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "75": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "81": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6C3"
    },
    "84": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "85": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "86": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF707C67C"
    },
    "91": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E3"
    },
    "95": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "96": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "100": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "101": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "102": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB3B745A6"
    },
    "107": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "108": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x63C"
    },
    "111": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "112": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "113": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC2F306A5"
    },
    "118": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "119": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x65C"
    },
    "122": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC4AE3168"
    },
    "129": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "130": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x672"
    },
    "133": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "134": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC4FB83A9"
    },
    "140": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "141": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x687"
    },
    "144": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "145": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "149": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "150": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "151": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "157": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "161": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "162": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "167": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "168": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A4"
    },
    "171": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "172": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "173": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x94985DDD"
    },
    "178": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "179": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5C2"
    },
    "182": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "183": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "184": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA080DFFE"
    },
    "189": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "190": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E2"
    },
    "193": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "194": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA21AFC76"
    },
    "200": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "201": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x60F"
    },
    "204": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "205": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "209": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "210": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "211": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x60E02E69"
    },
    "216": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "217": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x528"
    },
    "220": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "221": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "222": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "228": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x53B"
    },
    "231": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "232": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "233": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x82C7317D"
    },
    "238": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "239": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x550"
    },
    "242": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "243": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "244": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x82D0F069"
    },
    "249": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "250": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x584"
    },
    "253": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "254": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "257": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "258": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "259": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "260": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x41CD47BF"
    },
    "265": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "266": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "270": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "271": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x566777CC"
    },
    "276": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "277": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "281": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "282": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x566777CC"
    },
    "287": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "288": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FB"
    },
    "291": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "292": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "293": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5C975ABB"
    },
    "298": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "299": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x428"
    },
    "302": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "303": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "304": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5D4BC0CE"
    },
    "309": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "310": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x447"
    },
    "313": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "314": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "315": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5FBA3171"
    },
    "320": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "321": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x508"
    },
    "324": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "325": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "328": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "329": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "330": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "331": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x41CD47BF"
    },
    "336": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "337": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C"
    },
    "340": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "341": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "342": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x436CC138"
    },
    "347": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "348": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x362"
    },
    "351": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "352": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "353": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x43B938C5"
    },
    "358": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "359": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A2"
    },
    "362": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "363": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "364": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x52DEFBD0"
    },
    "369": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "370": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DB"
    },
    "373": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "374": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "376": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "377": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "378": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "379": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "380": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x31F91A84"
    },
    "385": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "GT",
      "path": "20"
    },
    "386": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "390": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "391": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x31F91A84"
    },
    "396": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "397": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x291"
    },
    "400": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "401": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "402": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3A1EC473"
    },
    "407": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "408": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B1"
    },
    "411": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "412": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3DC70C16"
    },
    "418": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "419": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30A"
    },
    "422": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "423": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "424": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4178CDFB"
    },
    "429": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "430": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32C"
    },
    "433": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "434": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "436": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "437": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "438": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "439": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "440": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1889611"
    },
    "445": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "446": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E8"
    },
    "449": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "450": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "451": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x11577339"
    },
    "456": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "457": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F"
    },
    "460": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "461": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "462": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2CF316F9"
    },
    "467": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "468": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251"
    },
    "471": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "472": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3077A863"
    },
    "478": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "EQ",
      "path": "20"
    },
    "479": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x271"
    },
    "482": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "483": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "484": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "486": {
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "487": {
      "first_revert": true,
      "fn": null,
      "offset": [
        587,
        26453
      ],
      "op": "REVERT",
      "path": "20"
    },
    "488": {
      "offset": [
        1867,
        1899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "489": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "490": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "DUP1",
      "path": "20"
    },
    "491": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "492": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F4"
    },
    "495": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "498": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "DUP1",
      "path": "20"
    },
    "499": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "REVERT",
      "path": "20"
    },
    "500": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "501": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "POP",
      "path": "20"
    },
    "502": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "505": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "538": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "DUP2",
      "path": "20"
    },
    "539": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "JUMP",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "541": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "543": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "544": {
      "op": "SWAP1"
    },
    "545": {
      "op": "DUP2"
    },
    "546": {
      "op": "MSTORE"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "549": {
      "op": "ADD"
    },
    "550": {
      "offset": [
        1867,
        1899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "553": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "554": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "DUP1",
      "path": "20"
    },
    "555": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "556": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "SUB",
      "path": "20"
    },
    "557": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "558": {
      "fn": null,
      "offset": [
        1867,
        1899
      ],
      "op": "RETURN",
      "path": "20"
    },
    "559": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "560": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "561": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "DUP1",
      "path": "20"
    },
    "562": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "563": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23B"
    },
    "566": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "567": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "569": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "DUP1",
      "path": "20"
    },
    "570": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "REVERT",
      "path": "20"
    },
    "571": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "576": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24A"
    },
    "579": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "580": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "582": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B8C"
    },
    "585": {
      "fn": "Raffle.fulfillRandomnessTest",
      "jump": "i",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMP",
      "path": "20"
    },
    "586": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "587": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F6"
    },
    "590": {
      "fn": "Raffle.fulfillRandomnessTest",
      "jump": "i",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMP",
      "path": "20"
    },
    "591": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "592": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "STOP",
      "path": "20"
    },
    "593": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "594": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "595": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "DUP1",
      "path": "20"
    },
    "596": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "597": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25D"
    },
    "600": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "601": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "603": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "DUP1",
      "path": "20"
    },
    "604": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "REVERT",
      "path": "20"
    },
    "605": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "606": {
      "op": "POP"
    },
    "607": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "610": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26C"
    },
    "613": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "614": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "616": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BFA"
    },
    "619": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "620": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "621": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x704"
    },
    "624": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "625": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "626": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "627": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "DUP1",
      "path": "20"
    },
    "628": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "629": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27D"
    },
    "632": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "633": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "635": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "DUP1",
      "path": "20"
    },
    "636": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "REVERT",
      "path": "20"
    },
    "637": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "642": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "645": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "646": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "648": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "651": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMP",
      "path": "20"
    },
    "652": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "653": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA6A"
    },
    "656": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMP",
      "path": "20"
    },
    "657": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "658": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "659": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "DUP1",
      "path": "20"
    },
    "660": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "661": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29D"
    },
    "664": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "665": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "667": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "DUP1",
      "path": "20"
    },
    "668": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "REVERT",
      "path": "20"
    },
    "669": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "674": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AC"
    },
    "677": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "678": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "680": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C77"
    },
    "683": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMP",
      "path": "20"
    },
    "684": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "685": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE87"
    },
    "688": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMP",
      "path": "20"
    },
    "689": {
      "offset": [
        1530,
        1598
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "690": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "691": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP1",
      "path": "20"
    },
    "692": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "693": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BD"
    },
    "696": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "697": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "699": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP1",
      "path": "20"
    },
    "700": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "REVERT",
      "path": "20"
    },
    "701": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F2"
    },
    "706": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CC"
    },
    "709": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "710": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "712": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B8C"
    },
    "715": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMP",
      "path": "20"
    },
    "716": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "717": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "719": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "721": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "722": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP2",
      "path": "20"
    },
    "723": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "724": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "726": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "727": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP4",
      "path": "20"
    },
    "728": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "729": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "731": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP1",
      "path": "20"
    },
    "732": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP5",
      "path": "20"
    },
    "733": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "734": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "735": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "736": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "737": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "738": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP3",
      "path": "20"
    },
    "739": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "740": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "741": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "742": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "offset": [
        1530,
        1598
      ],
      "op": "AND",
      "path": "20"
    },
    "752": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "DUP2",
      "path": "20"
    },
    "753": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMP",
      "path": "20"
    },
    "754": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "755": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "757": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        1530,
        1598
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "764": {
      "op": "SHL"
    },
    "765": {
      "op": "SUB"
    },
    "766": {
      "op": "SWAP1"
    },
    "767": {
      "op": "SWAP2"
    },
    "768": {
      "op": "AND"
    },
    "769": {
      "op": "DUP2"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "offset": [
        1530,
        1598
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "777": {
      "op": "JUMP"
    },
    "778": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "779": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "780": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "DUP1",
      "path": "20"
    },
    "781": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "782": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x316"
    },
    "785": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "786": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "788": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "DUP1",
      "path": "20"
    },
    "789": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "REVERT",
      "path": "20"
    },
    "790": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "791": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "POP",
      "path": "20"
    },
    "792": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31F"
    },
    "795": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1025"
    },
    "798": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMP",
      "path": "20"
    },
    "799": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "800": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "802": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "803": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "806": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "807": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "808": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E1F"
    },
    "811": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMP",
      "path": "20"
    },
    "812": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "813": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "814": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "DUP1",
      "path": "20"
    },
    "815": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "816": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x338"
    },
    "819": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "820": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "822": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "DUP1",
      "path": "20"
    },
    "823": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "REVERT",
      "path": "20"
    },
    "824": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "829": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x347"
    },
    "832": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "833": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "835": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "838": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMP",
      "path": "20"
    },
    "839": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "840": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11CF"
    },
    "843": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMP",
      "path": "20"
    },
    "844": {
      "offset": [
        2054,
        2088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "845": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "846": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "847": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "848": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x358"
    },
    "851": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "852": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "854": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "855": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "REVERT",
      "path": "20"
    },
    "856": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "857": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "POP",
      "path": "20"
    },
    "858": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "861": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "863": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "864": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "865": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2054,
        2088
      ],
      "op": "JUMP",
      "path": "20"
    },
    "866": {
      "offset": [
        1347,
        1400
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "867": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "868": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "DUP1",
      "path": "20"
    },
    "869": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "870": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36E"
    },
    "873": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "874": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "876": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "DUP1",
      "path": "20"
    },
    "877": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "REVERT",
      "path": "20"
    },
    "878": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x392"
    },
    "883": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37D"
    },
    "886": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "887": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "889": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "892": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMP",
      "path": "20"
    },
    "893": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "894": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "896": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "898": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "899": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "901": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "902": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "DUP2",
      "path": "20"
    },
    "903": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "904": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "906": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "907": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "908": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "909": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "911": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "AND",
      "path": "20"
    },
    "912": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "DUP2",
      "path": "20"
    },
    "913": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMP",
      "path": "20"
    },
    "914": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "915": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "917": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        1347,
        1400
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "918": {
      "op": "SWAP1"
    },
    "919": {
      "op": "ISZERO"
    },
    "920": {
      "op": "ISZERO"
    },
    "921": {
      "op": "DUP2"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "925": {
      "op": "ADD"
    },
    "926": {
      "offset": [
        1347,
        1400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "929": {
      "op": "JUMP"
    },
    "930": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "931": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "932": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "DUP1",
      "path": "20"
    },
    "933": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "934": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AE"
    },
    "937": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "938": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "940": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "DUP1",
      "path": "20"
    },
    "941": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "REVERT",
      "path": "20"
    },
    "942": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x392"
    },
    "947": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BD"
    },
    "950": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "951": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "953": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "956": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "jump": "i",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMP",
      "path": "20"
    },
    "957": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "964": {
      "op": "SHL"
    },
    "965": {
      "op": "SUB"
    },
    "966": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "AND",
      "path": "20",
      "statement": 0
    },
    "967": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25881,
        25885
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "969": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "970": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "DUP2",
      "path": "20"
    },
    "971": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "972": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "974": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "976": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "977": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "979": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "980": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "981": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "982": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "984": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "AND",
      "path": "20"
    },
    "985": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25904,
        25938
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "986": {
      "fn": "Raffle.isCurrencyWhitelisted",
      "offset": [
        25807,
        25945
      ],
      "op": "JUMP",
      "path": "20"
    },
    "987": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "988": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "989": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "990": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "991": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E7"
    },
    "994": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "995": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "997": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "998": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "REVERT",
      "path": "20"
    },
    "999": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1004": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F6"
    },
    "1007": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1008": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1010": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "1013": {
      "fn": "Raffle.blacklistCurrency",
      "jump": "i",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1014": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1015": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14D7"
    },
    "1018": {
      "fn": "Raffle.blacklistCurrency",
      "jump": "i",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1019": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1020": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1021": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1022": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1023": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407"
    },
    "1026": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1027": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1029": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1030": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1031": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41B"
    },
    "1036": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x416"
    },
    "1039": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1040": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1042": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "1045": {
      "fn": "Raffle.getRaffleState",
      "jump": "i",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1046": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1047": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15C1"
    },
    "1050": {
      "fn": "Raffle.getRaffleState",
      "jump": "i",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1051": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1052": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1054": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1055": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "1058": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1059": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1060": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E8B"
    },
    "1063": {
      "fn": "Raffle.getRaffleState",
      "jump": "i",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1064": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1065": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1066": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1067": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1068": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x434"
    },
    "1071": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1072": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1074": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1075": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1076": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1080": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 1
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1087": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "1088": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1090": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "1091": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x392"
    },
    "1094": {
      "fn": "Pausable.paused",
      "offset": [
        1042,
        1126
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1095": {
      "offset": [
        1436,
        1481
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1096": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1097": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1098": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1099": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x453"
    },
    "1102": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1103": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1105": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1106": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1107": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4EF"
    },
    "1112": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x462"
    },
    "1115": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1116": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1118": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "1121": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1122": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1123": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1125": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1127": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1128": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1129": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1130": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1132": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1133": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1134": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1135": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1137": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1138": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1139": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1140": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1141": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1142": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1144": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1145": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1146": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1147": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1149": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1150": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1151": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1152": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1154": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1155": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1156": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1157": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1158": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1159": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1160": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1161": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1163": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1164": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1165": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1166": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1168": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1169": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1170": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1171": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1173": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1174": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1175": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1176": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1178": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1179": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1180": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "ADD",
      "path": "20"
    },
    "1181": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1191": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1192": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1193": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1194": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1195": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1196": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1197": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1198": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1199": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1200": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1201": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1202": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "offset": [
        1436,
        1481
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1210": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DIV",
      "path": "20"
    },
    "1211": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1212": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1213": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1220": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1221": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DIV",
      "path": "20"
    },
    "1222": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1223": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1224": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1225": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1226": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1227": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1228": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "op": "SUB"
    },
    "1237": {
      "offset": [
        1436,
        1481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1238": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1239": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1240": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1247": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1248": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1249": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DIV",
      "path": "20"
    },
    "1250": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1251": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1252": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1253": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1254": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1255": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1256": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1257": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1258": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1259": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DIV",
      "path": "20"
    },
    "1260": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "AND",
      "path": "20"
    },
    "1261": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "DUP14",
      "path": "20"
    },
    "1262": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1263": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1264": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1266": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1267": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "1270": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP14",
      "path": "20"
    },
    "1271": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP13",
      "path": "20"
    },
    "1272": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1273": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1274": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1275": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1276": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1277": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1278": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1279": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1280": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1281": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1282": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1283": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1284": {
      "fn": "Pausable.paused",
      "offset": [
        1436,
        1481
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E99"
    },
    "1287": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1436,
        1481
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1288": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1289": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1290": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1291": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1292": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x514"
    },
    "1295": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1296": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1298": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1299": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1300": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1305": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x523"
    },
    "1308": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1309": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1311": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "1314": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1315": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1316": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1635"
    },
    "1319": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1320": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1321": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1324": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x536"
    },
    "1327": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1328": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1330": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F4D"
    },
    "1333": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1334": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1335": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BE3"
    },
    "1338": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "1346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1352": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "POP",
      "path": "0"
    },
    "1353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "1356": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2061"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1360": {
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x55C"
    },
    "1367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1368": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1373": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "POP",
      "path": "20"
    },
    "1374": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "1377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "1410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1412": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1413": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1414": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1415": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1416": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x590"
    },
    "1419": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1420": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1422": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1423": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1424": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1429": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x59F"
    },
    "1432": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1433": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1435": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "1438": {
      "fn": "Raffle.whitelistCurrency",
      "jump": "i",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1439": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1440": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20D5"
    },
    "1443": {
      "fn": "Raffle.whitelistCurrency",
      "jump": "i",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1444": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1445": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1446": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1447": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1448": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B0"
    },
    "1451": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1452": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1454": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1455": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1460": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1470": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "1473": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1474": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1475": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1476": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1477": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1478": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5CE"
    },
    "1481": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1482": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1484": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1485": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1486": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24F"
    },
    "1491": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5DD"
    },
    "1494": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1495": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1497": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B8C"
    },
    "1500": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1501": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1502": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x21BC"
    },
    "1505": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1506": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1507": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1508": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1509": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1510": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5EE"
    },
    "1513": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1514": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1516": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1517": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1518": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x602"
    },
    "1523": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5FD"
    },
    "1526": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1527": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1529": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C46"
    },
    "1532": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1533": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1534": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2234"
    },
    "1537": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1538": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1539": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1541": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1542": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "1545": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1546": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1547": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F79"
    },
    "1550": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1551": {
      "offset": [
        2266,
        2321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1552": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1553": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1554": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1555": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x61B"
    },
    "1558": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1559": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1561": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1562": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1563": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "1568": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x62A"
    },
    "1571": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1572": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1574": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "1577": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        2266,
        2321
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1578": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1579": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1581": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1583": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1584": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1586": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1587": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1588": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1589": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1591": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1592": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1593": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1594": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1595": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        2266,
        2321
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1596": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1597": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1598": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1599": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1600": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x648"
    },
    "1603": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1604": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1606": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1607": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1608": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F2"
    },
    "1613": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x657"
    },
    "1616": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1617": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1619": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B8C"
    },
    "1622": {
      "fn": "Raffle.getRaffleTicketOwner",
      "jump": "i",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1623": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1624": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x241A"
    },
    "1627": {
      "fn": "Raffle.getRaffleTicketOwner",
      "jump": "i",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1628": {
      "offset": [
        1749,
        1777
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1629": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1630": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1631": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1632": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x668"
    },
    "1635": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1636": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1638": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1639": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1640": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1641": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "POP",
      "path": "20"
    },
    "1642": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "1645": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1647": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1648": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1649": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        1749,
        1777
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1650": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1651": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1652": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1653": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1654": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x67E"
    },
    "1657": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1658": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1660": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1661": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1662": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1663": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "POP",
      "path": "20"
    },
    "1664": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1667": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x248B"
    },
    "1670": {
      "fn": "Raffle.togglePause",
      "jump": "i",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1671": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1672": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1675": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x695"
    },
    "1678": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1679": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1681": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F88"
    },
    "1684": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1685": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1686": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24D8"
    },
    "1689": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1690": {
      "offset": [
        2094,
        2132
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1691": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1692": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1693": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1694": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6A6"
    },
    "1697": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1698": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1700": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1701": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1702": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1703": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "POP",
      "path": "20"
    },
    "1704": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C"
    },
    "1707": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1709": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1710": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1711": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        2094,
        2132
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1712": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1713": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1716": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BE"
    },
    "1719": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1720": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1722": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x400E"
    },
    "1725": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1726": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1727": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x288B"
    },
    "1730": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1732": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "1748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "1751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6E"
    },
    "1757": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC1"
    },
    "1762": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1763": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1764": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24F"
    },
    "1767": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F1"
    },
    "1770": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1771": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1773": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F88"
    },
    "1776": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        4359,
        6042
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1777": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1778": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EAB"
    },
    "1781": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        4359,
        6042
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1782": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1783": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21737,
        21777
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 3,
      "value": "0x700"
    },
    "1786": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21755,
        21764
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1787": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21766,
        21776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1788": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21737,
        21754
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x325F"
    },
    "1791": {
      "fn": "Raffle.fulfillRandomnessTest",
      "jump": "i",
      "offset": [
        21737,
        21777
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1792": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21737,
        21777
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1793": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "POP",
      "path": "20"
    },
    "1794": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "POP",
      "path": "20"
    },
    "1795": {
      "fn": "Raffle.fulfillRandomnessTest",
      "jump": "o",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1796": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1797": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1799": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1801": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1802": {
      "offset": [
        2260,
        2279
      ],
      "op": "SUB",
      "path": "2"
    },
    "1803": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72F"
    },
    "1806": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1807": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1809": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1818": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1819": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1821": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "2"
    },
    "1822": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "1825": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1826": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4068"
    },
    "1829": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1830": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1831": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1833": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1834": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1835": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1836": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SUB",
      "path": "2"
    },
    "1837": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1838": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1839": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1840": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1842": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1844": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1845": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1847": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1854": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "1855": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1857": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "1858": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1859": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75E"
    },
    "1862": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1863": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1865": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1874": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1875": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1877": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "1878": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "1881": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1882": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "1885": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1886": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1887": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19666
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1889": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1890": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1891": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1892": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19676
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1894": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1896": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1897": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1898": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1899": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1901": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1902": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1903": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1904": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1905": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1906": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "1909": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1910": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1911": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1912": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1913": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1914": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "op": "SUB"
    },
    "1923": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1924": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1925": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "1926": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1927": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1928": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1930": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1931": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1932": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1933": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1934": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "1935": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1936": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1937": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1938": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1939": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1940": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1941": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1942": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1944": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1945": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1946": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1947": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1948": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1949": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "1950": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1951": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1952": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1953": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1954": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1955": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1956": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1957": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1958": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1959": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1960": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19669,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1961": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "1963": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1964": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "1965": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1972": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1973": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DIV",
      "path": "20"
    },
    "1974": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1976": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "1977": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1978": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1979": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "GT",
      "path": "20"
    },
    "1980": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1981": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C8"
    },
    "1984": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1985": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C8"
    },
    "1988": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "1991": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1992": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1993": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1995": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1996": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "GT",
      "path": "20"
    },
    "1997": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1998": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D9"
    },
    "2001": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2002": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D9"
    },
    "2005": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2008": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2009": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2010": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2011": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2012": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2014": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2015": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "2017": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2018": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2019": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "2021": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2022": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2023": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2024": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2027": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "EXP",
      "path": "20"
    },
    "2028": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2029": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DIV",
      "path": "20"
    },
    "2030": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2032": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2033": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2035": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2036": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "GT",
      "path": "20"
    },
    "2037": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2038": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x801"
    },
    "2041": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2042": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x801"
    },
    "2045": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2048": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2049": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2050": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2052": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2053": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "GT",
      "path": "20"
    },
    "2054": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2055": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x812"
    },
    "2058": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2059": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x812"
    },
    "2062": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2065": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2066": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2067": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2068": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2069": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2071": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2072": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2073": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2074": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2075": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2077": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2078": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2079": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2080": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2082": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2083": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2084": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2094": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2096": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2097": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2098": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2099": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2101": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2102": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2103": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2104": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "2106": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2107": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2108": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2109": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2111": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2112": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2113": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2114": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2116": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2117": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2118": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2119": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2121": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2122": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2123": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2133": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2134": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2135": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "2137": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2138": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2139": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2146": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2147": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2148": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DIV",
      "path": "20"
    },
    "2149": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2150": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2151": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "2153": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2154": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2155": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2156": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2158": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2159": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2160": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2161": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2162": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2163": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2164": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2165": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "2167": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2168": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2169": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2170": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "DIV",
      "path": "20"
    },
    "2171": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2172": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2173": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "AND",
      "path": "20"
    },
    "2174": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2177": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2178": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2179": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "ADD",
      "path": "20"
    },
    "2180": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2181": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2182": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19638,
        19687
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19715
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 4
    },
    "2185": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19727
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "2187": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19727
      ],
      "op": "ADD",
      "path": "20"
    },
    "2188": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19727
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2189": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2191": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2192": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "GT",
      "path": "20"
    },
    "2193": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2194": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x89D"
    },
    "2197": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2198": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x89D"
    },
    "2201": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2204": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19705,
        19751
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2205": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2206": {
      "branch": 170,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19705,
        19751
      ],
      "op": "EQ",
      "path": "20"
    },
    "2207": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8EA"
    },
    "2210": {
      "branch": 170,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2211": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2213": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2222": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2225": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2227": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2228": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "ADD",
      "path": "20"
    },
    "2229": {
      "op": "MSTORE"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2234": {
      "op": "DUP3"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "op": "MSTORE"
    },
    "2237": {
      "op": "PUSH32",
      "value": "0x526166666C65206973206E6F7420696E20524546554E44454420737461746500"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2272": {
      "op": "DUP3"
    },
    "2273": {
      "op": "ADD"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2277": {
      "op": "ADD"
    },
    "2278": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "2281": {
      "op": "JUMP"
    },
    "2282": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19697,
        19787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2283": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19811,
        19820
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2284": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19797,
        19808
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2286": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2287": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19853,
        19856
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2288": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19849,
        19850
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2289": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19849,
        19856
      ],
      "op": "LT",
      "path": "20"
    },
    "2290": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2291": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9F3"
    },
    "2294": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2295": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 5,
      "value": "0x0"
    },
    "2297": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2298": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2299": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2300": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19897
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2302": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2304": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2305": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2307": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2308": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19908
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2309": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19926,
        19936
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2310": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19926,
        19936
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2311": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19918
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2312": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19918
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2313": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19919,
        19920
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2314": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2315": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2316": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "LT",
      "path": "20"
    },
    "2317": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x918"
    },
    "2320": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2321": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x918"
    },
    "2324": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40C9"
    },
    "2327": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19909,
        19921
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2328": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2329": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2331": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2332": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2333": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "MUL",
      "path": "20"
    },
    "2334": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2335": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2336": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2337": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "ADD",
      "path": "20"
    },
    "2338": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19909,
        19921
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2339": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2340": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2343": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "ADD",
      "path": "20"
    },
    "2344": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2345": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2346": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2347": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2348": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2350": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "ADD",
      "path": "20"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2353": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2354": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "op": "SUB"
    },
    "2363": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19922
      ],
      "op": "AND",
      "path": "20"
    },
    "2364": {
      "branch": 171,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19884,
        19936
      ],
      "op": "EQ",
      "path": "20"
    },
    "2365": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x988"
    },
    "2368": {
      "branch": 171,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2369": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2371": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2380": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2383": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2385": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2386": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "ADD",
      "path": "20"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2392": {
      "op": "DUP3"
    },
    "2393": {
      "op": "ADD"
    },
    "2394": {
      "op": "MSTORE"
    },
    "2395": {
      "op": "PUSH32",
      "value": "0x596F7520646F206E6F74206F776E2074686973207469636B6574204964000000"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2430": {
      "op": "DUP3"
    },
    "2431": {
      "op": "ADD"
    },
    "2432": {
      "op": "MSTORE"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "2439": {
      "op": "JUMP"
    },
    "2440": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19876,
        19970
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2441": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20033,
        20034
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 6,
      "value": "0x0"
    },
    "2443": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2444": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2445": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2446": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        19997
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2448": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2450": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2451": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2453": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2454": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20008
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2455": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20033,
        20034
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2456": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20018
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2457": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20018
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2458": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20019,
        20020
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2459": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2460": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2461": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "LT",
      "path": "20"
    },
    "2462": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A9"
    },
    "2465": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2466": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A9"
    },
    "2469": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40C9"
    },
    "2472": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20009,
        20021
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2473": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2474": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2475": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "POP",
      "path": "20"
    },
    "2476": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2478": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "MUL",
      "path": "20"
    },
    "2479": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "ADD",
      "path": "20"
    },
    "2480": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20009,
        20021
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2481": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2482": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2483": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2485": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "ADD",
      "path": "20"
    },
    "2486": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2487": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2488": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2489": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2491": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "ADD",
      "path": "20"
    },
    "2492": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2494": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2495": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20022
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2497": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2500": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "EXP",
      "path": "20"
    },
    "2501": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2502": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2503": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "MUL",
      "path": "20"
    },
    "2513": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "NOT",
      "path": "20"
    },
    "2514": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "AND",
      "path": "20"
    },
    "2515": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2516": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "AND",
      "path": "20"
    },
    "2526": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "MUL",
      "path": "20"
    },
    "2527": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "OR",
      "path": "20"
    },
    "2528": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2529": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "2530": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19984,
        20035
      ],
      "op": "POP",
      "path": "20"
    },
    "2531": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 7
    },
    "2532": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9EC"
    },
    "2535": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2536": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "2539": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        19858,
        19861
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2540": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2541": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2542": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19858,
        19861
      ],
      "op": "POP",
      "path": "20"
    },
    "2543": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8EE"
    },
    "2546": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2547": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        19837,
        20046
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20055,
        20074
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2551": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20114,
        20141
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA08"
    },
    "2554": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "2563": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20114,
        20117
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2564": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20114,
        20141
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "2567": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20114,
        20141
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2568": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20114,
        20141
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2569": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20084,
        20109
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "2571": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20084,
        20109
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2572": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20084,
        20109
      ],
      "op": "ADD",
      "path": "20"
    },
    "2573": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20084,
        20109
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2574": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20078,
        20109
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA17"
    },
    "2577": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20078,
        20109
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2578": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20078,
        20081
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2579": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20078,
        20109
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "2582": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20078,
        20109
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2583": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20078,
        20109
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2584": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20077,
        20142
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA21"
    },
    "2587": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20077,
        20142
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2588": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20077,
        20142
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2589": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20077,
        20142
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "2592": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20077,
        20142
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2593": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20077,
        20142
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2594": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20156,
        20175
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "2596": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20156,
        20175
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2597": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20156,
        20175
      ],
      "op": "ADD",
      "path": "20"
    },
    "2598": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20156,
        20175
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2599": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20055,
        20142
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2600": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20055,
        20142
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "branch": 172,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20156,
        20189
      ],
      "op": "AND",
      "path": "20"
    },
    "2611": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20152,
        20363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA45"
    },
    "2614": {
      "branch": 172,
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20152,
        20363
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2615": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20204,
        20249
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 8,
      "value": "0xA40"
    },
    "2618": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20225,
        20235
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2619": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20237,
        20248
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2620": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20204,
        20224
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "2623": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20204,
        20249
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2624": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20204,
        20249
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2625": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20152,
        20363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA5E"
    },
    "2628": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20152,
        20363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2629": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20152,
        20363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2630": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20294,
        20313
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 9,
      "value": "0xC0"
    },
    "2632": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20294,
        20313
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2633": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20294,
        20313
      ],
      "op": "ADD",
      "path": "20"
    },
    "2634": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20294,
        20313
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2635": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20287,
        20352
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA5E"
    },
    "2638": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20287,
        20352
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2645": {
      "op": "SHL"
    },
    "2646": {
      "op": "SUB"
    },
    "2647": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20287,
        20327
      ],
      "op": "AND",
      "path": "20"
    },
    "2648": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20328,
        20338
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2649": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20340,
        20351
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2650": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20287,
        20327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3461"
    },
    "2653": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "i",
      "offset": [
        20287,
        20352
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2654": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        20287,
        20352
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2659": {
      "offset": [
        2563,
        2585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2660": {
      "fn": "Raffle.claimCancelledRaffle",
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "op": "POP"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "Raffle.claimCancelledRaffle",
      "jump": "o",
      "offset": [
        19514,
        20369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2666": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2667": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2669": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2674": {
      "op": "SHL"
    },
    "2675": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2676": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "2677": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2679": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "2680": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2681": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA94"
    },
    "2684": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2685": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2687": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2696": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2697": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2699": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "2700": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "2703": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2704": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "2707": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2708": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2709": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2711": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2712": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2713": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2714": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15379
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2716": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2718": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2719": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2720": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2721": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2723": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2724": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2725": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2726": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2727": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2728": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "2731": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2732": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2733": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2734": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2735": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2736": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "op": "SUB"
    },
    "2745": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2746": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2747": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2748": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2749": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2750": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2752": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2753": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2754": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2755": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2756": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2757": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2758": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2759": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2760": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2761": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2762": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2763": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2764": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "2766": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2767": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2768": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2769": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2770": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2771": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2772": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2773": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2774": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2775": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2776": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2777": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2778": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2779": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2780": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2781": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2782": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15372,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2783": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "2785": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2786": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2787": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2794": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2795": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DIV",
      "path": "20"
    },
    "2796": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2798": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2799": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2800": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2801": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "GT",
      "path": "20"
    },
    "2802": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2803": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAFE"
    },
    "2806": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2807": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAFE"
    },
    "2810": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2813": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2814": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2815": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2817": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2818": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "GT",
      "path": "20"
    },
    "2819": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2820": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB0F"
    },
    "2823": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2824": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB0F"
    },
    "2827": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2830": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2831": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2832": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2833": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2834": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2836": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2837": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "2839": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2840": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2841": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "2843": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2844": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2845": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2846": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2849": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "EXP",
      "path": "20"
    },
    "2850": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2851": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DIV",
      "path": "20"
    },
    "2852": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2854": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2855": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2857": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2858": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "GT",
      "path": "20"
    },
    "2859": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2860": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB37"
    },
    "2863": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2864": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB37"
    },
    "2867": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2870": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2871": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2872": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2874": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2875": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "GT",
      "path": "20"
    },
    "2876": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2877": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB48"
    },
    "2880": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2881": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB48"
    },
    "2884": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "2887": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2888": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2889": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2890": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2891": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2893": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2894": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2895": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2896": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2898": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2899": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2900": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2901": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2902": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2903": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2904": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2905": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2907": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2908": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2909": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "op": "SUB"
    },
    "2918": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2919": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2920": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2921": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2923": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2924": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2925": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2926": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2928": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2929": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2930": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2931": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "2933": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2934": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2935": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2936": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2938": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2939": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2940": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2941": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2943": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2944": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2945": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2946": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2948": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2949": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2950": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "op": "SUB"
    },
    "2959": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2960": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2961": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2962": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "2964": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2965": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2966": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2971": {
      "op": "SHL"
    },
    "2972": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2973": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2974": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2975": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DIV",
      "path": "20"
    },
    "2976": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2977": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2978": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "2980": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2981": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2982": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2983": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2985": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2986": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "2987": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2988": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2989": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2990": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2991": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "2992": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "2994": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2995": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "2996": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2997": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "DIV",
      "path": "20"
    },
    "2998": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2999": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3000": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "AND",
      "path": "20"
    },
    "3001": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3004": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3005": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3006": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "ADD",
      "path": "20"
    },
    "3007": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3008": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3009": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3010": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3011": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15408,
        15430
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 10
    },
    "3012": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15408,
        15430
      ],
      "op": "ADD",
      "path": "20"
    },
    "3013": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15408,
        15430
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3014": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3015": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15341,
        15390
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3016": {
      "op": "POP"
    },
    "3017": {
      "branch": 173,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15408,
        15444
      ],
      "op": "AND",
      "path": "20"
    },
    "3018": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBE5"
    },
    "3021": {
      "branch": 173,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3022": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3024": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3033": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3034": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3036": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "ADD",
      "path": "20"
    },
    "3037": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "3040": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3041": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4145"
    },
    "3044": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15400,
        15475
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3045": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15400,
        15475
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3046": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15519,
        15542
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 11,
      "value": "0x0"
    },
    "3048": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15503
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3049": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15515
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3051": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15515
      ],
      "op": "ADD",
      "path": "20"
    },
    "3052": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15515
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3053": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3055": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3056": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "GT",
      "path": "20"
    },
    "3057": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3058": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBFD"
    },
    "3061": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3062": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBFD"
    },
    "3065": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "3068": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15493,
        15542
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3069": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3070": {
      "branch": 174,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15493,
        15542
      ],
      "op": "EQ",
      "path": "20"
    },
    "3071": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC1A"
    },
    "3074": {
      "branch": 174,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3075": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3077": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3086": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3087": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3089": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "ADD",
      "path": "20"
    },
    "3090": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "3093": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3094": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x417C"
    },
    "3097": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15485,
        15580
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3098": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15485,
        15580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3099": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15620,
        15630
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3100": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15620,
        15646
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "3103": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15620,
        15646
      ],
      "op": "ADD",
      "path": "20"
    },
    "3104": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15620,
        15646
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "op": "SUB"
    },
    "3113": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15646
      ],
      "op": "AND",
      "path": "20"
    },
    "3114": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3115": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15616
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "3118": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15616
      ],
      "op": "ADD",
      "path": "20"
    },
    "3119": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15616
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15646
      ],
      "op": "AND",
      "path": "20"
    },
    "3129": {
      "branch": 175,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15594,
        15646
      ],
      "op": "EQ",
      "path": "20"
    },
    "3130": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15590,
        15750
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC9B"
    },
    "3133": {
      "branch": 175,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15590,
        15750
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3134": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15688,
        15698
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 12
    },
    "3135": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15688,
        15711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120"
    },
    "3138": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15688,
        15711
      ],
      "op": "ADD",
      "path": "20"
    },
    "3139": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15688,
        15711
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "op": "SUB"
    },
    "3148": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15669,
        15711
      ],
      "op": "AND",
      "path": "20"
    },
    "3149": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15669,
        15684
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "3150": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15669,
        15711
      ],
      "op": "LT",
      "path": "20"
    },
    "3151": {
      "branch": 176,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15669,
        15711
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3152": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC9B"
    },
    "3155": {
      "branch": 176,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3156": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3158": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3167": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3170": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3172": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3173": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "ADD",
      "path": "20"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3179": {
      "op": "DUP3"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH32",
      "value": "0x526166666C65206973206E6F7420636F6D706C65746564000000000000000000"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3217": {
      "op": "DUP3"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3222": {
      "op": "ADD"
    },
    "3223": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "3226": {
      "op": "JUMP"
    },
    "3227": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15661,
        15739
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3228": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15849,
        15859
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3229": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15849,
        15878
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "3232": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15849,
        15878
      ],
      "op": "ADD",
      "path": "20"
    },
    "3233": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15849,
        15878
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15878
      ],
      "op": "AND",
      "path": "20"
    },
    "3243": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15834
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3244": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15846
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "3247": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15846
      ],
      "op": "ADD",
      "path": "20"
    },
    "3248": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15846
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "op": "SUB"
    },
    "3257": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15878
      ],
      "op": "AND",
      "path": "20"
    },
    "3258": {
      "branch": 177,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15824,
        15878
      ],
      "op": "LT",
      "path": "20"
    },
    "3259": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15820,
        17032
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3260": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15820,
        17032
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE2C"
    },
    "3263": {
      "branch": 177,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15820,
        17032
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3264": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15985,
        16002
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3266": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        15970
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3267": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        15981
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3269": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        15981
      ],
      "op": "ADD",
      "path": "20"
    },
    "3270": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        15981
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3271": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3273": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3274": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "GT",
      "path": "20"
    },
    "3275": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3276": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCD7"
    },
    "3279": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3280": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCD7"
    },
    "3283": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "3286": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        15960,
        16002
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3287": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3288": {
      "branch": 178,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15960,
        16002
      ],
      "op": "SUB",
      "path": "20"
    },
    "3289": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15956,
        16147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD48"
    },
    "3292": {
      "branch": 178,
      "fn": "Raffle.completeRaffle",
      "offset": [
        15956,
        16147
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3293": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16029,
        16053
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 13
    },
    "3294": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16029,
        16053
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3295": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16083,
        16105
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3297": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16083,
        16105
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3298": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16083,
        16105
      ],
      "op": "ADD",
      "path": "20"
    },
    "3299": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16083,
        16105
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3300": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16107,
        16131
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "3302": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16107,
        16131
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3303": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16107,
        16131
      ],
      "op": "ADD",
      "path": "20"
    },
    "3304": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16107,
        16131
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3305": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3307": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3308": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3315": {
      "op": "SHL"
    },
    "3316": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3317": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3327": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3328": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "AND",
      "path": "20"
    },
    "3329": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3330": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "3335": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16067
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3336": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD15"
    },
    "3339": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3340": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16076,
        16080
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3341": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16076,
        16080
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3342": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3344": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "ADD",
      "path": "20"
    },
    "3345": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41BD"
    },
    "3348": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3349": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3350": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3352": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3354": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3355": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3356": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3357": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "SUB",
      "path": "20"
    },
    "3358": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3359": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3361": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3362": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3363": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3364": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3365": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3366": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3367": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD2F"
    },
    "3370": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3371": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3373": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3374": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3375": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3376": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "POP",
      "path": "20"
    },
    "3377": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "GAS",
      "path": "20"
    },
    "3378": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "CALL",
      "path": "20"
    },
    "3379": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3380": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3381": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3382": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD43"
    },
    "3385": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3386": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3387": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3389": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3390": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "3391": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3392": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3394": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3395": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3396": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "POP",
      "path": "20"
    },
    "3397": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "POP",
      "path": "20"
    },
    "3398": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "POP",
      "path": "20"
    },
    "3399": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16021,
        16132
      ],
      "op": "POP",
      "path": "20"
    },
    "3400": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15956,
        16147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3401": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16189,
        16205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3403": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16174
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3404": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3406": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16185
      ],
      "op": "ADD",
      "path": "20"
    },
    "3407": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3408": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3410": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3411": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "GT",
      "path": "20"
    },
    "3412": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3413": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD60"
    },
    "3416": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3417": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD60"
    },
    "3420": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "3423": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16164,
        16205
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3424": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3425": {
      "branch": 179,
      "fn": "Raffle.completeRaffle",
      "offset": [
        16164,
        16205
      ],
      "op": "SUB",
      "path": "20"
    },
    "3426": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16160,
        16353
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD89"
    },
    "3429": {
      "branch": 179,
      "fn": "Raffle.completeRaffle",
      "offset": [
        16160,
        16353
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3430": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16289,
        16311
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 14,
      "value": "0x20"
    },
    "3432": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16289,
        16311
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3433": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16289,
        16311
      ],
      "op": "ADD",
      "path": "20"
    },
    "3434": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16289,
        16311
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3435": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16313,
        16337
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "3437": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16313,
        16337
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3438": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16313,
        16337
      ],
      "op": "ADD",
      "path": "20"
    },
    "3439": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16313,
        16337
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3440": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16231,
        16255
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3441": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16231,
        16255
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3442": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16338
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD89"
    },
    "3445": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16338
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16273
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3455": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16273
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3456": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16273
      ],
      "op": "AND",
      "path": "20"
    },
    "3457": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16273
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3458": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16282,
        16286
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3459": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16282,
        16286
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3460": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16289,
        16311
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3461": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16273
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "3464": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16224,
        16338
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3465": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16224,
        16338
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3466": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "3475": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16512,
        16522
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 15
    },
    "3476": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16512,
        16534
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "3479": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16512,
        16534
      ],
      "op": "ADD",
      "path": "20"
    },
    "3480": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16512,
        16534
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3481": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16490
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3482": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16509
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "3485": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16509
      ],
      "op": "ADD",
      "path": "20"
    },
    "3486": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16509
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3487": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16534
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDA8"
    },
    "3490": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16534
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3491": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16534
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3492": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16534
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41E1"
    },
    "3495": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16480,
        16534
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3496": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16480,
        16534
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "AND",
      "path": "20"
    },
    "3506": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDBB"
    },
    "3509": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3510": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3511": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "3514": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16479,
        16559
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3515": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16479,
        16559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3516": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16476
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3"
    },
    "3549": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16559
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3550": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3552": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 16
    },
    "3553": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3554": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3555": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3557": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3559": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3560": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3562": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3563": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3564": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3565": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16603
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3567": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16603
      ],
      "op": "ADD",
      "path": "20"
    },
    "3568": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3569": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3574": {
      "op": "SHL"
    },
    "3575": {
      "op": "NOT"
    },
    "3576": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "AND",
      "path": "20"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3581": {
      "op": "SHL"
    },
    "3582": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "OR",
      "path": "20"
    },
    "3583": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3584": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16626
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3585": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "MLOAD",
      "path": "20",
      "statement": 17
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3588": {
      "op": "DUP1"
    },
    "3589": {
      "op": "MLOAD"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0x44B8"
    },
    "3595": {
      "op": "DUP4"
    },
    "3596": {
      "op": "CODECOPY"
    },
    "3597": {
      "op": "DUP2"
    },
    "3598": {
      "op": "MLOAD"
    },
    "3599": {
      "op": "SWAP2"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3602": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE20"
    },
    "3605": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3606": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3607": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16573,
        16591
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3608": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16444,
        16476
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3609": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16606,
        16626
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3611": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16606,
        16626
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3612": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4209"
    },
    "3615": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16645,
        16721
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3616": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3617": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3619": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3620": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3621": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3622": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "SUB",
      "path": "20"
    },
    "3623": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3624": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16645,
        16721
      ],
      "op": "LOG1",
      "path": "20"
    },
    "3625": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "POP",
      "path": "20"
    },
    "3626": {
      "fn": "Raffle.fulfillRandomnessTest",
      "offset": [
        21648,
        21784
      ],
      "op": "POP",
      "path": "20"
    },
    "3627": {
      "fn": "Raffle.fulfillRandomnessTest",
      "jump": "o",
      "offset": [
        21648,
        21784
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3628": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15820,
        17032
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3629": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16869,
        16884
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3631": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16887,
        16916
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE37"
    },
    "3634": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16906,
        16915
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3635": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16887,
        16905
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34EA"
    },
    "3638": {
      "fn": "Raffle.completeRaffle",
      "jump": "i",
      "offset": [
        16887,
        16916
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3639": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16887,
        16916
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3640": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16869,
        16916
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3641": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16869,
        16916
      ],
      "op": "POP",
      "path": "20"
    },
    "3642": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "PUSH32",
      "path": "20",
      "statement": 18,
      "value": "0x830DAF1B0E427C4692464A26BDCB77252BC16B9BAB2254964095367EDF6430F"
    },
    "3675": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16952,
        16959
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3676": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3678": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3679": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE6A"
    },
    "3682": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3683": {
      "op": "DUP2"
    },
    "3684": {
      "op": "MSTORE"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "SWAP1"
    },
    "3689": {
      "op": "JUMP"
    },
    "3690": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3691": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3693": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3694": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3695": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3696": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "SUB",
      "path": "20"
    },
    "3697": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3698": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16935,
        16960
      ],
      "op": "LOG1",
      "path": "20"
    },
    "3699": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 19,
      "value": "0x0"
    },
    "3701": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3702": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3703": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3704": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17000
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "3706": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3708": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3709": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3711": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3712": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17009
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3713": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17021
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3714": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17021
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3715": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        16974,
        17021
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3716": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15331,
        17038
      ],
      "op": "POP",
      "path": "20"
    },
    "3717": {
      "fn": "Raffle.completeRaffle",
      "offset": [
        15265,
        17038
      ],
      "op": "POP",
      "path": "20"
    },
    "3718": {
      "fn": "Raffle.completeRaffle",
      "jump": "o",
      "offset": [
        15265,
        17038
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3719": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3720": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3722": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3729": {
      "op": "SHL"
    },
    "3730": {
      "op": "SUB"
    },
    "3731": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "3732": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 20
    },
    "3733": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "3734": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB1"
    },
    "3737": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3738": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3740": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3749": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3750": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3752": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "3753": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "3756": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3757": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "3760": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3761": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3762": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24050,
        24063
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3763": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24088,
        24110
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 21
    },
    "3764": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24088,
        24110
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3765": {
      "branch": 180,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24088,
        24110
      ],
      "op": "EQ",
      "path": "20"
    },
    "3766": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF01"
    },
    "3769": {
      "branch": 180,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3770": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3772": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3781": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3784": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3786": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3787": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "ADD",
      "path": "20"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH32",
      "value": "0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3831": {
      "op": "DUP3"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "MSTORE"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "3840": {
      "op": "JUMP"
    },
    "3841": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24080,
        24141
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3842": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24151,
        24165
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3844": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24175,
        24195
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3845": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24210,
        24219
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3847": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3848": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24225,
        24228
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3849": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24221,
        24222
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3850": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24221,
        24228
      ],
      "op": "LT",
      "path": "20"
    },
    "3851": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3852": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x101A"
    },
    "3855": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3856": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP9",
      "path": "20",
      "statement": 22
    },
    "3857": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP9",
      "path": "20"
    },
    "3858": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24278,
        24279
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3859": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3860": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3861": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "LT",
      "path": "20"
    },
    "3862": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF21"
    },
    "3865": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3866": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF21"
    },
    "3869": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40C9"
    },
    "3872": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24264,
        24280
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3873": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3874": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3875": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "POP",
      "path": "20"
    },
    "3876": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3878": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "MUL",
      "path": "20"
    },
    "3879": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "ADD",
      "path": "20"
    },
    "3880": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3882": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3883": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "ADD",
      "path": "20"
    },
    "3884": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3885": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF36"
    },
    "3888": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3889": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3890": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E6E"
    },
    "3893": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24264,
        24280
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3894": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24264,
        24280
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3895": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24249,
        24280
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3896": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24249,
        24280
      ],
      "op": "POP",
      "path": "20"
    },
    "3897": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24311
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 23
    },
    "3898": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24311
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3899": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24312,
        24313
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3900": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3901": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3902": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "LT",
      "path": "20"
    },
    "3903": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF4A"
    },
    "3906": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3907": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF4A"
    },
    "3910": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40C9"
    },
    "3913": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24303,
        24314
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3914": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3915": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3916": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "POP",
      "path": "20"
    },
    "3917": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3919": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "MUL",
      "path": "20"
    },
    "3920": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "ADD",
      "path": "20"
    },
    "3921": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24303,
        24314
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3922": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24294,
        24314
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3923": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24294,
        24314
      ],
      "op": "POP",
      "path": "20"
    },
    "3924": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24366
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 24,
      "value": "0xA"
    },
    "3926": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3928": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24367,
        24379
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "SUB"
    },
    "3937": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "AND",
      "path": "20"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3944": {
      "op": "SHL"
    },
    "3945": {
      "op": "SUB"
    },
    "3946": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "AND",
      "path": "20"
    },
    "3947": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3948": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3949": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3951": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "ADD",
      "path": "20"
    },
    "3952": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3953": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3954": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3955": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3957": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "ADD",
      "path": "20"
    },
    "3958": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3960": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3961": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24346,
        24380
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3962": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24336,
        24342
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3963": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24336,
        24380
      ],
      "op": "GT",
      "path": "20"
    },
    "3964": {
      "branch": 181,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24336,
        24380
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3965": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFBA"
    },
    "3968": {
      "branch": 181,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3969": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3971": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3978": {
      "op": "SHL"
    },
    "3979": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3980": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3983": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3985": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3986": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "ADD",
      "path": "20"
    },
    "3987": {
      "op": "MSTORE"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "PUSH15",
      "value": "0x82DADEEADCE840E8DEDE40D0D2CED"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "4013": {
      "op": "SHL"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "4025": {
      "op": "JUMP"
    },
    "4026": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24328,
        24400
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "op": "SUB"
    },
    "4035": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24417,
        24443
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4036": {
      "branch": 182,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24417,
        24443
      ],
      "op": "AND",
      "path": "20"
    },
    "4037": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24414,
        24618
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFD7"
    },
    "4040": {
      "branch": 182,
      "fn": "Raffle.withdrawFees",
      "offset": [
        24414,
        24618
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4041": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24462,
        24501
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 25,
      "value": "0xFD2"
    },
    "4044": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24483,
        24492
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4045": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24494,
        24500
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4046": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24462,
        24482
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "4049": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24462,
        24501
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4050": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24462,
        24501
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4051": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24414,
        24618
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFEB"
    },
    "4054": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24414,
        24618
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4055": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24414,
        24618
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4056": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24551,
        24603
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 26,
      "value": "0xFEB"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "SUB"
    },
    "4067": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24551,
        24584
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4068": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24551,
        24584
      ],
      "op": "AND",
      "path": "20"
    },
    "4069": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24585,
        24594
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4070": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24596,
        24602
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4071": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24551,
        24584
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3461"
    },
    "4074": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24551,
        24603
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4075": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24551,
        24603
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "op": "SUB"
    },
    "4084": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 27
    },
    "4085": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "AND",
      "path": "20"
    },
    "4086": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4088": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4089": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4090": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4091": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24771
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "4093": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4095": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4096": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4098": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4099": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24785
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4100": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4101": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4102": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4103": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4104": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "SUB",
      "path": "20"
    },
    "4105": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4106": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24751,
        24795
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4107": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 28,
      "value": "0x1013"
    },
    "4110": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4111": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "4114": {
      "fn": "Raffle.withdrawFees",
      "jump": "i",
      "offset": [
        24230,
        24233
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4115": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4116": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4117": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24230,
        24233
      ],
      "op": "POP",
      "path": "20"
    },
    "4118": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF07"
    },
    "4121": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4122": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4123": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24205,
        24820
      ],
      "op": "POP",
      "path": "20"
    },
    "4124": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24026,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4125": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24026,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4126": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        24026,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4127": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4128": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4129": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4130": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4131": {
      "fn": "Raffle.withdrawFees",
      "offset": [
        23903,
        24826
      ],
      "op": "POP",
      "path": "20"
    },
    "4132": {
      "fn": "Raffle.withdrawFees",
      "jump": "o",
      "offset": [
        23903,
        24826
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4133": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4134": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26100,
        26119
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "4136": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26131,
        26164
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4137": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26174,
        26189
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4139": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26206,
        26215
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4140": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4141": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26221,
        26234
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4143": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26221,
        26234
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4144": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26217,
        26218
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4145": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26217,
        26234
      ],
      "op": "LT",
      "path": "20"
    },
    "4146": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4147": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11C7"
    },
    "4150": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4151": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26285,
        26308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4153": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4154": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4155": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4156": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26266
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4158": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4160": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4161": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4162": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4163": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4165": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4166": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26269
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4167": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4169": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "ADD",
      "path": "20"
    },
    "4170": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4175": {
      "op": "SHL"
    },
    "4176": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4177": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "DIV",
      "path": "20"
    },
    "4178": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4180": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "AND",
      "path": "20"
    },
    "4181": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26281
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4182": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4183": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "GT",
      "path": "20"
    },
    "4184": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4185": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1064"
    },
    "4188": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4189": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1064"
    },
    "4192": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4195": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26259,
        26308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4196": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4197": {
      "branch": 183,
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26259,
        26308
      ],
      "op": "SUB",
      "path": "20"
    },
    "4198": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26255,
        26405
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11B7"
    },
    "4201": {
      "branch": 183,
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26255,
        26405
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4202": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 29,
      "value": "0x0"
    },
    "4204": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4205": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4206": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4207": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26360
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4209": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4211": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4212": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4213": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4214": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4216": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4217": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4218": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4219": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4220": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4221": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4222": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "4225": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4226": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4227": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4228": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4229": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4230": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4237": {
      "op": "SHL"
    },
    "4238": {
      "op": "SUB"
    },
    "4239": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4240": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4241": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4242": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4243": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4244": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4246": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4247": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4248": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4249": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4250": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4251": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4252": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4253": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4254": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4255": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4256": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4257": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4258": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4260": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4261": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4262": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4263": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4264": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4265": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4266": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "4267": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4268": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4269": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "4270": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4271": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "4272": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4273": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26353,
        26363
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4274": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "4276": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4277": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4278": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4285": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DIV",
      "path": "20"
    },
    "4286": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4288": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4289": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4290": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4291": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "GT",
      "path": "20"
    },
    "4292": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4293": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10D0"
    },
    "4296": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4297": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10D0"
    },
    "4300": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4303": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4304": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4305": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4307": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4308": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "GT",
      "path": "20"
    },
    "4309": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4310": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10E1"
    },
    "4313": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4314": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10E1"
    },
    "4317": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4320": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4321": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4322": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4323": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4324": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4326": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4327": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4329": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4330": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4331": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "4333": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4334": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4335": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4336": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4339": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "EXP",
      "path": "20"
    },
    "4340": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4341": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DIV",
      "path": "20"
    },
    "4342": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4344": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4345": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4347": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4348": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "GT",
      "path": "20"
    },
    "4349": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4350": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1109"
    },
    "4353": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4354": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1109"
    },
    "4357": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4360": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4361": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4362": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4364": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4365": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "GT",
      "path": "20"
    },
    "4366": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4367": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x111A"
    },
    "4370": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4371": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x111A"
    },
    "4374": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4377": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4378": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4379": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4380": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4381": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4383": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4384": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4385": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4386": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4388": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4389": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4390": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4391": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4393": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4394": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4395": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4402": {
      "op": "SHL"
    },
    "4403": {
      "op": "SUB"
    },
    "4404": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4405": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4407": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4408": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4409": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4410": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4412": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4413": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4414": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4415": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "4417": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4418": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4419": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4420": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4422": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4423": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4424": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4425": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "4427": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4428": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4429": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4430": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4432": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4433": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4434": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "op": "SUB"
    },
    "4443": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4444": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4445": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4446": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "4448": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4449": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4450": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4455": {
      "op": "SHL"
    },
    "4456": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4457": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4458": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4459": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DIV",
      "path": "20"
    },
    "4460": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4461": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4462": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "4464": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4465": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4466": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4467": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "4469": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4470": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4471": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4472": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4473": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4474": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4475": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4476": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "4478": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4479": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4480": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4481": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DIV",
      "path": "20"
    },
    "4482": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4483": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4484": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "AND",
      "path": "20"
    },
    "4485": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4488": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4489": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4490": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "ADD",
      "path": "20"
    },
    "4491": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4492": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4493": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4494": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26341
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4495": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4496": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26342,
        26349
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4497": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26342,
        26349
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4498": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4499": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "LT",
      "path": "20"
    },
    "4500": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x119F"
    },
    "4503": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4504": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x119F"
    },
    "4507": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40C9"
    },
    "4510": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26328,
        26350
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4511": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4512": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4514": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "MUL",
      "path": "20"
    },
    "4515": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4517": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "ADD",
      "path": "20"
    },
    "4518": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26350
      ],
      "op": "ADD",
      "path": "20"
    },
    "4519": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4520": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4521": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4522": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26328,
        26363
      ],
      "op": "POP",
      "path": "20"
    },
    "4523": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 30
    },
    "4524": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11B4"
    },
    "4527": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4528": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "4531": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26381,
        26390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4532": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4533": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4534": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26381,
        26390
      ],
      "op": "POP",
      "path": "20"
    },
    "4535": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26255,
        26405
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4536": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 31,
      "value": "0x11C0"
    },
    "4539": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4540": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "4543": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "i",
      "offset": [
        26236,
        26239
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4544": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4545": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4546": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26236,
        26239
      ],
      "op": "POP",
      "path": "20"
    },
    "4547": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x102C"
    },
    "4550": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4551": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26201,
        26415
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26431,
        26444
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 32
    },
    "4554": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26431,
        26444
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4555": {
      "fn": "Raffle.getActiveRaffles",
      "offset": [
        26050,
        26451
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "op": "POP"
    },
    "4558": {
      "fn": "Raffle.getActiveRaffles",
      "jump": "o",
      "offset": [
        26050,
        26451
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4559": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4560": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4562": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4564": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4565": {
      "offset": [
        2260,
        2279
      ],
      "op": "SUB",
      "path": "2"
    },
    "4566": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F1"
    },
    "4569": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4570": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4572": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4581": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4582": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4584": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "2"
    },
    "4585": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "4588": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4589": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4068"
    },
    "4592": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4593": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4594": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4596": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4598": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4599": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4601": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4606": {
      "op": "SHL"
    },
    "4607": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4608": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "4609": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4611": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "4612": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4613": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1220"
    },
    "4616": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4617": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4619": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4628": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4629": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4631": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "4632": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "4635": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4636": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "4639": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4640": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4641": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17348,
        17377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4643": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4644": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4645": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4646": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17387
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4648": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4650": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4651": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4653": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4654": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17380,
        17398
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4655": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17416,
        17438
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 33,
      "value": "0x1"
    },
    "4657": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17416,
        17438
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4658": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17416,
        17438
      ],
      "op": "ADD",
      "path": "20"
    },
    "4659": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17416,
        17438
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4666": {
      "op": "SHL"
    },
    "4667": {
      "op": "SUB"
    },
    "4668": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17416,
        17438
      ],
      "op": "AND",
      "path": "20"
    },
    "4669": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1258"
    },
    "4672": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4673": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4675": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4684": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4685": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4687": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "ADD",
      "path": "20"
    },
    "4688": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "4691": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4692": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4145"
    },
    "4695": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17408,
        17483
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4696": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17408,
        17483
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4697": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17527,
        17548
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 34,
      "value": "0x2"
    },
    "4699": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4700": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4701": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "ADD",
      "path": "20"
    },
    "4702": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4707": {
      "op": "SHL"
    },
    "4708": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4709": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "DIV",
      "path": "20"
    },
    "4710": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4712": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17523
      ],
      "op": "AND",
      "path": "20"
    },
    "4713": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4715": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4716": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "GT",
      "path": "20"
    },
    "4717": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4718": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1279"
    },
    "4721": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4722": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1279"
    },
    "4725": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4728": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17501,
        17548
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4729": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4730": {
      "branch": 184,
      "fn": "Raffle.claimRaffle",
      "offset": [
        17501,
        17548
      ],
      "op": "EQ",
      "path": "20"
    },
    "4731": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1296"
    },
    "4734": {
      "branch": 184,
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4735": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4737": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4744": {
      "op": "SHL"
    },
    "4745": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4746": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4747": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4749": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "ADD",
      "path": "20"
    },
    "4750": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "4753": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4754": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x417C"
    },
    "4757": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17493,
        17586
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4758": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17493,
        17586
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4759": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17619
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 35,
      "value": "0x2"
    },
    "4761": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17619
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4762": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17619
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4763": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17619
      ],
      "op": "ADD",
      "path": "20"
    },
    "4764": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4765": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "NOT"
    },
    "4772": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "AND",
      "path": "20"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "4777": {
      "op": "SHL"
    },
    "4778": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "OR",
      "path": "20"
    },
    "4779": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4780": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17641
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4781": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x40"
    },
    "4783": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4786": {
      "op": "DUP1"
    },
    "4787": {
      "op": "MLOAD"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0x44B8"
    },
    "4793": {
      "op": "DUP4"
    },
    "4794": {
      "op": "CODECOPY"
    },
    "4795": {
      "op": "DUP2"
    },
    "4796": {
      "op": "MLOAD"
    },
    "4797": {
      "op": "SWAP2"
    },
    "4798": {
      "op": "MSTORE"
    },
    "4799": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4800": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12CE"
    },
    "4803": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4804": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17675,
        17684
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4805": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17675,
        17684
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4806": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17597,
        17619
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4807": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17622,
        17641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4809": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17622,
        17641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4810": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4209"
    },
    "4813": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17656,
        17729
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4814": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4815": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4817": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4818": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4819": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4820": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "SUB",
      "path": "20"
    },
    "4821": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4822": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17656,
        17729
      ],
      "op": "LOG1",
      "path": "20"
    },
    "4823": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4825": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4826": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "ADD",
      "path": "20"
    },
    "4827": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4828": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17811,
        17834
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4830": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17811,
        17834
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4831": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17811,
        17834
      ],
      "op": "ADD",
      "path": "20"
    },
    "4832": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17811,
        17834
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "SUB"
    },
    "4841": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4842": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4843": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "AND",
      "path": "20"
    },
    "4844": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17762,
        17784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4845": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17811,
        17834
      ],
      "op": "AND",
      "path": "20"
    },
    "4846": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17740,
        17759
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4848": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4850": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4851": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "ADD",
      "path": "20"
    },
    "4852": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4859": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "DIV",
      "path": "20"
    },
    "4860": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4862": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17913
      ],
      "op": "AND",
      "path": "20"
    },
    "4863": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4865": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4866": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "GT",
      "path": "20"
    },
    "4867": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4868": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x130F"
    },
    "4871": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4872": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x130F"
    },
    "4875": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "4878": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17892,
        17934
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4879": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4880": {
      "branch": 185,
      "fn": "Raffle.claimRaffle",
      "offset": [
        17892,
        17934
      ],
      "op": "SUB",
      "path": "20"
    },
    "4881": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17888,
        18055
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x137D"
    },
    "4884": {
      "branch": 185,
      "fn": "Raffle.claimRaffle",
      "offset": [
        17888,
        18055
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4885": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 37
    },
    "4886": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4887": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18019,
        18043
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4889": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18019,
        18043
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4890": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18019,
        18043
      ],
      "op": "ADD",
      "path": "20"
    },
    "4891": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18019,
        18043
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4892": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4894": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4895": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4902": {
      "op": "SHL"
    },
    "4903": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4904": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4911": {
      "op": "SHL"
    },
    "4912": {
      "op": "SUB"
    },
    "4913": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4914": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4915": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "AND",
      "path": "20"
    },
    "4916": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17957,
        17981
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4917": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        17995
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "4922": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        17995
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4923": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x134A"
    },
    "4926": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4927": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18004,
        18008
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4928": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18004,
        18008
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4929": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18011,
        18017
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4930": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18011,
        18017
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4931": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4933": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "ADD",
      "path": "20"
    },
    "4934": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41BD"
    },
    "4937": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4938": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4939": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4941": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4943": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4944": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4945": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4946": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "SUB",
      "path": "20"
    },
    "4947": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4948": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4950": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4951": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4952": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4953": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4954": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4955": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4956": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1364"
    },
    "4959": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4960": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4962": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4963": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4964": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4965": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "POP",
      "path": "20"
    },
    "4966": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "GAS",
      "path": "20"
    },
    "4967": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "CALL",
      "path": "20"
    },
    "4968": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4969": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4970": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4971": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1378"
    },
    "4974": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4975": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4976": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4978": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4979": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "4980": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4981": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4983": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4984": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4985": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "POP",
      "path": "20"
    },
    "4986": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "POP",
      "path": "20"
    },
    "4987": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "POP",
      "path": "20"
    },
    "4988": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17949,
        18044
      ],
      "op": "POP",
      "path": "20"
    },
    "4989": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        17888,
        18055
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4990": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18093,
        18109
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4992": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4994": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4995": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "ADD",
      "path": "20"
    },
    "4996": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5003": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "DIV",
      "path": "20"
    },
    "5004": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5006": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18089
      ],
      "op": "AND",
      "path": "20"
    },
    "5007": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5009": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5010": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "GT",
      "path": "20"
    },
    "5011": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5012": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x139F"
    },
    "5015": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5016": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x139F"
    },
    "5019": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "5022": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18068,
        18109
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5023": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5024": {
      "branch": 186,
      "fn": "Raffle.claimRaffle",
      "offset": [
        18068,
        18109
      ],
      "op": "SUB",
      "path": "20"
    },
    "5025": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18064,
        18450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E6"
    },
    "5028": {
      "branch": 186,
      "fn": "Raffle.claimRaffle",
      "offset": [
        18064,
        18450
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5029": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18168,
        18192
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5030": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18168,
        18192
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5037": {
      "op": "SHL"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18168,
        18192
      ],
      "op": "AND",
      "path": "20"
    },
    "5040": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18164,
        18440
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13C6"
    },
    "5043": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18164,
        18440
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5044": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18223,
        18277
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 38,
      "value": "0x13C1"
    },
    "5047": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18244,
        18250
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5048": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18252,
        18262
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5049": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18252,
        18276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5051": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18252,
        18276
      ],
      "op": "ADD",
      "path": "20"
    },
    "5052": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18252,
        18276
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5053": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18223,
        18243
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "5056": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18223,
        18277
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5057": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18223,
        18277
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5058": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18164,
        18440
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E6"
    },
    "5061": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18164,
        18440
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5062": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18164,
        18440
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5063": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18400,
        18424
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0x3"
    },
    "5065": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18400,
        18424
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5066": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18400,
        18424
      ],
      "op": "ADD",
      "path": "20"
    },
    "5067": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18400,
        18424
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5068": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5069": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5070": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18327,
        18425
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E6"
    },
    "5073": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18327,
        18425
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5080": {
      "op": "SHL"
    },
    "5081": {
      "op": "SUB"
    },
    "5082": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5083": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5084": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "AND",
      "path": "20"
    },
    "5085": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18334,
        18358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5086": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18385,
        18389
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "5087": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18385,
        18389
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5088": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18392,
        18398
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5089": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18392,
        18398
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5090": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18327,
        18376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "5093": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18327,
        18425
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5094": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18327,
        18425
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5095": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18513,
        18538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "5097": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18513,
        18538
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5098": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18513,
        18538
      ],
      "op": "ADD",
      "path": "20"
    },
    "5099": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18513,
        18538
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5100": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18510
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "5102": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18510
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5103": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18510
      ],
      "op": "ADD",
      "path": "20"
    },
    "5104": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18510
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5105": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18460,
        18485
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5107": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18460,
        18485
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5108": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1405"
    },
    "5111": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18538
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5118": {
      "op": "SHL"
    },
    "5119": {
      "op": "SUB"
    },
    "5120": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18510
      ],
      "op": "AND",
      "path": "20"
    },
    "5121": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "5124": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18488,
        18538
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5125": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18488,
        18538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5126": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18460,
        18538
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5127": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18460,
        18538
      ],
      "op": "POP",
      "path": "20"
    },
    "5128": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18548,
        18559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5130": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18600,
        18615
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "5132": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18600,
        18615
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5133": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18583,
        18596
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "5135": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18583,
        18596
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5136": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18580
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5137": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18596
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x141A"
    },
    "5140": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18596
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5141": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18596
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5142": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18596
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "5145": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18563,
        18596
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5146": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18563,
        18596
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5147": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18562,
        18615
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1424"
    },
    "5150": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18562,
        18615
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5151": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18562,
        18615
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5152": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18562,
        18615
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4275"
    },
    "5155": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18562,
        18615
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5156": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18562,
        18615
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5157": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18548,
        18615
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 40,
      "value": "0x1430"
    },
    "5162": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18548,
        18615
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5163": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5164": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4289"
    },
    "5167": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18625,
        18649
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5168": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5169": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5171": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5172": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "ADD",
      "path": "20"
    },
    "5173": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5180": {
      "op": "SHL"
    },
    "5181": {
      "op": "SUB"
    },
    "5182": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "AND",
      "path": "20"
    },
    "5183": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18659,
        18681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5185": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 41
    },
    "5186": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5187": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5188": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18733
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "5190": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5192": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5193": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5195": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5196": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5197": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5198": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5199": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5200": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18625,
        18649
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5203": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18684,
        18703
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5204": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18753,
        18756
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5205": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18753,
        18756
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5206": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18749
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5207": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18659,
        18681
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5208": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1462"
    },
    "5211": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5212": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18753,
        18756
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5213": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18753,
        18756
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5214": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "5217": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18713,
        18756
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5218": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5219": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5220": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5221": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18713,
        18756
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5222": {
      "op": "POP"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5230": {
      "op": "SHL"
    },
    "5231": {
      "op": "SUB"
    },
    "5232": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18810,
        18838
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5233": {
      "branch": 187,
      "fn": "Raffle.claimRaffle",
      "offset": [
        18810,
        18838
      ],
      "op": "AND",
      "path": "20"
    },
    "5234": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18807,
        19087
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1484"
    },
    "5237": {
      "branch": 187,
      "fn": "Raffle.claimRaffle",
      "offset": [
        18807,
        19087
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5238": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18885,
        18937
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 42,
      "value": "0x147F"
    },
    "5241": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18906,
        18917
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5242": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18919,
        18936
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5243": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18885,
        18905
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "5246": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        18885,
        18937
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5247": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18885,
        18937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5248": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18807,
        19087
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1498"
    },
    "5251": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18807,
        19087
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5252": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        18807,
        19087
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5253": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19009,
        19076
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 43,
      "value": "0x1498"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5262": {
      "op": "SHL"
    },
    "5263": {
      "op": "SUB"
    },
    "5264": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19009,
        19044
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5265": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19009,
        19044
      ],
      "op": "AND",
      "path": "20"
    },
    "5266": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19045,
        19056
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5267": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19058,
        19075
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5268": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19009,
        19044
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3461"
    },
    "5271": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        19009,
        19076
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5272": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19009,
        19076
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5273": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 44,
      "value": "0x8"
    },
    "5275": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5276": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "ADD",
      "path": "20"
    },
    "5277": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5278": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19141,
        19229
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14CA"
    },
    "5281": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19141,
        19229
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5282": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19162,
        19173
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5283": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19162,
        19173
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5284": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19175,
        19228
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14C5"
    },
    "5287": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19175,
        19228
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5294": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "DIV",
      "path": "20"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19199,
        19228
      ],
      "op": "AND",
      "path": "20"
    },
    "5304": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "5313": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19175,
        19228
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "5316": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        19175,
        19228
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5317": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19175,
        19228
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5318": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19141,
        19161
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "5321": {
      "fn": "Raffle.claimRaffle",
      "jump": "i",
      "offset": [
        19141,
        19229
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5322": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        19141,
        19229
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "op": "POP"
    },
    "5325": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5327": {
      "offset": [
        2563,
        2585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5328": {
      "fn": "Raffle.claimRaffle",
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5329": {
      "op": "POP"
    },
    "5330": {
      "op": "POP"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "op": "POP"
    },
    "5334": {
      "fn": "Raffle.claimRaffle",
      "jump": "o",
      "offset": [
        17262,
        19236
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5335": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5336": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5338": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5345": {
      "op": "SHL"
    },
    "5346": {
      "op": "SUB"
    },
    "5347": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "5348": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5349": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "5350": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1501"
    },
    "5353": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5354": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5356": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5363": {
      "op": "SHL"
    },
    "5364": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5365": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5366": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5368": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "5369": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "5372": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5373": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "5376": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5377": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "op": "SUB"
    },
    "5386": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 45
    },
    "5387": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "AND",
      "path": "20"
    },
    "5388": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5390": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5391": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5392": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5393": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23450
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5395": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5397": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5398": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5400": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5401": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5402": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5403": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5405": {
      "branch": 188,
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23429,
        23470
      ],
      "op": "AND",
      "path": "20"
    },
    "5406": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1569"
    },
    "5409": {
      "branch": 188,
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5410": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5412": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5419": {
      "op": "SHL"
    },
    "5420": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5421": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5424": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5426": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5427": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "ADD",
      "path": "20"
    },
    "5428": {
      "op": "MSTORE"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5433": {
      "op": "DUP3"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "PUSH32",
      "value": "0x546F6B656E206973206E6F742077686974656C69737465640000000000000000"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5471": {
      "op": "DUP3"
    },
    "5472": {
      "op": "ADD"
    },
    "5473": {
      "op": "MSTORE"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5476": {
      "op": "ADD"
    },
    "5477": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "5480": {
      "op": "JUMP"
    },
    "5481": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23421,
        23499
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5488": {
      "op": "SHL"
    },
    "5489": {
      "op": "SUB"
    },
    "5490": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 46
    },
    "5491": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "AND",
      "path": "20"
    },
    "5492": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23553,
        23558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5494": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5495": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5496": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5497": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5499": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5501": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5502": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5503": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5504": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5506": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5507": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5508": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5509": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23550
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5510": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23558
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5511": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23558
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5514": {
      "op": "NOT"
    },
    "5515": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23558
      ],
      "op": "AND",
      "path": "20"
    },
    "5516": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23558
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5517": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23509,
        23558
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5518": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 47
    },
    "5519": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5520": {
      "op": "SWAP2"
    },
    "5521": {
      "op": "DUP3"
    },
    "5522": {
      "op": "MSTORE"
    },
    "5523": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xDC0548BC90523A9E943EA77D199875FDC1E4F8A419B6D53A595B5E6671480E5"
    },
    "5556": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5559": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5561": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5562": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5563": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5564": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "SUB",
      "path": "20"
    },
    "5565": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5566": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23573,
        23613
      ],
      "op": "LOG1",
      "path": "20"
    },
    "5567": {
      "fn": "Raffle.blacklistCurrency",
      "offset": [
        23337,
        23620
      ],
      "op": "POP",
      "path": "20"
    },
    "5568": {
      "fn": "Raffle.blacklistCurrency",
      "jump": "o",
      "offset": [
        23337,
        23620
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5569": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5570": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25379,
        25390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5572": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25423,
        25436
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 48,
      "value": "0x7"
    },
    "5574": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25423,
        25436
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5575": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25410,
        25419
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5576": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25410,
        25436
      ],
      "op": "GT",
      "path": "20"
    },
    "5577": {
      "branch": 189,
      "fn": "Raffle.getRaffleState",
      "offset": [
        25410,
        25436
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5578": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1615"
    },
    "5581": {
      "branch": 189,
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5582": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5584": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5591": {
      "op": "SHL"
    },
    "5592": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5593": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5596": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5598": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5599": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "ADD",
      "path": "20"
    },
    "5600": {
      "op": "MSTORE"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5605": {
      "op": "DUP3"
    },
    "5606": {
      "op": "ADD"
    },
    "5607": {
      "op": "MSTORE"
    },
    "5608": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520494420646F6573206E6F7420657869737400000000"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5643": {
      "op": "DUP3"
    },
    "5644": {
      "op": "ADD"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "5652": {
      "op": "JUMP"
    },
    "5653": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25402,
        25469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5654": {
      "op": "POP"
    },
    "5655": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 49,
      "value": "0x0"
    },
    "5657": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5658": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5659": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5660": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5662": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5664": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5665": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5667": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5668": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25504
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5669": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5671": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "ADD",
      "path": "20"
    },
    "5672": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5677": {
      "op": "SHL"
    },
    "5678": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5679": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "DIV",
      "path": "20"
    },
    "5680": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5682": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "AND",
      "path": "20"
    },
    "5683": {
      "fn": "Raffle.getRaffleState",
      "offset": [
        25486,
        25516
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5684": {
      "fn": "Raffle.getRaffleState",
      "jump": "o",
      "offset": [
        25314,
        25524
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5685": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5686": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5688": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5690": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5691": {
      "offset": [
        2260,
        2279
      ],
      "op": "SUB",
      "path": "2"
    },
    "5692": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1657"
    },
    "5695": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5696": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5698": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5705": {
      "op": "SHL"
    },
    "5706": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5707": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5708": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5710": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "2"
    },
    "5711": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "5714": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5715": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4068"
    },
    "5718": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5719": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5720": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5722": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5724": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5725": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5727": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5732": {
      "op": "SHL"
    },
    "5733": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5734": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "5735": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5737": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "5738": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5739": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1686"
    },
    "5742": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5743": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5745": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5752": {
      "op": "SHL"
    },
    "5753": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5754": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5755": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5757": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "5758": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "5761": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5762": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "5765": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5766": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5767": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9260,
        9273
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 50,
      "value": "0x7"
    },
    "5769": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9260,
        9273
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5770": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9247,
        9256
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5771": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9247,
        9273
      ],
      "op": "GT",
      "path": "20"
    },
    "5772": {
      "branch": 190,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9247,
        9273
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5773": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16D0"
    },
    "5776": {
      "branch": 190,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5777": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5779": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5786": {
      "op": "SHL"
    },
    "5787": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5788": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5791": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5793": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5794": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "ADD",
      "path": "20"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5800": {
      "op": "DUP3"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "op": "MSTORE"
    },
    "5803": {
      "op": "PUSH21",
      "value": "0x149859999B1948191BD95CC81B9BDD08195E1A5CDD"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "5827": {
      "op": "SHL"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5830": {
      "op": "DUP3"
    },
    "5831": {
      "op": "ADD"
    },
    "5832": {
      "op": "MSTORE"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5835": {
      "op": "ADD"
    },
    "5836": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "5839": {
      "op": "JUMP"
    },
    "5840": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9239,
        9299
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5841": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9337
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5843": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5844": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5845": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5846": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9347
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5848": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5850": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5851": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5852": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5853": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5855": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5856": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5857": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5858": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5859": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5860": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "5863": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5864": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5865": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5866": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5867": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5868": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5875": {
      "op": "SHL"
    },
    "5876": {
      "op": "SUB"
    },
    "5877": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5878": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5879": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "5880": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5881": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5882": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5884": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5885": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5886": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5887": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5888": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "5889": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "5890": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5891": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5892": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "5893": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5894": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "5895": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5896": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5898": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5899": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5900": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5901": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5902": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5903": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "5904": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5905": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5906": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5907": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5908": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5909": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5910": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5911": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5912": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5913": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5914": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9340,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5915": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "5917": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5918": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5919": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5924": {
      "op": "SHL"
    },
    "5925": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5926": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5927": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DIV",
      "path": "20"
    },
    "5928": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5930": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "5931": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5932": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5933": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "GT",
      "path": "20"
    },
    "5934": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5935": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x173A"
    },
    "5938": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5939": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x173A"
    },
    "5942": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "5945": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5946": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5947": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5949": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5950": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "GT",
      "path": "20"
    },
    "5951": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5952": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x174B"
    },
    "5955": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5956": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x174B"
    },
    "5959": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "5962": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5963": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5964": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5965": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5966": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5968": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5969": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5971": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5972": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "5973": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "5975": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5976": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5977": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5978": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5981": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "EXP",
      "path": "20"
    },
    "5982": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5983": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DIV",
      "path": "20"
    },
    "5984": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5986": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "5987": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5989": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5990": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "GT",
      "path": "20"
    },
    "5991": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5992": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1773"
    },
    "5995": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5996": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1773"
    },
    "5999": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "6002": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6003": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6004": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6006": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6007": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "GT",
      "path": "20"
    },
    "6008": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6009": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1784"
    },
    "6012": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6013": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1784"
    },
    "6016": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "6019": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6020": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6021": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6022": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6023": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "6025": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6026": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6027": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6028": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6030": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6031": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6032": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6033": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6034": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6035": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6036": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6037": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6039": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6040": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6041": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "op": "SUB"
    },
    "6050": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6051": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6052": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "6053": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6055": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6056": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6057": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6058": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6060": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6061": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6062": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6063": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "6065": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6066": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6067": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6068": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6070": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6071": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6072": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6073": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "6075": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6076": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6077": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6078": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "6080": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6081": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6082": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6089": {
      "op": "SHL"
    },
    "6090": {
      "op": "SUB"
    },
    "6091": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6092": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6093": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "6094": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "6096": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6097": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6098": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6103": {
      "op": "SHL"
    },
    "6104": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6105": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6106": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6107": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DIV",
      "path": "20"
    },
    "6108": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6109": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "6110": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "6112": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6113": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6114": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6115": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "6117": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6118": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "6119": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6120": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6121": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6122": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6123": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "6124": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "6126": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6127": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6128": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6129": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "DIV",
      "path": "20"
    },
    "6130": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6131": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6132": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "AND",
      "path": "20"
    },
    "6133": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "6136": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6137": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6138": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "ADD",
      "path": "20"
    },
    "6139": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6140": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6141": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6142": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9309,
        9358
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6143": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9390,
        9412
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 51
    },
    "6144": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9390,
        9412
      ],
      "op": "ADD",
      "path": "20"
    },
    "6145": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9390,
        9412
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6146": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9390,
        9412
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6147": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9390,
        9412
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6148": {
      "op": "POP"
    },
    "6149": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9376,
        9412
      ],
      "op": "AND",
      "path": "20"
    },
    "6150": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9376,
        9386
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6151": {
      "branch": 191,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9376,
        9412
      ],
      "op": "EQ",
      "path": "20"
    },
    "6152": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1863"
    },
    "6155": {
      "branch": 191,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6156": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6158": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6165": {
      "op": "SHL"
    },
    "6166": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6167": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6170": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6172": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6173": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "ADD",
      "path": "20"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "MSTORE"
    },
    "6182": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F742063616E63656C20736F6D656F6E6520656C73652773"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH7",
      "value": "0x20726166666C65"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6230": {
      "op": "SHL"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "ADD"
    },
    "6235": {
      "op": "MSTORE"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6238": {
      "op": "ADD"
    },
    "6239": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "6242": {
      "op": "JUMP"
    },
    "6243": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9368,
        9456
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6244": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9500,
        9523
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 52,
      "value": "0x0"
    },
    "6246": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6247": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9496
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "6249": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9496
      ],
      "op": "ADD",
      "path": "20"
    },
    "6250": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9496
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6251": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6253": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6254": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "GT",
      "path": "20"
    },
    "6255": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6256": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x187B"
    },
    "6259": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6260": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x187B"
    },
    "6263": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "6266": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9474,
        9523
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6267": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6268": {
      "branch": 192,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9474,
        9523
      ],
      "op": "EQ",
      "path": "20"
    },
    "6269": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1898"
    },
    "6272": {
      "branch": 192,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6273": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6275": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6284": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6285": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6287": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "ADD",
      "path": "20"
    },
    "6288": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "6291": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6292": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42A0"
    },
    "6295": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9466,
        9557
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6296": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9466,
        9557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6297": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9600,
        9601
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 53,
      "value": "0x1"
    },
    "6299": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9585
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6300": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "6303": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9597
      ],
      "op": "ADD",
      "path": "20"
    },
    "6304": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9597
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6311": {
      "op": "SHL"
    },
    "6312": {
      "op": "SUB"
    },
    "6313": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9601
      ],
      "op": "AND",
      "path": "20"
    },
    "6314": {
      "branch": 193,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9575,
        9601
      ],
      "op": "LT",
      "path": "20"
    },
    "6315": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18F6"
    },
    "6318": {
      "branch": 193,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6319": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6321": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6322": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6328": {
      "op": "SHL"
    },
    "6329": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6330": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6333": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6335": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6336": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "ADD",
      "path": "20"
    },
    "6337": {
      "op": "DUP2"
    },
    "6338": {
      "op": "SWAP1"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6342": {
      "op": "DUP3"
    },
    "6343": {
      "op": "ADD"
    },
    "6344": {
      "op": "MSTORE"
    },
    "6345": {
      "op": "PUSH32",
      "value": "0x5469636B657473206861766520616C7265616479206265656E20626F75676874"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6380": {
      "op": "DUP3"
    },
    "6381": {
      "op": "ADD"
    },
    "6382": {
      "op": "MSTORE"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "6389": {
      "op": "JUMP"
    },
    "6390": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9567,
        9638
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6391": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0x0"
    },
    "6393": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6394": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6395": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6396": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6398": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6400": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6401": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6402": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6403": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6405": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6406": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6407": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6408": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6409": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "op": "SUB"
    },
    "6418": {
      "op": "NOT"
    },
    "6419": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6420": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6421": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "AND",
      "path": "20"
    },
    "6422": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6423": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6427": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6428": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6429": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6430": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6431": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "AND",
      "path": "20"
    },
    "6432": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6433": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6434": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "6436": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6437": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6438": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6439": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6440": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "6442": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6443": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6444": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6445": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP9",
      "path": "20"
    },
    "6446": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6447": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6448": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "6449": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6450": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6451": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6452": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6453": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6454": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6455": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "AND",
      "path": "20"
    },
    "6456": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6457": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6458": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6459": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6461": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6462": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6463": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6464": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6465": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6466": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6468": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6469": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6470": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6471": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6472": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6473": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "6475": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6476": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6477": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6478": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6479": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6480": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "6482": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6483": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6484": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "ADD",
      "path": "20"
    },
    "6485": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6486": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6487": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6494": {
      "op": "SHL"
    },
    "6495": {
      "op": "SUB"
    },
    "6496": {
      "op": "NOT"
    },
    "6497": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9691,
        9716
      ],
      "op": "AND",
      "path": "20"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9755,
        9808
      ],
      "op": "OR",
      "path": "20",
      "statement": 55
    },
    "6504": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9755,
        9808
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6505": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9755,
        9808
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6506": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "MLOAD",
      "path": "20",
      "statement": 56
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6509": {
      "op": "DUP1"
    },
    "6510": {
      "op": "MLOAD"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x44B8"
    },
    "6516": {
      "op": "DUP4"
    },
    "6517": {
      "op": "CODECOPY"
    },
    "6518": {
      "op": "DUP2"
    },
    "6519": {
      "op": "MLOAD"
    },
    "6520": {
      "op": "SWAP2"
    },
    "6521": {
      "op": "MSTORE"
    },
    "6522": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6523": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1985"
    },
    "6526": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6527": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6528": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9698,
        9716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6529": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4209"
    },
    "6532": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9823,
        9899
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6533": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6534": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6536": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6537": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6538": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6539": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "SUB",
      "path": "20"
    },
    "6540": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6541": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9823,
        9899
      ],
      "op": "LOG1",
      "path": "20"
    },
    "6542": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9977,
        9994
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6544": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9962
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6545": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9973
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "6547": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9973
      ],
      "op": "ADD",
      "path": "20"
    },
    "6548": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9973
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6549": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6551": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6552": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "GT",
      "path": "20"
    },
    "6553": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6554": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19A5"
    },
    "6557": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6558": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19A5"
    },
    "6561": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "6564": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        9952,
        9994
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6565": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6566": {
      "branch": 194,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9952,
        9994
      ],
      "op": "SUB",
      "path": "20"
    },
    "6567": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9948,
        10259
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A7F"
    },
    "6570": {
      "branch": 194,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9948,
        10259
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6571": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10018,
        10042
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 57
    },
    "6572": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10018,
        10042
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6573": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10072,
        10094
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6575": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10072,
        10094
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6576": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10072,
        10094
      ],
      "op": "ADD",
      "path": "20"
    },
    "6577": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10072,
        10094
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6578": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10096,
        10120
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "6580": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10096,
        10120
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6581": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10096,
        10120
      ],
      "op": "ADD",
      "path": "20"
    },
    "6582": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10096,
        10120
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6583": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6585": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6586": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6593": {
      "op": "SHL"
    },
    "6594": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6595": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "op": "SUB"
    },
    "6604": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6605": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6606": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "AND",
      "path": "20"
    },
    "6607": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6608": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "6613": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10056
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6614": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E3"
    },
    "6617": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6618": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10065,
        10069
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6619": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10065,
        10069
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6620": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6622": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "ADD",
      "path": "20"
    },
    "6623": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41BD"
    },
    "6626": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6627": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6628": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6630": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6632": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6633": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6634": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6635": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "SUB",
      "path": "20"
    },
    "6636": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6637": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6639": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP8",
      "path": "20"
    },
    "6640": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6641": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6642": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6643": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6644": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6645": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19FD"
    },
    "6648": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6649": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6651": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6652": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6653": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6654": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "POP",
      "path": "20"
    },
    "6655": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "GAS",
      "path": "20"
    },
    "6656": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "CALL",
      "path": "20"
    },
    "6657": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6658": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6659": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6660": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A11"
    },
    "6663": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6664": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6665": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6667": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6668": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "6669": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6670": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6672": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6673": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6674": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "POP",
      "path": "20"
    },
    "6675": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "POP",
      "path": "20"
    },
    "6676": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "POP",
      "path": "20"
    },
    "6677": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10010,
        10121
      ],
      "op": "POP",
      "path": "20"
    },
    "6678": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "PUSH32",
      "path": "20",
      "statement": 58,
      "value": "0x58A2FE6E4623D780CD314A4C44E0353006D6BC7E941965A2C2A1A51B8D416382"
    },
    "6711": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10162,
        10171
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6712": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10173,
        10183
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6713": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10173,
        10195
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6715": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10173,
        10195
      ],
      "op": "ADD",
      "path": "20"
    },
    "6716": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10173,
        10195
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6717": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10197,
        10207
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6718": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10197,
        10221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6720": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10197,
        10221
      ],
      "op": "ADD",
      "path": "20"
    },
    "6721": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10197,
        10221
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6722": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10223,
        10233
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6723": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10223,
        10247
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "6725": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10223,
        10247
      ],
      "op": "ADD",
      "path": "20"
    },
    "6726": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10223,
        10247
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6727": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6729": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6730": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A76"
    },
    "6733": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "6734": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6735": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6736": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6737": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6738": {
      "op": "SWAP4"
    },
    "6739": {
      "op": "DUP5"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6747": {
      "op": "SHL"
    },
    "6748": {
      "op": "SUB"
    },
    "6749": {
      "op": "SWAP3"
    },
    "6750": {
      "op": "DUP4"
    },
    "6751": {
      "op": "AND"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6754": {
      "op": "DUP6"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "op": "MSTORE"
    },
    "6757": {
      "op": "SWAP2"
    },
    "6758": {
      "op": "AND"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6761": {
      "op": "DUP4"
    },
    "6762": {
      "op": "ADD"
    },
    "6763": {
      "op": "MSTORE"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6766": {
      "op": "DUP3"
    },
    "6767": {
      "op": "ADD"
    },
    "6768": {
      "op": "MSTORE"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6771": {
      "op": "ADD"
    },
    "6772": {
      "op": "SWAP1"
    },
    "6773": {
      "op": "JUMP"
    },
    "6774": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6775": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6777": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6778": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6779": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6780": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SUB",
      "path": "20"
    },
    "6781": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6782": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10140,
        10248
      ],
      "op": "LOG1",
      "path": "20"
    },
    "6783": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        9948,
        10259
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6784": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10298,
        10314
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6786": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10283
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6787": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10294
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "6789": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10294
      ],
      "op": "ADD",
      "path": "20"
    },
    "6790": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10294
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6791": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6793": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6794": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "GT",
      "path": "20"
    },
    "6795": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6796": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A97"
    },
    "6799": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6800": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A97"
    },
    "6803": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "6806": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        10273,
        10314
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6807": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6808": {
      "branch": 195,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10273,
        10314
      ],
      "op": "SUB",
      "path": "20"
    },
    "6809": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10269,
        10859
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B41"
    },
    "6812": {
      "branch": 195,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10269,
        10859
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6813": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10355,
        10379
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "6815": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10355,
        10379
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6816": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10355,
        10379
      ],
      "op": "ADD",
      "path": "20"
    },
    "6817": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10355,
        10379
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6818": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10397,
        10421
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6819": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10397,
        10421
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6826": {
      "op": "SHL"
    },
    "6827": {
      "op": "SUB"
    },
    "6828": {
      "branch": 196,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10397,
        10435
      ],
      "op": "AND",
      "path": "20"
    },
    "6829": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10393,
        10733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ABF"
    },
    "6832": {
      "branch": 196,
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10393,
        10733
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6833": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10514,
        10562
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 59,
      "value": "0x1ABA"
    },
    "6836": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10535,
        10545
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6837": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10547,
        10561
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6838": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10514,
        10534
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "6841": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        10514,
        10562
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6842": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10514,
        10562
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6843": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10393,
        10733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ADE"
    },
    "6846": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10393,
        10733
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6847": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10393,
        10733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6848": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10679,
        10701
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 60,
      "value": "0x20"
    },
    "6850": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10679,
        10701
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6851": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10679,
        10701
      ],
      "op": "ADD",
      "path": "20"
    },
    "6852": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10679,
        10701
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6853": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10621,
        10645
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6854": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10621,
        10645
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6855": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10718
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ADE"
    },
    "6858": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10718
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6865": {
      "op": "SHL"
    },
    "6866": {
      "op": "SUB"
    },
    "6867": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10663
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6868": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10663
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6869": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10663
      ],
      "op": "AND",
      "path": "20"
    },
    "6870": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10663
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6871": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10672,
        10676
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6872": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10672,
        10676
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6873": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10703,
        10717
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6874": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10663
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "6877": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        10614,
        10718
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6878": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10614,
        10718
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6879": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10783,
        10805
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 61,
      "value": "0x20"
    },
    "6881": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10783,
        10805
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6882": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10783,
        10805
      ],
      "op": "ADD",
      "path": "20"
    },
    "6883": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10783,
        10805
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6884": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10807,
        10831
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6885": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10807,
        10831
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6886": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6888": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6889": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x987F49FC5DF600848382B03D43A2DA53D161076CB739525CFA82137EF7878C21"
    },
    "6922": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6923": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B37"
    },
    "6926": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6927": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10772,
        10781
      ],
      "op": "DUP8",
      "path": "20"
    },
    "6928": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10772,
        10781
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6929": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10833,
        10847
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6930": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10833,
        10847
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6931": {
      "op": "SWAP4"
    },
    "6932": {
      "op": "DUP5"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "op": "SUB"
    },
    "6942": {
      "op": "SWAP3"
    },
    "6943": {
      "op": "DUP4"
    },
    "6944": {
      "op": "AND"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6947": {
      "op": "DUP6"
    },
    "6948": {
      "op": "ADD"
    },
    "6949": {
      "op": "MSTORE"
    },
    "6950": {
      "op": "SWAP2"
    },
    "6951": {
      "op": "AND"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6954": {
      "op": "DUP4"
    },
    "6955": {
      "op": "ADD"
    },
    "6956": {
      "op": "MSTORE"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6959": {
      "op": "DUP3"
    },
    "6960": {
      "op": "ADD"
    },
    "6961": {
      "op": "MSTORE"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6964": {
      "op": "ADD"
    },
    "6965": {
      "op": "SWAP1"
    },
    "6966": {
      "op": "JUMP"
    },
    "6967": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6968": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6970": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6971": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6972": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6973": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "SUB",
      "path": "20"
    },
    "6974": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6975": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10751,
        10848
      ],
      "op": "LOG1",
      "path": "20"
    },
    "6976": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10316,
        10859
      ],
      "op": "POP",
      "path": "20"
    },
    "6977": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        10269,
        10859
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6978": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11018,
        11041
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6980": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11068,
        11078
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6981": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11068,
        11097
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "6984": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11068,
        11097
      ],
      "op": "ADD",
      "path": "20"
    },
    "6985": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11068,
        11097
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6992": {
      "op": "SHL"
    },
    "6993": {
      "op": "SUB"
    },
    "6994": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "AND",
      "path": "20"
    },
    "6995": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "7004": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B65"
    },
    "7007": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7008": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7009": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "7012": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11044,
        11097
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7013": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11044,
        11097
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7014": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11018,
        11097
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7015": {
      "op": "POP"
    },
    "7016": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11107,
        11133
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7018": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11162,
        11167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "7021": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11159
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B78"
    },
    "7024": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11018,
        11097
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7025": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11155,
        11159
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2328"
    },
    "7028": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11159
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "7031": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11137,
        11159
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7032": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11159
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7033": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B82"
    },
    "7036": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11167
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7037": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11167
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7038": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4275"
    },
    "7041": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11137,
        11167
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7042": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11137,
        11167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7043": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11107,
        11167
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7044": {
      "op": "POP"
    },
    "7045": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11213,
        11249
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 62,
      "value": "0x1B8E"
    },
    "7048": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11107,
        11167
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7049": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11213,
        11228
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7050": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11213,
        11249
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4289"
    },
    "7053": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11213,
        11249
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7054": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11213,
        11249
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7055": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7057": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7058": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7059": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7060": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11197
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "7062": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7064": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7065": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3"
    },
    "7098": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7099": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7100": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7101": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7102": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11209
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7103": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BC9"
    },
    "7106": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7107": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7108": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7109": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "7112": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11177,
        11249
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7113": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7114": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7115": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7116": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11177,
        11249
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7117": {
      "op": "POP"
    },
    "7118": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11259,
        11311
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 63,
      "value": "0x1BD9"
    },
    "7121": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11259,
        11311
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7122": {
      "op": "POP"
    },
    "7123": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11280,
        11290
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7124": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11292,
        11310
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7125": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11259,
        11279
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x331D"
    },
    "7128": {
      "fn": "Raffle.cancelRaffle",
      "jump": "i",
      "offset": [
        11259,
        11311
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7129": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        11259,
        11311
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7130": {
      "op": "POP"
    },
    "7131": {
      "op": "POP"
    },
    "7132": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7134": {
      "offset": [
        2563,
        2585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7135": {
      "fn": "Raffle.cancelRaffle",
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7136": {
      "op": "POP"
    },
    "7137": {
      "op": "POP"
    },
    "7138": {
      "fn": "Raffle.cancelRaffle",
      "jump": "o",
      "offset": [
        9153,
        11318
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7139": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7140": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7142": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7149": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "7150": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7152": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "7153": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7154": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0D"
    },
    "7157": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7158": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7160": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7167": {
      "op": "SHL"
    },
    "7168": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7169": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7170": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7172": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "7173": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "7176": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7177": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "7180": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7181": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7182": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11695
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7184": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7185": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7186": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7187": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7189": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7191": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7192": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7193": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7194": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7196": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7197": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7198": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7199": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7200": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7201": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "7204": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7205": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7206": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7207": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7208": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7209": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7216": {
      "op": "SHL"
    },
    "7217": {
      "op": "SUB"
    },
    "7218": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7219": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7220": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7221": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7222": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7223": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "7225": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7226": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7227": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7228": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7229": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7230": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "7231": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7232": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7233": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "7234": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7235": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "7236": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7237": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "7239": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7240": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7241": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7242": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7243": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7244": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7245": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7246": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7247": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7248": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7249": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7250": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7251": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7252": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7253": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7254": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7255": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11698,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7256": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7258": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7259": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7260": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7265": {
      "op": "SHL"
    },
    "7266": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7267": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7268": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DIV",
      "path": "20"
    },
    "7269": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "7271": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7272": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7273": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7274": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "GT",
      "path": "20"
    },
    "7275": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7276": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C77"
    },
    "7279": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7280": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C77"
    },
    "7283": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "7286": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7287": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7288": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7290": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7291": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "GT",
      "path": "20"
    },
    "7292": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7293": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C88"
    },
    "7296": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7297": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C88"
    },
    "7300": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "7303": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7304": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7305": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7306": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7307": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7309": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7310": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "7312": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7313": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7314": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "7316": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7317": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7318": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7319": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "7322": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "EXP",
      "path": "20"
    },
    "7323": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7324": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DIV",
      "path": "20"
    },
    "7325": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "7327": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7328": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "7330": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7331": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "GT",
      "path": "20"
    },
    "7332": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7333": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CB0"
    },
    "7336": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7337": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CB0"
    },
    "7340": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "7343": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7344": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7345": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "7347": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7348": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "GT",
      "path": "20"
    },
    "7349": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7350": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CC1"
    },
    "7353": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7354": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CC1"
    },
    "7357": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "7360": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7361": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7362": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7363": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7364": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "7366": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7367": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7368": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7369": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7371": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7372": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7373": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7374": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7375": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7376": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7377": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7378": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7380": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7381": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7382": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7392": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7393": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7394": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7396": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7397": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7398": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7399": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "7401": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7402": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7403": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7404": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7406": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7407": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7408": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7409": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "7411": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7412": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7413": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7414": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "7416": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7417": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7418": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7419": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "7421": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7422": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7423": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7430": {
      "op": "SHL"
    },
    "7431": {
      "op": "SUB"
    },
    "7432": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7433": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7434": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7435": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "7437": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7438": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7439": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7444": {
      "op": "SHL"
    },
    "7445": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7446": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7447": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7448": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DIV",
      "path": "20"
    },
    "7449": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7450": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7451": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "7453": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7454": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7455": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7456": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "7458": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7459": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "7460": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7461": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7462": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7463": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7464": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7465": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "7467": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7468": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7469": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7470": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "DIV",
      "path": "20"
    },
    "7471": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7472": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7473": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "20"
    },
    "7474": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "7477": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7478": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7479": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "ADD",
      "path": "20"
    },
    "7480": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7481": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7482": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7483": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7484": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11734,
        11756
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 64
    },
    "7485": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11734,
        11756
      ],
      "op": "ADD",
      "path": "20"
    },
    "7486": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11734,
        11756
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7487": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7488": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11667,
        11716
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7489": {
      "op": "POP"
    },
    "7490": {
      "branch": 197,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11734,
        11770
      ],
      "op": "AND",
      "path": "20"
    },
    "7491": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D5E"
    },
    "7494": {
      "branch": 197,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7495": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7497": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7506": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7507": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7509": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "ADD",
      "path": "20"
    },
    "7510": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7513": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7514": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4145"
    },
    "7517": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11726,
        11801
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7518": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11726,
        11801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7519": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11819,
        11840
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 65,
      "value": "0x100"
    },
    "7522": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11819,
        11840
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7523": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11819,
        11840
      ],
      "op": "ADD",
      "path": "20"
    },
    "7524": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11819,
        11840
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7525": {
      "branch": 198,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11819,
        11854
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7526": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DD7"
    },
    "7529": {
      "branch": 198,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7530": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7532": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7541": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7544": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7546": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7547": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "ADD",
      "path": "20"
    },
    "7548": {
      "op": "MSTORE"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7553": {
      "op": "DUP3"
    },
    "7554": {
      "op": "ADD"
    },
    "7555": {
      "op": "MSTORE"
    },
    "7556": {
      "op": "PUSH32",
      "value": "0x57686974656C697374656420726166666C652E20557365206275795768697465"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7591": {
      "op": "DUP3"
    },
    "7592": {
      "op": "ADD"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "op": "PUSH32",
      "value": "0x6C6973746564526166666C655469636B6574282920696E737465616400000000"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7629": {
      "op": "DUP3"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "MSTORE"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7634": {
      "op": "ADD"
    },
    "7635": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7638": {
      "op": "JUMP"
    },
    "7639": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11811,
        11919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7640": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11955,
        11965
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 66
    },
    "7641": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11955,
        11978
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120"
    },
    "7644": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11955,
        11978
      ],
      "op": "ADD",
      "path": "20"
    },
    "7645": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11955,
        11978
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7652": {
      "op": "SHL"
    },
    "7653": {
      "op": "SUB"
    },
    "7654": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11937,
        11978
      ],
      "op": "AND",
      "path": "20"
    },
    "7655": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11937,
        11952
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "7656": {
      "branch": 199,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11937,
        11978
      ],
      "op": "LT",
      "path": "20"
    },
    "7657": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E04"
    },
    "7660": {
      "branch": 199,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7661": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7663": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7670": {
      "op": "SHL"
    },
    "7671": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7672": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7673": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7675": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "ADD",
      "path": "20"
    },
    "7676": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7679": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7680": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42A0"
    },
    "7683": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        11929,
        12012
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7684": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11929,
        12012
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7685": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12056,
        12079
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 67,
      "value": "0x0"
    },
    "7687": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12040
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7688": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12052
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7690": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12052
      ],
      "op": "ADD",
      "path": "20"
    },
    "7691": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12052
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7692": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7694": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7695": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "GT",
      "path": "20"
    },
    "7696": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7697": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E1C"
    },
    "7700": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7701": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E1C"
    },
    "7704": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "7707": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12030,
        12079
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7708": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7709": {
      "branch": 200,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12030,
        12079
      ],
      "op": "EQ",
      "path": "20"
    },
    "7710": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E39"
    },
    "7713": {
      "branch": 200,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7714": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7716": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7725": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7726": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7728": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "ADD",
      "path": "20"
    },
    "7729": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7732": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7733": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42A0"
    },
    "7736": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12022,
        12113
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7737": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12022,
        12113
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7738": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12156,
        12166
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 68
    },
    "7739": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12156,
        12182
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "7742": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12156,
        12182
      ],
      "op": "ADD",
      "path": "20"
    },
    "7743": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12156,
        12182
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7750": {
      "op": "SHL"
    },
    "7751": {
      "op": "SUB"
    },
    "7752": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12182
      ],
      "op": "AND",
      "path": "20"
    },
    "7753": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12141
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7754": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12153
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "7757": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12153
      ],
      "op": "ADD",
      "path": "20"
    },
    "7758": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12153
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7765": {
      "op": "SHL"
    },
    "7766": {
      "op": "SUB"
    },
    "7767": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12182
      ],
      "op": "AND",
      "path": "20"
    },
    "7768": {
      "branch": 201,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12131,
        12182
      ],
      "op": "LT",
      "path": "20"
    },
    "7769": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E97"
    },
    "7772": {
      "branch": 201,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7773": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7775": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7784": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7787": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7789": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7790": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "ADD",
      "path": "20"
    },
    "7791": {
      "op": "MSTORE"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7796": {
      "op": "DUP3"
    },
    "7797": {
      "op": "ADD"
    },
    "7798": {
      "op": "MSTORE"
    },
    "7799": {
      "op": "PUSH16",
      "value": "0x151A58DAD95D1CC81CDBDB19081BDD5D"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "7818": {
      "op": "SHL"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7821": {
      "op": "DUP3"
    },
    "7822": {
      "op": "ADD"
    },
    "7823": {
      "op": "MSTORE"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7826": {
      "op": "ADD"
    },
    "7827": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7830": {
      "op": "JUMP"
    },
    "7831": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12123,
        12203
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7832": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12271,
        12281
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 69
    },
    "7833": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12271,
        12293
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "7836": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12271,
        12293
      ],
      "op": "ADD",
      "path": "20"
    },
    "7837": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12271,
        12293
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7838": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12252
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7839": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12268
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "7842": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12268
      ],
      "op": "ADD",
      "path": "20"
    },
    "7843": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12268
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7844": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12293
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EAD"
    },
    "7847": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12293
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7848": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7849": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12293
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41E1"
    },
    "7852": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12242,
        12293
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7853": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12242,
        12293
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7860": {
      "op": "SHL"
    },
    "7861": {
      "op": "SUB"
    },
    "7862": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12221,
        12294
      ],
      "op": "AND",
      "path": "20"
    },
    "7863": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12221,
        12237
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7870": {
      "op": "SHL"
    },
    "7871": {
      "op": "SUB"
    },
    "7872": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12221,
        12294
      ],
      "op": "AND",
      "path": "20"
    },
    "7873": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12221,
        12294
      ],
      "op": "GT",
      "path": "20"
    },
    "7874": {
      "branch": 202,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12221,
        12294
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7875": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EDE"
    },
    "7878": {
      "branch": 202,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7879": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7881": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7890": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7891": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7893": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "ADD",
      "path": "20"
    },
    "7894": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "7897": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7898": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42D7"
    },
    "7901": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12213,
        12345
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7902": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12213,
        12345
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7903": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12389,
        12408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "7905": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12389,
        12408
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7906": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12389,
        12408
      ],
      "op": "ADD",
      "path": "20"
    },
    "7907": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12389,
        12408
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7914": {
      "op": "SHL"
    },
    "7915": {
      "op": "SUB"
    },
    "7916": {
      "branch": 203,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12389,
        12422
      ],
      "op": "AND",
      "path": "20"
    },
    "7917": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12385,
        12709
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F5C"
    },
    "7920": {
      "branch": 203,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12385,
        12709
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7921": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12479,
        12504
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 70,
      "value": "0xE0"
    },
    "7923": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12479,
        12504
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7924": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12479,
        12504
      ],
      "op": "ADD",
      "path": "20"
    },
    "7925": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12479,
        12504
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7926": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F08"
    },
    "7929": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7936": {
      "op": "SHL"
    },
    "7937": {
      "op": "SUB"
    },
    "7938": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7939": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "AND",
      "path": "20"
    },
    "7940": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "7943": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12460,
        12504
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7944": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12460,
        12504
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7945": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12446,
        12455
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7946": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12446,
        12505
      ],
      "op": "LT",
      "path": "20"
    },
    "7947": {
      "branch": 204,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12446,
        12505
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7948": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F57"
    },
    "7951": {
      "branch": 204,
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7952": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7954": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7961": {
      "op": "SHL"
    },
    "7962": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7963": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7966": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7968": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7969": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "ADD",
      "path": "20"
    },
    "7970": {
      "op": "DUP2"
    },
    "7971": {
      "op": "SWAP1"
    },
    "7972": {
      "op": "MSTORE"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7975": {
      "op": "DUP3"
    },
    "7976": {
      "op": "ADD"
    },
    "7977": {
      "op": "MSTORE"
    },
    "7978": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682045746865722073656E74206173207061796D656E74"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8013": {
      "op": "DUP3"
    },
    "8014": {
      "op": "ADD"
    },
    "8015": {
      "op": "MSTORE"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "8022": {
      "op": "JUMP"
    },
    "8023": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12437,
        12542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8024": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12385,
        12709
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F90"
    },
    "8027": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12385,
        12709
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8028": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12385,
        12709
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8029": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12698
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 71,
      "value": "0x1F90"
    },
    "8032": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12626,
        12636
      ],
      "op": "CALLER",
      "path": "20"
    },
    "8033": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12646,
        12650
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "8034": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12672,
        12682
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8035": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12672,
        12697
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "8037": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12672,
        12697
      ],
      "op": "ADD",
      "path": "20"
    },
    "8038": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12672,
        12697
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8039": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12669
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8046": {
      "op": "SHL"
    },
    "8047": {
      "op": "SUB"
    },
    "8048": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "AND",
      "path": "20"
    },
    "8049": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F7A"
    },
    "8052": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8053": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8054": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "8057": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12653,
        12697
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8058": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12653,
        12697
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8059": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12588,
        12607
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "8061": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12588,
        12607
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8062": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12588,
        12607
      ],
      "op": "ADD",
      "path": "20"
    },
    "8063": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12588,
        12607
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8070": {
      "op": "SHL"
    },
    "8071": {
      "op": "SUB"
    },
    "8072": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12625
      ],
      "op": "AND",
      "path": "20"
    },
    "8073": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12625
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8074": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12698
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8075": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12698
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8076": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12625
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "8079": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12581,
        12698
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8080": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12581,
        12698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8081": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12766,
        12775
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8083": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8084": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12781,
        12797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12777,
        12797
      ],
      "op": "AND",
      "path": "20"
    },
    "8094": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12777,
        12778
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8095": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12777,
        12797
      ],
      "op": "LT",
      "path": "20"
    },
    "8096": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8097": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x200D"
    },
    "8100": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8101": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 72,
      "value": "0x0"
    },
    "8103": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8104": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8105": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8106": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "8108": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8110": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8111": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8113": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8114": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8115": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12864
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "8118": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12864
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8119": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12864
      ],
      "op": "ADD",
      "path": "20"
    },
    "8120": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12864
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8121": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12872,
        12882
      ],
      "op": "CALLER",
      "path": "20"
    },
    "8122": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12872,
        12882
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8123": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12841
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8124": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12868
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FCF"
    },
    "8127": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12868
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8128": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12867,
        12868
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8129": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12867,
        12868
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8136": {
      "op": "SHL"
    },
    "8137": {
      "op": "SUB"
    },
    "8138": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12868
      ],
      "op": "AND",
      "path": "20"
    },
    "8139": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12868
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "8142": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12842,
        12868
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8143": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12842,
        12868
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8144": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8145": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8146": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8148": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8149": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "ADD",
      "path": "20"
    },
    "8150": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8151": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8152": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8153": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8154": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8156": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "ADD",
      "path": "20"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8159": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12869
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8160": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8161": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8168": {
      "op": "SHL"
    },
    "8169": {
      "op": "SUB"
    },
    "8170": {
      "op": "NOT"
    },
    "8171": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "AND",
      "path": "20"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8178": {
      "op": "SHL"
    },
    "8179": {
      "op": "SUB"
    },
    "8180": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8181": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8182": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8183": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "AND",
      "path": "20"
    },
    "8184": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8185": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8186": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8187": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "OR",
      "path": "20"
    },
    "8188": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8189": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12817,
        12882
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8190": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 73,
      "value": "0x2006"
    },
    "8193": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8194": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "8197": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12799,
        12802
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8198": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8199": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8200": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12799,
        12802
      ],
      "op": "POP",
      "path": "20"
    },
    "8201": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F93"
    },
    "8204": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8205": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12761,
        12893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8206": {
      "op": "POP"
    },
    "8207": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 74,
      "value": "0x0"
    },
    "8209": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8210": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8211": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8212": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12909
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8214": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8216": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8217": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8219": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8220": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8221": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12932
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "8223": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12932
      ],
      "op": "ADD",
      "path": "20"
    },
    "8224": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8225": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8226": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12936,
        12952
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8227": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12936,
        12952
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8228": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8229": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2038"
    },
    "8232": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8233": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12936,
        12952
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8234": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12936,
        12952
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8241": {
      "op": "SHL"
    },
    "8242": {
      "op": "SUB"
    },
    "8243": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "AND",
      "path": "20"
    },
    "8244": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4325"
    },
    "8247": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "i",
      "offset": [
        12902,
        12952
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8248": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8249": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8250": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "POP",
      "path": "20"
    },
    "8251": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "8254": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "EXP",
      "path": "20"
    },
    "8255": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8256": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8257": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8264": {
      "op": "SHL"
    },
    "8265": {
      "op": "SUB"
    },
    "8266": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "MUL",
      "path": "20"
    },
    "8267": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "NOT",
      "path": "20"
    },
    "8268": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "AND",
      "path": "20"
    },
    "8269": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8270": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8277": {
      "op": "SHL"
    },
    "8278": {
      "op": "SUB"
    },
    "8279": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "AND",
      "path": "20"
    },
    "8280": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "MUL",
      "path": "20"
    },
    "8281": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "OR",
      "path": "20"
    },
    "8282": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8283": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8284": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        12902,
        12952
      ],
      "op": "POP",
      "path": "20"
    },
    "8285": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11657,
        12961
      ],
      "op": "POP",
      "path": "20"
    },
    "8286": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "POP",
      "path": "20"
    },
    "8287": {
      "fn": "Raffle.buyRaffleTicket",
      "offset": [
        11556,
        12961
      ],
      "op": "POP",
      "path": "20"
    },
    "8288": {
      "fn": "Raffle.buyRaffleTicket",
      "jump": "o",
      "offset": [
        11556,
        12961
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8290": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8292": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8299": {
      "op": "SHL"
    },
    "8300": {
      "op": "SUB"
    },
    "8301": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "8302": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8303": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "8304": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208B"
    },
    "8307": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8308": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8310": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8317": {
      "op": "SHL"
    },
    "8318": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8319": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8320": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8322": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "8323": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "8326": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8327": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "8330": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8331": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 75,
      "value": "0x0"
    },
    "8334": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8345": {
      "op": "SHL"
    },
    "8346": {
      "op": "SUB"
    },
    "8347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "8350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8386": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8387": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x0"
    },
    "8390": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8398": {
      "op": "SHL"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "op": "NOT"
    },
    "8401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "8402": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8403": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8404": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8405": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        22927,
        23212
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8406": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8408": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8415": {
      "op": "SHL"
    },
    "8416": {
      "op": "SUB"
    },
    "8417": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "8418": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8419": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "8420": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20FF"
    },
    "8423": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8424": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8426": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8433": {
      "op": "SHL"
    },
    "8434": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8435": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8436": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8438": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "8439": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "8442": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8443": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "8446": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8447": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8454": {
      "op": "SHL"
    },
    "8455": {
      "op": "SUB"
    },
    "8456": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 77
    },
    "8457": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "AND",
      "path": "20"
    },
    "8458": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8460": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8461": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8462": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8463": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23041
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "8465": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8467": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8468": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8470": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8471": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8472": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8473": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "8475": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23020,
        23061
      ],
      "op": "AND",
      "path": "20"
    },
    "8476": {
      "branch": 205,
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23019,
        23061
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8477": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2168"
    },
    "8480": {
      "branch": 205,
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8481": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8483": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8492": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8495": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8497": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8498": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "ADD",
      "path": "20"
    },
    "8499": {
      "op": "MSTORE"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8504": {
      "op": "DUP3"
    },
    "8505": {
      "op": "ADD"
    },
    "8506": {
      "op": "MSTORE"
    },
    "8507": {
      "op": "PUSH32",
      "value": "0x546F6B656E20697320616C72656164792077686974656C697374656400000000"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8542": {
      "op": "DUP3"
    },
    "8543": {
      "op": "ADD"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8547": {
      "op": "ADD"
    },
    "8548": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "8551": {
      "op": "JUMP"
    },
    "8552": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23011,
        23094
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8559": {
      "op": "SHL"
    },
    "8560": {
      "op": "SUB"
    },
    "8561": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 78
    },
    "8562": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "AND",
      "path": "20"
    },
    "8563": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8565": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8566": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8567": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8568": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23125
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "8570": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8572": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8573": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8574": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8575": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8577": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8578": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8579": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8580": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23145
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8581": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8582": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8585": {
      "op": "NOT"
    },
    "8586": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "AND",
      "path": "20"
    },
    "8587": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23148,
        23152
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "8589": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "OR",
      "path": "20"
    },
    "8590": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8591": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23104,
        23152
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8592": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23167,
        23205
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 79
    },
    "8593": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23167,
        23205
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8594": {
      "op": "SWAP2"
    },
    "8595": {
      "op": "DUP3"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23167,
        23205
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x5C6CF68A9D7E416D0EEE740661627DD794257920F1C63DDAE6C6AF81D02D12EA"
    },
    "8630": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23167,
        23205
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8631": {
      "op": "ADD"
    },
    "8632": {
      "fn": "Raffle.whitelistCurrency",
      "offset": [
        23167,
        23205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15B6"
    },
    "8635": {
      "op": "JUMP"
    },
    "8636": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8637": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9677
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 80
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "op": "SUB"
    },
    "8646": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9681,
        9695
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "8679": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9695
      ],
      "op": "AND",
      "path": "17"
    },
    "8680": {
      "branch": 236,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9695
      ],
      "op": "EQ",
      "path": "17"
    },
    "8681": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6F6"
    },
    "8684": {
      "branch": 236,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8685": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8687": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8694": {
      "op": "SHL"
    },
    "8695": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8696": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8699": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8701": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8702": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "ADD",
      "path": "17"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8708": {
      "op": "DUP3"
    },
    "8709": {
      "op": "ADD"
    },
    "8710": {
      "op": "MSTORE"
    },
    "8711": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8746": {
      "op": "DUP3"
    },
    "8747": {
      "op": "ADD"
    },
    "8748": {
      "op": "MSTORE"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8751": {
      "op": "ADD"
    },
    "8752": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x726"
    },
    "8755": {
      "op": "JUMP"
    },
    "8756": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8757": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25169,
        25186
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22A0"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8762": {
      "op": "DUP1"
    },
    "8763": {
      "op": "MLOAD"
    },
    "8764": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "8767": {
      "op": "DUP2"
    },
    "8768": {
      "op": "ADD"
    },
    "8769": {
      "op": "DUP3"
    },
    "8770": {
      "op": "MSTORE"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8773": {
      "op": "DUP1"
    },
    "8774": {
      "op": "DUP3"
    },
    "8775": {
      "op": "MSTORE"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8778": {
      "op": "DUP3"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "op": "DUP2"
    },
    "8781": {
      "op": "SWAP1"
    },
    "8782": {
      "op": "MSTORE"
    },
    "8783": {
      "op": "SWAP2"
    },
    "8784": {
      "op": "DUP2"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "DUP3"
    },
    "8787": {
      "op": "SWAP1"
    },
    "8788": {
      "op": "MSTORE"
    },
    "8789": {
      "op": "SWAP1"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8792": {
      "op": "DUP3"
    },
    "8793": {
      "op": "ADD"
    },
    "8794": {
      "op": "SWAP1"
    },
    "8795": {
      "op": "DUP2"
    },
    "8796": {
      "op": "MSTORE"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8799": {
      "op": "ADD"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8802": {
      "op": "DUP2"
    },
    "8803": {
      "op": "MSTORE"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8808": {
      "op": "DUP3"
    },
    "8809": {
      "op": "ADD"
    },
    "8810": {
      "op": "DUP2"
    },
    "8811": {
      "op": "SWAP1"
    },
    "8812": {
      "op": "MSTORE"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8815": {
      "op": "DUP3"
    },
    "8816": {
      "op": "ADD"
    },
    "8817": {
      "op": "DUP2"
    },
    "8818": {
      "op": "SWAP1"
    },
    "8819": {
      "op": "MSTORE"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8822": {
      "op": "DUP3"
    },
    "8823": {
      "op": "ADD"
    },
    "8824": {
      "op": "DUP2"
    },
    "8825": {
      "op": "SWAP1"
    },
    "8826": {
      "op": "MSTORE"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8829": {
      "op": "DUP3"
    },
    "8830": {
      "op": "ADD"
    },
    "8831": {
      "op": "DUP2"
    },
    "8832": {
      "op": "SWAP1"
    },
    "8833": {
      "op": "MSTORE"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8836": {
      "op": "DUP3"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "SWAP1"
    },
    "8840": {
      "op": "MSTORE"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8843": {
      "op": "DUP3"
    },
    "8844": {
      "op": "ADD"
    },
    "8845": {
      "op": "DUP2"
    },
    "8846": {
      "op": "SWAP1"
    },
    "8847": {
      "op": "MSTORE"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8850": {
      "op": "DUP3"
    },
    "8851": {
      "op": "ADD"
    },
    "8852": {
      "op": "DUP2"
    },
    "8853": {
      "op": "SWAP1"
    },
    "8854": {
      "op": "MSTORE"
    },
    "8855": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8858": {
      "op": "SWAP1"
    },
    "8859": {
      "op": "SWAP2"
    },
    "8860": {
      "op": "ADD"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "SWAP1"
    },
    "8863": {
      "op": "JUMP"
    },
    "8864": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25169,
        25186
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8865": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25219,
        25232
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 81,
      "value": "0x7"
    },
    "8867": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25219,
        25232
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8868": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25206,
        25215
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8869": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25206,
        25232
      ],
      "op": "GT",
      "path": "20"
    },
    "8870": {
      "branch": 206,
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25206,
        25232
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8871": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F2"
    },
    "8874": {
      "branch": 206,
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8875": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8877": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8884": {
      "op": "SHL"
    },
    "8885": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8886": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8889": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8891": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8892": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "ADD",
      "path": "20"
    },
    "8893": {
      "op": "MSTORE"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8898": {
      "op": "DUP3"
    },
    "8899": {
      "op": "ADD"
    },
    "8900": {
      "op": "MSTORE"
    },
    "8901": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520494420646F6573206E6F7420657869737400000000"
    },
    "8934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8936": {
      "op": "DUP3"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "op": "MSTORE"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8941": {
      "op": "ADD"
    },
    "8942": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "8945": {
      "op": "JUMP"
    },
    "8946": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25198,
        25265
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8947": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 82,
      "value": "0x0"
    },
    "8949": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8950": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8951": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8952": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8954": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8956": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8957": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8958": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8959": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8961": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8962": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8963": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8964": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8965": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8966": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8967": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "8970": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8971": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "8972": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8973": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8974": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8975": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8982": {
      "op": "SHL"
    },
    "8983": {
      "op": "SUB"
    },
    "8984": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8985": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8986": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "8987": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8988": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8989": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "8991": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8992": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "8993": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8994": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8995": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "8996": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8997": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8998": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "8999": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9000": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9001": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9002": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9003": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "9005": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9006": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9007": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9008": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9009": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9010": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9011": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "9012": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9013": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9014": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "9015": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9016": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "9017": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9018": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25282,
        25300
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9019": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "9021": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9022": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9023": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9028": {
      "op": "SHL"
    },
    "9029": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9030": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DIV",
      "path": "20"
    },
    "9031": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "9033": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9034": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9035": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9036": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "GT",
      "path": "20"
    },
    "9037": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9038": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2359"
    },
    "9041": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9042": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2359"
    },
    "9045": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "9048": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9049": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9050": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9052": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9053": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "GT",
      "path": "20"
    },
    "9054": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9055": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x236A"
    },
    "9058": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9059": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x236A"
    },
    "9062": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "9065": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9066": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9067": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9068": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9069": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9071": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9072": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "9074": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9075": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9076": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "9078": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9079": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9080": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9081": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "9084": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "EXP",
      "path": "20"
    },
    "9085": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9086": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DIV",
      "path": "20"
    },
    "9087": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "9089": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9090": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9092": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9093": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "GT",
      "path": "20"
    },
    "9094": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9095": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2392"
    },
    "9098": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9099": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2392"
    },
    "9102": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "9105": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9106": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9107": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9109": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9110": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "GT",
      "path": "20"
    },
    "9111": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9112": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23A3"
    },
    "9115": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9116": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23A3"
    },
    "9119": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "9122": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "i",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9123": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9124": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9125": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9126": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "9128": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9129": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9130": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9131": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9133": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9134": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9135": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9136": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9138": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9139": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9140": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9147": {
      "op": "SHL"
    },
    "9148": {
      "op": "SUB"
    },
    "9149": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9150": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9152": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9153": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9154": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9155": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "9157": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9158": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9159": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9160": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "9162": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9163": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9164": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9165": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "9167": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9168": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9169": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9170": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "9172": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9173": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9174": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9175": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "9177": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9178": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9179": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "SUB"
    },
    "9188": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9189": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9190": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9191": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "9193": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9194": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9195": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9200": {
      "op": "SHL"
    },
    "9201": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9202": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9203": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9204": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DIV",
      "path": "20"
    },
    "9205": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9206": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9207": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "9209": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9210": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9211": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9212": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "9214": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9215": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9216": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9217": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9218": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9219": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9220": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9221": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "9223": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9224": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9225": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9226": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "DIV",
      "path": "20"
    },
    "9227": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9228": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9229": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "AND",
      "path": "20"
    },
    "9230": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "9233": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9234": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9235": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "ADD",
      "path": "20"
    },
    "9236": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9237": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25275,
        25301
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9238": {
      "fn": "Raffle.getRaffleDetails",
      "offset": [
        25102,
        25308
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "op": "POP"
    },
    "9241": {
      "fn": "Raffle.getRaffleDetails",
      "jump": "o",
      "offset": [
        25102,
        25308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9242": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9243": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25621,
        25628
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9245": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9246": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9247": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9248": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25675
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "9250": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9252": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9253": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9254": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9255": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9257": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9258": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9259": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25686
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9260": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9261": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9262": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9263": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9264": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9265": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9266": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9267": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9268": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9275": {
      "op": "SHL"
    },
    "9276": {
      "op": "SUB"
    },
    "9277": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "AND",
      "path": "20"
    },
    "9278": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25662,
        25697
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9279": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 83,
      "value": "0x2482"
    },
    "9282": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9283": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9285": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9292": {
      "op": "SHL"
    },
    "9293": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9294": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9297": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9299": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9300": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "ADD",
      "path": "20"
    },
    "9301": {
      "op": "MSTORE"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9306": {
      "op": "DUP3"
    },
    "9307": {
      "op": "ADD"
    },
    "9308": {
      "op": "MSTORE"
    },
    "9309": {
      "op": "PUSH21",
      "value": "0x151A58DAD95D08191BD95CC81B9BDD08195E1A5CDD"
    },
    "9331": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "9333": {
      "op": "SHL"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9336": {
      "op": "DUP3"
    },
    "9337": {
      "op": "ADD"
    },
    "9338": {
      "op": "MSTORE"
    },
    "9339": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9341": {
      "op": "ADD"
    },
    "9342": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9345": {
      "op": "JUMP"
    },
    "9346": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25707,
        25766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9347": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25783,
        25794
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 84
    },
    "9348": {
      "op": "POP"
    },
    "9349": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9350": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9351": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9352": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "POP",
      "path": "20"
    },
    "9353": {
      "fn": "Raffle.getRaffleTicketOwner",
      "offset": [
        25531,
        25801
      ],
      "op": "POP",
      "path": "20"
    },
    "9354": {
      "fn": "Raffle.getRaffleTicketOwner",
      "jump": "o",
      "offset": [
        25531,
        25801
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9355": {
      "fn": "Raffle.togglePause",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9356": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9358": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9365": {
      "op": "SHL"
    },
    "9366": {
      "op": "SUB"
    },
    "9367": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "9368": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9369": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "9370": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B5"
    },
    "9373": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9374": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9376": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9383": {
      "op": "SHL"
    },
    "9384": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9385": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9386": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9388": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "9389": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "9392": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9393": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "9396": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9397": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9398": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9400": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9405": {
      "op": "SHL"
    },
    "9406": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9407": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "9408": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9410": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "9411": {
      "fn": "Raffle.togglePause",
      "offset": [
        22765,
        22813
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24D0"
    },
    "9414": {
      "fn": "Raffle.togglePause",
      "offset": [
        22765,
        22813
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9415": {
      "fn": "Raffle.togglePause",
      "offset": [
        22780,
        22788
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 85,
      "value": "0x24CE"
    },
    "9418": {
      "fn": "Raffle.togglePause",
      "offset": [
        22780,
        22786
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3676"
    },
    "9421": {
      "fn": "Raffle.togglePause",
      "jump": "i",
      "offset": [
        22780,
        22788
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9422": {
      "fn": "Raffle.togglePause",
      "offset": [
        22780,
        22788
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9423": {
      "fn": "Raffle.togglePause",
      "jump": "o",
      "offset": [
        22713,
        22820
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9424": {
      "fn": "Raffle.togglePause",
      "offset": [
        22765,
        22813
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9425": {
      "fn": "Raffle.togglePause",
      "offset": [
        22803,
        22813
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 86,
      "value": "0x24CE"
    },
    "9428": {
      "fn": "Raffle.togglePause",
      "offset": [
        22803,
        22811
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36F8"
    },
    "9431": {
      "fn": "Raffle.togglePause",
      "jump": "i",
      "offset": [
        22803,
        22813
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9432": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9433": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9435": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9440": {
      "op": "SHL"
    },
    "9441": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9442": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "9443": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9445": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "9446": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9447": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2502"
    },
    "9450": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9451": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9453": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9454": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9460": {
      "op": "SHL"
    },
    "9461": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9462": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9463": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9465": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "9466": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "9469": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9470": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "9473": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9474": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9481": {
      "op": "SHL"
    },
    "9482": {
      "op": "SUB"
    },
    "9483": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "DUP9",
      "path": "20",
      "statement": 87
    },
    "9484": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "AND",
      "path": "20"
    },
    "9485": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9487": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9488": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9489": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9490": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7394
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "9492": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9494": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9495": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9497": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9498": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9499": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9500": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "9502": {
      "branch": 207,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7373,
        7409
      ],
      "op": "AND",
      "path": "20"
    },
    "9503": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x257C"
    },
    "9506": {
      "branch": 207,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9507": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9509": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9516": {
      "op": "SHL"
    },
    "9517": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9518": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9521": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9523": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9524": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "ADD",
      "path": "20"
    },
    "9525": {
      "op": "MSTORE"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9530": {
      "op": "DUP3"
    },
    "9531": {
      "op": "ADD"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F7420726166666C6520746869732074797065206F662074"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9568": {
      "op": "DUP3"
    },
    "9569": {
      "op": "ADD"
    },
    "9570": {
      "op": "MSTORE"
    },
    "9571": {
      "op": "PUSH9",
      "value": "0x1BDAD95B9CC81E595D"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "9583": {
      "op": "SHL"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9586": {
      "op": "DUP3"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "MSTORE"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9591": {
      "op": "ADD"
    },
    "9592": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9595": {
      "op": "JUMP"
    },
    "9596": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7365,
        7455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9603": {
      "op": "SHL"
    },
    "9604": {
      "op": "SUB"
    },
    "9605": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 88
    },
    "9606": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "AND",
      "path": "20"
    },
    "9607": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9609": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9610": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9611": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9612": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7494
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "9614": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9616": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9617": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9619": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9620": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9621": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9622": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "9624": {
      "branch": 208,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7473,
        7505
      ],
      "op": "AND",
      "path": "20"
    },
    "9625": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E4"
    },
    "9628": {
      "branch": 208,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9629": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9631": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9638": {
      "op": "SHL"
    },
    "9639": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9640": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9643": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9645": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9646": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "ADD",
      "path": "20"
    },
    "9647": {
      "op": "DUP2"
    },
    "9648": {
      "op": "SWAP1"
    },
    "9649": {
      "op": "MSTORE"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9652": {
      "op": "DUP3"
    },
    "9653": {
      "op": "ADD"
    },
    "9654": {
      "op": "MSTORE"
    },
    "9655": {
      "op": "PUSH32",
      "value": "0x546869732063757272656E6379206973206E6F742077686974656C6973746564"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9690": {
      "op": "DUP3"
    },
    "9691": {
      "op": "ADD"
    },
    "9692": {
      "op": "MSTORE"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9695": {
      "op": "ADD"
    },
    "9696": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9699": {
      "op": "JUMP"
    },
    "9700": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7465,
        7542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9701": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7579,
        7580
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 89,
      "value": "0x1"
    },
    "9703": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7560,
        7576
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9710": {
      "op": "SHL"
    },
    "9711": {
      "op": "SUB"
    },
    "9712": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7560,
        7580
      ],
      "op": "AND",
      "path": "20"
    },
    "9713": {
      "branch": 209,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7560,
        7580
      ],
      "op": "GT",
      "path": "20"
    },
    "9714": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x260D"
    },
    "9717": {
      "branch": 209,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9718": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9720": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9727": {
      "op": "SHL"
    },
    "9728": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9729": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9730": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9732": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "ADD",
      "path": "20"
    },
    "9733": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9736": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9737": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4350"
    },
    "9740": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        7552,
        7621
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9741": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7552,
        7621
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9742": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7661,
        7665
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 90,
      "value": "0xE10"
    },
    "9745": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7639,
        7657
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9752": {
      "op": "SHL"
    },
    "9753": {
      "op": "SUB"
    },
    "9754": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7639,
        7665
      ],
      "op": "AND",
      "path": "20"
    },
    "9755": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7639,
        7665
      ],
      "op": "LT",
      "path": "20"
    },
    "9756": {
      "branch": 210,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7639,
        7665
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9757": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2668"
    },
    "9760": {
      "branch": 210,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9761": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9763": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9770": {
      "op": "SHL"
    },
    "9771": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9772": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9775": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9777": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9778": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "ADD",
      "path": "20"
    },
    "9779": {
      "op": "MSTORE"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9784": {
      "op": "DUP3"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "MSTORE"
    },
    "9787": {
      "op": "PUSH32",
      "value": "0x4D696E696D756D206475726174696F6E206973206F6E6520686F757200000000"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9822": {
      "op": "DUP3"
    },
    "9823": {
      "op": "ADD"
    },
    "9824": {
      "op": "MSTORE"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9827": {
      "op": "ADD"
    },
    "9828": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9831": {
      "op": "JUMP"
    },
    "9832": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7631,
        7698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9839": {
      "op": "SHL"
    },
    "9840": {
      "op": "SUB"
    },
    "9841": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7717,
        7744
      ],
      "op": "DUP9",
      "path": "20"
    },
    "9842": {
      "branch": 211,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7717,
        7744
      ],
      "op": "AND",
      "path": "20"
    },
    "9843": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7713,
        8270
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26EE"
    },
    "9846": {
      "branch": 211,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7713,
        8270
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9847": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7792,
        7835
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 91,
      "value": "0x2691"
    },
    "9850": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9865": {
      "op": "SHL"
    },
    "9866": {
      "op": "SUB"
    },
    "9867": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7792,
        7835
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9868": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7792,
        7835
      ],
      "op": "AND",
      "path": "20"
    },
    "9869": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7792,
        7835
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "9872": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        7792,
        7835
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9873": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7792,
        7835
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9874": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7781,
        7836
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x269B"
    },
    "9877": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7781,
        7836
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9878": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7781,
        7788
      ],
      "op": "DUP9",
      "path": "20"
    },
    "9879": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7781,
        7836
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "9882": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        7781,
        7836
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9883": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7781,
        7836
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9884": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7768,
        7777
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "9885": {
      "branch": 212,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7768,
        7836
      ],
      "op": "EQ",
      "path": "20"
    },
    "9886": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26E9"
    },
    "9889": {
      "branch": 212,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9890": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9892": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9899": {
      "op": "SHL"
    },
    "9900": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9901": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9904": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9906": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9907": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "ADD",
      "path": "20"
    },
    "9908": {
      "op": "MSTORE"
    },
    "9909": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9913": {
      "op": "DUP3"
    },
    "9914": {
      "op": "ADD"
    },
    "9915": {
      "op": "MSTORE"
    },
    "9916": {
      "op": "PUSH32",
      "value": "0x5468652045746865722073656E74206973206E6F7420636F7272656374000000"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9951": {
      "op": "DUP3"
    },
    "9952": {
      "op": "ADD"
    },
    "9953": {
      "op": "MSTORE"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9956": {
      "op": "ADD"
    },
    "9957": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "9960": {
      "op": "JUMP"
    },
    "9961": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7760,
        7870
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9962": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7713,
        8270
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2768"
    },
    "9965": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7713,
        8270
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9966": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7713,
        8270
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9967": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8050,
        8093
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 92,
      "value": "0x2709"
    },
    "9970": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9985": {
      "op": "SHL"
    },
    "9986": {
      "op": "SUB"
    },
    "9987": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8050,
        8093
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9988": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8050,
        8093
      ],
      "op": "AND",
      "path": "20"
    },
    "9989": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8050,
        8093
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "9992": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        8050,
        8093
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9993": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8050,
        8093
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9994": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8036,
        8045
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "9995": {
      "branch": 213,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8036,
        8094
      ],
      "op": "EQ",
      "path": "20"
    },
    "9996": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2753"
    },
    "9999": {
      "branch": 213,
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10000": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10002": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10009": {
      "op": "SHL"
    },
    "10010": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10011": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10014": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10016": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10017": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "ADD",
      "path": "20"
    },
    "10018": {
      "op": "MSTORE"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10023": {
      "op": "DUP3"
    },
    "10024": {
      "op": "ADD"
    },
    "10025": {
      "op": "MSTORE"
    },
    "10026": {
      "op": "PUSH25",
      "value": "0x125B98DBDC9C9958DD0818DBDB1B185D195C985B081CD95B9D"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "10054": {
      "op": "SHL"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10057": {
      "op": "DUP3"
    },
    "10058": {
      "op": "ADD"
    },
    "10059": {
      "op": "MSTORE"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10062": {
      "op": "ADD"
    },
    "10063": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "10066": {
      "op": "JUMP"
    },
    "10067": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8028,
        8124
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10068": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8185,
        8259
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 93,
      "value": "0x2768"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10077": {
      "op": "SHL"
    },
    "10078": {
      "op": "SUB"
    },
    "10079": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8185,
        8223
      ],
      "op": "DUP10",
      "path": "20"
    },
    "10080": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8185,
        8223
      ],
      "op": "AND",
      "path": "20"
    },
    "10081": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8224,
        8234
      ],
      "op": "CALLER",
      "path": "20"
    },
    "10082": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8244,
        8248
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "10083": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8251,
        8258
      ],
      "op": "DUP11",
      "path": "20"
    },
    "10084": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8185,
        8223
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "10087": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        8185,
        8259
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10088": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8185,
        8259
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10089": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8333
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "10091": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10092": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10093": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8280,
        8309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10095": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8280,
        8309
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10096": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8319
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10098": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8319
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10099": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8280,
        8309
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10100": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8280,
        8309
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10101": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8280,
        8309
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10102": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x277E"
    },
    "10105": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10106": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "10109": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        8320,
        8335
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10110": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10111": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10112": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10113": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8320,
        8335
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10114": {
      "op": "POP"
    },
    "10115": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10116": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10117": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10119": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10120": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "ADD",
      "path": "20"
    },
    "10121": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10122": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10123": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10124": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10125": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10127": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "ADD",
      "path": "20"
    },
    "10128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10130": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10131": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 94
    },
    "10132": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10139": {
      "op": "SHL"
    },
    "10140": {
      "op": "SUB"
    },
    "10141": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "DUP12",
      "path": "20"
    },
    "10142": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10143": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "AND",
      "path": "20"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10150": {
      "op": "SHL"
    },
    "10151": {
      "op": "SUB"
    },
    "10152": {
      "op": "NOT"
    },
    "10153": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10154": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10155": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "AND",
      "path": "20"
    },
    "10156": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "OR",
      "path": "20"
    },
    "10157": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10158": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8346,
        8386
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10161": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8418
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 95
    },
    "10162": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8418
      ],
      "op": "ADD",
      "path": "20"
    },
    "10163": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10164": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10165": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10166": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "AND",
      "path": "20"
    },
    "10167": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8421,
        8431
      ],
      "op": "CALLER",
      "path": "20"
    },
    "10168": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "OR",
      "path": "20"
    },
    "10169": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10170": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8396,
        8431
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10171": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8441,
        8463
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 96,
      "value": "0x2"
    },
    "10173": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8441,
        8463
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10174": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8441,
        8463
      ],
      "op": "ADD",
      "path": "20"
    },
    "10175": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8441,
        8489
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10176": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8441,
        8489
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10177": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10182": {
      "op": "SHL"
    },
    "10183": {
      "op": "NOT"
    },
    "10184": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8499,
        8539
      ],
      "op": "AND",
      "path": "20",
      "statement": 97
    },
    "10185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10189": {
      "op": "SHL"
    },
    "10190": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8499,
        8539
      ],
      "op": "OR",
      "path": "20"
    },
    "10191": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8499,
        8539
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10192": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8499,
        8539
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10193": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8573
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 98,
      "value": "0x3"
    },
    "10195": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8573
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10196": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8573
      ],
      "op": "ADD",
      "path": "20"
    },
    "10197": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8583
      ],
      "op": "DUP12",
      "path": "20"
    },
    "10198": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8583
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10199": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8549,
        8583
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10200": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8612
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 99,
      "value": "0x4"
    },
    "10202": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8612
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10203": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8612
      ],
      "op": "ADD",
      "path": "20"
    },
    "10204": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10205": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10206": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10207": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10208": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "AND",
      "path": "20"
    },
    "10209": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10210": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "DUP11",
      "path": "20"
    },
    "10211": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "AND",
      "path": "20"
    },
    "10212": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "OR",
      "path": "20"
    },
    "10213": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10214": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8593,
        8624
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10215": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8659
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 100,
      "value": "0x5"
    },
    "10217": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8659
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10218": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8659
      ],
      "op": "ADD",
      "path": "20"
    },
    "10219": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8677
      ],
      "op": "DUP8",
      "path": "20"
    },
    "10220": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10221": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8634,
        8677
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10222": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8708
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 101,
      "value": "0x6"
    },
    "10224": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8708
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10225": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8708
      ],
      "op": "ADD",
      "path": "20"
    },
    "10226": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8722
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10227": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8722
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10228": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8687,
        8722
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10229": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8312,
        8336
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10230": {
      "op": "POP"
    },
    "10231": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8758,
        8803
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 102,
      "value": "0x2800"
    },
    "10234": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8785,
        8803
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10235": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8766,
        8781
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "10236": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8758,
        8803
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4325"
    },
    "10239": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "i",
      "offset": [
        8758,
        8803
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10240": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8758,
        8803
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10247": {
      "op": "SHL"
    },
    "10248": {
      "op": "SUB"
    },
    "10249": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8803
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10250": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8803
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10251": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8803
      ],
      "op": "AND",
      "path": "20"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10256": {
      "op": "SHL"
    },
    "10257": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "DUP8",
      "path": "20",
      "statement": 103
    },
    "10258": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10259": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "AND",
      "path": "20"
    },
    "10260": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10261": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "MUL",
      "path": "20"
    },
    "10262": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10263": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10264": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10265": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "OR",
      "path": "20"
    },
    "10266": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "10268": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8755
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10269": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8755
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10270": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8732,
        8755
      ],
      "op": "ADD",
      "path": "20"
    },
    "10271": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10272": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10273": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10274": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8813,
        8858
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10275": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8898
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 104,
      "value": "0x8"
    },
    "10277": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8898
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10278": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8898
      ],
      "op": "ADD",
      "path": "20"
    },
    "10279": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10280": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10281": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10282": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "AND",
      "path": "20"
    },
    "10283": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10284": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10285": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "AND",
      "path": "20"
    },
    "10286": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10287": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10288": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "MUL",
      "path": "20"
    },
    "10289": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10290": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10291": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10292": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "OR",
      "path": "20"
    },
    "10293": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10294": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8869,
        8920
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10295": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8958,
        8971
      ],
      "op": "SLOAD",
      "path": "20",
      "statement": 105
    },
    "10296": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10298": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10299": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10300": {
      "op": "SWAP2"
    },
    "10301": {
      "op": "DUP3"
    },
    "10302": {
      "op": "MSTORE"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10309": {
      "op": "SHL"
    },
    "10310": {
      "op": "SUB"
    },
    "10311": {
      "op": "DUP12"
    },
    "10312": {
      "op": "AND"
    },
    "10313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10315": {
      "op": "DUP4"
    },
    "10316": {
      "op": "ADD"
    },
    "10317": {
      "op": "MSTORE"
    },
    "10318": {
      "op": "DUP2"
    },
    "10319": {
      "op": "ADD"
    },
    "10320": {
      "op": "DUP10"
    },
    "10321": {
      "op": "SWAP1"
    },
    "10322": {
      "op": "MSTORE"
    },
    "10323": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xDB1511A41A743840C03CE4A0850A49D2E916B3E8F06A42074BAE224F0BCE7919"
    },
    "10356": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10359": {
      "op": "ADD"
    },
    "10360": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10361": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10363": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10364": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10365": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10366": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "SUB",
      "path": "20"
    },
    "10367": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10368": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        8936,
        8996
      ],
      "op": "LOG1",
      "path": "20"
    },
    "10369": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7355,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10370": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10371": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10372": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10373": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10374": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10375": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10376": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10377": {
      "fn": "Raffle.createERC20Raffle",
      "offset": [
        7109,
        9003
      ],
      "op": "POP",
      "path": "20"
    },
    "10378": {
      "fn": "Raffle.createERC20Raffle",
      "jump": "o",
      "offset": [
        7109,
        9003
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10379": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10380": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10382": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10387": {
      "op": "SHL"
    },
    "10388": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10389": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "10390": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10392": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "10393": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10394": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28B5"
    },
    "10397": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10398": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10400": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10407": {
      "op": "SHL"
    },
    "10408": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10409": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10410": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10412": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "10413": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "10416": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10417": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "10420": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10421": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10422": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10424": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10425": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10426": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10427": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10429": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10431": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10432": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10433": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10434": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10436": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10437": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10438": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10439": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10440": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10441": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "10444": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10445": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10446": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10447": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10448": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10449": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10456": {
      "op": "SHL"
    },
    "10457": {
      "op": "SUB"
    },
    "10458": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10459": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10460": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10461": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10462": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10463": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10465": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10466": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10467": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10468": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10469": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10470": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "10471": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10472": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10473": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "10474": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10475": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "10476": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10477": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10479": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10480": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10481": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10482": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10483": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10484": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10485": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10486": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10487": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10488": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10489": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10490": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10491": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10492": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10493": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10494": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10495": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13484,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10496": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10498": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10499": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10500": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10505": {
      "op": "SHL"
    },
    "10506": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10507": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10508": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DIV",
      "path": "20"
    },
    "10509": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "10511": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10512": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10513": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10514": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "GT",
      "path": "20"
    },
    "10515": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10516": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x291F"
    },
    "10519": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10520": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x291F"
    },
    "10523": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "10526": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10527": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10528": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10530": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10531": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "GT",
      "path": "20"
    },
    "10532": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10533": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2930"
    },
    "10536": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10537": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2930"
    },
    "10540": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "10543": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10544": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10545": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10546": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10547": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10549": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10550": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10552": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10553": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10554": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "10556": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10557": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10558": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10559": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10562": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "EXP",
      "path": "20"
    },
    "10563": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10564": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DIV",
      "path": "20"
    },
    "10565": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "10567": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10568": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10570": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10571": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "GT",
      "path": "20"
    },
    "10572": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10573": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2958"
    },
    "10576": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10577": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2958"
    },
    "10580": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "10583": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10584": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10585": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10587": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10588": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "GT",
      "path": "20"
    },
    "10589": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10590": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2969"
    },
    "10593": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10594": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2969"
    },
    "10597": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "10600": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10601": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10602": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10603": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10604": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "10606": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10607": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10608": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10609": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10611": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10612": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10613": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10614": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10615": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10616": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10617": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10618": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10620": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10621": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10622": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10629": {
      "op": "SHL"
    },
    "10630": {
      "op": "SUB"
    },
    "10631": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10632": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10633": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10634": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10636": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10637": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10638": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10639": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "10641": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10642": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10643": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10644": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10646": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10647": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10648": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10649": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10651": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10652": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10653": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10654": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "10656": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10657": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10658": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10659": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "10661": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10662": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10663": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10670": {
      "op": "SHL"
    },
    "10671": {
      "op": "SUB"
    },
    "10672": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10673": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10674": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10675": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "10677": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10678": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10679": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10684": {
      "op": "SHL"
    },
    "10685": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10686": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10687": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10688": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DIV",
      "path": "20"
    },
    "10689": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10690": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10691": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "10693": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10694": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10695": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10696": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "10698": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10699": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "10700": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10701": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10702": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10703": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10704": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10705": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "10707": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10708": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10709": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10710": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "DIV",
      "path": "20"
    },
    "10711": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10712": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10713": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "AND",
      "path": "20"
    },
    "10714": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10717": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10718": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10719": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "ADD",
      "path": "20"
    },
    "10720": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10721": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10722": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10723": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10724": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13520,
        13542
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 106
    },
    "10725": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13520,
        13542
      ],
      "op": "ADD",
      "path": "20"
    },
    "10726": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13520,
        13542
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10727": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10728": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13453,
        13502
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10729": {
      "op": "POP"
    },
    "10730": {
      "branch": 214,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13520,
        13556
      ],
      "op": "AND",
      "path": "20"
    },
    "10731": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A06"
    },
    "10734": {
      "branch": 214,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10735": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10737": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10744": {
      "op": "SHL"
    },
    "10745": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10746": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10747": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10749": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "ADD",
      "path": "20"
    },
    "10750": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "10753": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10754": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4145"
    },
    "10757": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13512,
        13587
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10758": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13512,
        13587
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10759": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13605,
        13626
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 107,
      "value": "0x100"
    },
    "10762": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13605,
        13626
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10763": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13605,
        13626
      ],
      "op": "ADD",
      "path": "20"
    },
    "10764": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13605,
        13626
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10765": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A76"
    },
    "10768": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10769": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10771": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10778": {
      "op": "SHL"
    },
    "10779": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10780": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10783": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10785": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10786": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "ADD",
      "path": "20"
    },
    "10787": {
      "op": "MSTORE"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10792": {
      "op": "DUP3"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "op": "MSTORE"
    },
    "10795": {
      "op": "PUSH32",
      "value": "0x4E6F6E2D77686974656C697374656420726166666C652E205573652062757952"
    },
    "10828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10830": {
      "op": "DUP3"
    },
    "10831": {
      "op": "ADD"
    },
    "10832": {
      "op": "MSTORE"
    },
    "10833": {
      "op": "PUSH21",
      "value": "0x1859999B19551A58DAD95D0A0A481A5B9CDD195859"
    },
    "10855": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "10857": {
      "op": "SHL"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10860": {
      "op": "DUP3"
    },
    "10861": {
      "op": "ADD"
    },
    "10862": {
      "op": "MSTORE"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10865": {
      "op": "ADD"
    },
    "10866": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "10869": {
      "op": "JUMP"
    },
    "10870": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13597,
        13698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10871": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13734,
        13744
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 108
    },
    "10872": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13734,
        13757
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120"
    },
    "10875": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13734,
        13757
      ],
      "op": "ADD",
      "path": "20"
    },
    "10876": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13734,
        13757
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10883": {
      "op": "SHL"
    },
    "10884": {
      "op": "SUB"
    },
    "10885": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13716,
        13757
      ],
      "op": "AND",
      "path": "20"
    },
    "10886": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13716,
        13731
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "10887": {
      "branch": 215,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13716,
        13757
      ],
      "op": "LT",
      "path": "20"
    },
    "10888": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AA3"
    },
    "10891": {
      "branch": 215,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10892": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10894": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10901": {
      "op": "SHL"
    },
    "10902": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10903": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10904": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10906": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "ADD",
      "path": "20"
    },
    "10907": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "10910": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10911": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42A0"
    },
    "10914": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13708,
        13791
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10915": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13708,
        13791
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10916": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13835,
        13858
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 109,
      "value": "0x0"
    },
    "10918": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13819
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10919": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13831
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10921": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13831
      ],
      "op": "ADD",
      "path": "20"
    },
    "10922": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13831
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10923": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10925": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10926": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "GT",
      "path": "20"
    },
    "10927": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10928": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2ABB"
    },
    "10931": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10932": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2ABB"
    },
    "10935": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CFB"
    },
    "10938": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13809,
        13858
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10939": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10940": {
      "branch": 216,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13809,
        13858
      ],
      "op": "EQ",
      "path": "20"
    },
    "10941": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AD8"
    },
    "10944": {
      "branch": 216,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10945": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10947": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10954": {
      "op": "SHL"
    },
    "10955": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10956": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10957": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10959": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "ADD",
      "path": "20"
    },
    "10960": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "10963": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10964": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42A0"
    },
    "10967": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13801,
        13892
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10968": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13801,
        13892
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10969": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13935,
        13945
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 110
    },
    "10970": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13935,
        13961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "10973": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13935,
        13961
      ],
      "op": "ADD",
      "path": "20"
    },
    "10974": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13935,
        13961
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10981": {
      "op": "SHL"
    },
    "10982": {
      "op": "SUB"
    },
    "10983": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13961
      ],
      "op": "AND",
      "path": "20"
    },
    "10984": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10985": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13932
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "10988": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13932
      ],
      "op": "ADD",
      "path": "20"
    },
    "10989": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13932
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10996": {
      "op": "SHL"
    },
    "10997": {
      "op": "SUB"
    },
    "10998": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13961
      ],
      "op": "AND",
      "path": "20"
    },
    "10999": {
      "branch": 217,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13910,
        13961
      ],
      "op": "LT",
      "path": "20"
    },
    "11000": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B36"
    },
    "11003": {
      "branch": 217,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11004": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11006": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11013": {
      "op": "SHL"
    },
    "11014": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11015": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11018": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "11020": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11021": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "ADD",
      "path": "20"
    },
    "11022": {
      "op": "MSTORE"
    },
    "11023": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11027": {
      "op": "DUP3"
    },
    "11028": {
      "op": "ADD"
    },
    "11029": {
      "op": "MSTORE"
    },
    "11030": {
      "op": "PUSH16",
      "value": "0x151A58DAD95D1CC81CDBDB19081BDD5D"
    },
    "11047": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "11049": {
      "op": "SHL"
    },
    "11050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11052": {
      "op": "DUP3"
    },
    "11053": {
      "op": "ADD"
    },
    "11054": {
      "op": "MSTORE"
    },
    "11055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11057": {
      "op": "ADD"
    },
    "11058": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "11061": {
      "op": "JUMP"
    },
    "11062": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13902,
        13982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11063": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14050,
        14060
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 111
    },
    "11064": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14050,
        14072
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "11067": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14050,
        14072
      ],
      "op": "ADD",
      "path": "20"
    },
    "11068": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14050,
        14072
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11069": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14031
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11070": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "11073": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14047
      ],
      "op": "ADD",
      "path": "20"
    },
    "11074": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11075": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14072
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B4C"
    },
    "11078": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14072
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11079": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14072
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11080": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14072
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41E1"
    },
    "11083": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14021,
        14072
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11084": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14021,
        14072
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11091": {
      "op": "SHL"
    },
    "11092": {
      "op": "SUB"
    },
    "11093": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14000,
        14073
      ],
      "op": "AND",
      "path": "20"
    },
    "11094": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14000,
        14016
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11101": {
      "op": "SHL"
    },
    "11102": {
      "op": "SUB"
    },
    "11103": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14000,
        14073
      ],
      "op": "AND",
      "path": "20"
    },
    "11104": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14000,
        14073
      ],
      "op": "GT",
      "path": "20"
    },
    "11105": {
      "branch": 218,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14000,
        14073
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11106": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7D"
    },
    "11109": {
      "branch": 218,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11110": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11112": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11119": {
      "op": "SHL"
    },
    "11120": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11121": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11122": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "11124": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "ADD",
      "path": "20"
    },
    "11125": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "11128": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11129": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42D7"
    },
    "11132": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        13992,
        14124
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11133": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13992,
        14124
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11134": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11136": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11137": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11150": {
      "op": "NOT"
    },
    "11151": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14176,
        14186
      ],
      "op": "CALLER",
      "path": "20"
    },
    "11152": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11154": {
      "op": "SHL"
    },
    "11155": {
      "op": "AND"
    },
    "11156": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11158": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11159": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "ADD",
      "path": "20"
    },
    "11160": {
      "op": "MSTORE"
    },
    "11161": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14134,
        14146
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11163": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14134,
        14146
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "11166": {
      "op": "ADD"
    },
    "11167": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11169": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11170": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11172": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11173": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11174": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "SUB",
      "path": "20"
    },
    "11175": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "SUB",
      "path": "20"
    },
    "11176": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11177": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11178": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11179": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11181": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14159,
        14187
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11182": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11183": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11184": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11185": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11187": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "ADD",
      "path": "20"
    },
    "11188": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14149,
        14188
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11189": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14134,
        14188
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11190": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14134,
        14188
      ],
      "op": "POP",
      "path": "20"
    },
    "11191": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 112,
      "value": "0x2BF8"
    },
    "11194": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14225,
        14237
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11195": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14225,
        14237
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11196": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11197": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11198": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11200": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MUL",
      "path": "20"
    },
    "11201": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11203": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "ADD",
      "path": "20"
    },
    "11204": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11206": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11207": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11208": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11209": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "ADD",
      "path": "20"
    },
    "11210": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11212": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11213": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11214": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11215": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11216": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11217": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11218": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11219": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11220": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11221": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11223": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "ADD",
      "path": "20"
    },
    "11224": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11225": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11226": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11228": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MUL",
      "path": "20"
    },
    "11229": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11230": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11231": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11232": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "11233": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11235": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11236": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "ADD",
      "path": "20"
    },
    "11237": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11238": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11239": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11240": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11241": {
      "op": "POP"
    },
    "11242": {
      "op": "POP"
    },
    "11243": {
      "op": "POP"
    },
    "11244": {
      "op": "POP"
    },
    "11245": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14239,
        14260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "11248": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14239,
        14260
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11249": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14239,
        14260
      ],
      "op": "ADD",
      "path": "20"
    },
    "11250": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14239,
        14260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11251": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14262,
        14266
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11252": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14224
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x377C"
    },
    "11255": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14206,
        14267
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11256": {
      "branch": 219,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14206,
        14267
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11257": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C3B"
    },
    "11260": {
      "branch": 219,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11261": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11263": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11270": {
      "op": "SHL"
    },
    "11271": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11272": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11275": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "11277": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11278": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "ADD",
      "path": "20"
    },
    "11279": {
      "op": "MSTORE"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11284": {
      "op": "DUP3"
    },
    "11285": {
      "op": "ADD"
    },
    "11286": {
      "op": "MSTORE"
    },
    "11287": {
      "op": "PUSH20",
      "value": "0x155CD95C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "11310": {
      "op": "SHL"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11313": {
      "op": "DUP3"
    },
    "11314": {
      "op": "ADD"
    },
    "11315": {
      "op": "MSTORE"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11318": {
      "op": "ADD"
    },
    "11319": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "11322": {
      "op": "JUMP"
    },
    "11323": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14198,
        14292
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11324": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14336,
        14355
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "11326": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14336,
        14355
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11327": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14336,
        14355
      ],
      "op": "ADD",
      "path": "20"
    },
    "11328": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14336,
        14355
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11335": {
      "op": "SHL"
    },
    "11336": {
      "op": "SUB"
    },
    "11337": {
      "branch": 220,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14336,
        14369
      ],
      "op": "AND",
      "path": "20"
    },
    "11338": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14332,
        14656
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CB9"
    },
    "11341": {
      "branch": 220,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14332,
        14656
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11342": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14426,
        14451
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 113,
      "value": "0xE0"
    },
    "11344": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14426,
        14451
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11345": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14426,
        14451
      ],
      "op": "ADD",
      "path": "20"
    },
    "11346": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14426,
        14451
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11347": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C65"
    },
    "11350": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11357": {
      "op": "SHL"
    },
    "11358": {
      "op": "SUB"
    },
    "11359": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "DUP8",
      "path": "20"
    },
    "11360": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "AND",
      "path": "20"
    },
    "11361": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "11364": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14407,
        14451
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11365": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14407,
        14451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11366": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14393,
        14402
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "11367": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14393,
        14452
      ],
      "op": "LT",
      "path": "20"
    },
    "11368": {
      "branch": 221,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14393,
        14452
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11369": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CB4"
    },
    "11372": {
      "branch": 221,
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11373": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11375": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11382": {
      "op": "SHL"
    },
    "11383": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11384": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11387": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "11389": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11390": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "ADD",
      "path": "20"
    },
    "11391": {
      "op": "DUP2"
    },
    "11392": {
      "op": "SWAP1"
    },
    "11393": {
      "op": "MSTORE"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11396": {
      "op": "DUP3"
    },
    "11397": {
      "op": "ADD"
    },
    "11398": {
      "op": "MSTORE"
    },
    "11399": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682045746865722073656E74206173207061796D656E74"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11434": {
      "op": "DUP3"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "MSTORE"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11439": {
      "op": "ADD"
    },
    "11440": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "11443": {
      "op": "JUMP"
    },
    "11444": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14384,
        14489
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11445": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14332,
        14656
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CED"
    },
    "11448": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14332,
        14656
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11449": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14332,
        14656
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11450": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14645
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 114,
      "value": "0x2CED"
    },
    "11453": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14573,
        14583
      ],
      "op": "CALLER",
      "path": "20"
    },
    "11454": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14593,
        14597
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "11455": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14619,
        14629
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11456": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14619,
        14644
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "11458": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14619,
        14644
      ],
      "op": "ADD",
      "path": "20"
    },
    "11459": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14619,
        14644
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11460": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14616
      ],
      "op": "DUP9",
      "path": "20"
    },
    "11461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11467": {
      "op": "SHL"
    },
    "11468": {
      "op": "SUB"
    },
    "11469": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "AND",
      "path": "20"
    },
    "11470": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD7"
    },
    "11473": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11474": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11475": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "11478": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14600,
        14644
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11479": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14600,
        14644
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11480": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14535,
        14554
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "11482": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14535,
        14554
      ],
      "op": "DUP7",
      "path": "20"
    },
    "11483": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14535,
        14554
      ],
      "op": "ADD",
      "path": "20"
    },
    "11484": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14535,
        14554
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11491": {
      "op": "SHL"
    },
    "11492": {
      "op": "SUB"
    },
    "11493": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14572
      ],
      "op": "AND",
      "path": "20"
    },
    "11494": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14572
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11495": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14645
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11496": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14645
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11497": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14572
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34C9"
    },
    "11500": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14528,
        14645
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11501": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14528,
        14645
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11502": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14713,
        14722
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11504": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11505": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14728,
        14744
      ],
      "op": "DUP6",
      "path": "20"
    },
    "11506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11510": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11512": {
      "op": "SHL"
    },
    "11513": {
      "op": "SUB"
    },
    "11514": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14724,
        14744
      ],
      "op": "AND",
      "path": "20"
    },
    "11515": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14724,
        14725
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11516": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14724,
        14744
      ],
      "op": "LT",
      "path": "20"
    },
    "11517": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11518": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D6A"
    },
    "11521": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11522": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 115,
      "value": "0x0"
    },
    "11524": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "DUP8",
      "path": "20"
    },
    "11525": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11526": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11527": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14777
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "11529": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11531": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11532": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11534": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11535": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11536": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14811
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "11539": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14811
      ],
      "op": "DUP6",
      "path": "20"
    },
    "11540": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14811
      ],
      "op": "ADD",
      "path": "20"
    },
    "11541": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14811
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11542": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14819,
        14829
      ],
      "op": "CALLER",
      "path": "20"
    },
    "11543": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14819,
        14829
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11544": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14788
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11545": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14815
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D2C"
    },
    "11548": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14815
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11549": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14814,
        14815
      ],
      "op": "DUP6",
      "path": "20"
    },
    "11550": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14814,
        14815
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11557": {
      "op": "SHL"
    },
    "11558": {
      "op": "SUB"
    },
    "11559": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14815
      ],
      "op": "AND",
      "path": "20"
    },
    "11560": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14815
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412D"
    },
    "11563": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14789,
        14815
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11564": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14789,
        14815
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11565": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11566": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11567": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11569": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11570": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "ADD",
      "path": "20"
    },
    "11571": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11572": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11573": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11574": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11575": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11577": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "ADD",
      "path": "20"
    },
    "11578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11580": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14816
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11581": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11582": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11589": {
      "op": "SHL"
    },
    "11590": {
      "op": "SUB"
    },
    "11591": {
      "op": "NOT"
    },
    "11592": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "AND",
      "path": "20"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11599": {
      "op": "SHL"
    },
    "11600": {
      "op": "SUB"
    },
    "11601": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11602": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11603": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11604": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "AND",
      "path": "20"
    },
    "11605": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11606": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11607": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11608": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "OR",
      "path": "20"
    },
    "11609": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11610": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14764,
        14829
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "11611": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 116,
      "value": "0x2D63"
    },
    "11614": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11615": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "11618": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14746,
        14749
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11619": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11620": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11621": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14746,
        14749
      ],
      "op": "POP",
      "path": "20"
    },
    "11622": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CF0"
    },
    "11625": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11626": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14708,
        14840
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11627": {
      "op": "POP"
    },
    "11628": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 117,
      "value": "0x0"
    },
    "11630": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "DUP7",
      "path": "20"
    },
    "11631": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11632": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11633": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14856
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "11635": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11637": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11638": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11640": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11641": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11642": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14879
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "11644": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14879
      ],
      "op": "ADD",
      "path": "20"
    },
    "11645": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11646": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11647": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14883,
        14899
      ],
      "op": "DUP8",
      "path": "20"
    },
    "11648": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14883,
        14899
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11649": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14867
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11650": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D95"
    },
    "11653": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11654": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14883,
        14899
      ],
      "op": "DUP5",
      "path": "20"
    },
    "11655": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14883,
        14899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11662": {
      "op": "SHL"
    },
    "11663": {
      "op": "SUB"
    },
    "11664": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "AND",
      "path": "20"
    },
    "11665": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4325"
    },
    "11668": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "i",
      "offset": [
        14849,
        14899
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11669": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11670": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11671": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "POP",
      "path": "20"
    },
    "11672": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "11675": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "EXP",
      "path": "20"
    },
    "11676": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11677": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11678": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11683": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11685": {
      "op": "SHL"
    },
    "11686": {
      "op": "SUB"
    },
    "11687": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "MUL",
      "path": "20"
    },
    "11688": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "NOT",
      "path": "20"
    },
    "11689": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "AND",
      "path": "20"
    },
    "11690": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11691": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11696": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11698": {
      "op": "SHL"
    },
    "11699": {
      "op": "SUB"
    },
    "11700": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "AND",
      "path": "20"
    },
    "11701": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "MUL",
      "path": "20"
    },
    "11702": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "OR",
      "path": "20"
    },
    "11703": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11704": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "11705": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        14849,
        14899
      ],
      "op": "POP",
      "path": "20"
    },
    "11706": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13443,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11707": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13443,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11708": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11709": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11710": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11711": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "offset": [
        13298,
        14907
      ],
      "op": "POP",
      "path": "20"
    },
    "11712": {
      "fn": "Raffle.buyWhitelistedRaffleTicket",
      "jump": "o",
      "offset": [
        13298,
        14907
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11713": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11714": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11716": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11723": {
      "op": "SHL"
    },
    "11724": {
      "op": "SUB"
    },
    "11725": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "11726": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "11727": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "11728": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DEB"
    },
    "11731": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11732": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11734": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11741": {
      "op": "SHL"
    },
    "11742": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11743": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11744": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11746": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "11747": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "11750": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11751": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422A"
    },
    "11754": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11755": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11762": {
      "op": "SHL"
    },
    "11763": {
      "op": "SUB"
    },
    "11764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 118
    },
    "11765": {
      "branch": 233,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "11766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E50"
    },
    "11769": {
      "branch": 233,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11779": {
      "op": "SHL"
    },
    "11780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "11788": {
      "op": "MSTORE"
    },
    "11789": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11793": {
      "op": "DUP3"
    },
    "11794": {
      "op": "ADD"
    },
    "11795": {
      "op": "MSTORE"
    },
    "11796": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11831": {
      "op": "DUP3"
    },
    "11832": {
      "op": "ADD"
    },
    "11833": {
      "op": "MSTORE"
    },
    "11834": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11843": {
      "op": "SHL"
    },
    "11844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11846": {
      "op": "DUP3"
    },
    "11847": {
      "op": "ADD"
    },
    "11848": {
      "op": "MSTORE"
    },
    "11849": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11851": {
      "op": "ADD"
    },
    "11852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "11855": {
      "op": "JUMP"
    },
    "11856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 119,
      "value": "0x0"
    },
    "11859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11870": {
      "op": "SHL"
    },
    "11871": {
      "op": "SUB"
    },
    "11872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "11875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "11878": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 120,
      "value": "0x0"
    },
    "11916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11924": {
      "op": "SHL"
    },
    "11925": {
      "op": "SUB"
    },
    "11926": {
      "op": "NOT"
    },
    "11927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "11928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11934": {
      "op": "SHL"
    },
    "11935": {
      "op": "SUB"
    },
    "11936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "11940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "11944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11946": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11947": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4359,
        6042
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11948": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11950": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11955": {
      "op": "SHL"
    },
    "11956": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11957": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "11958": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11960": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "11961": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11962": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED5"
    },
    "11965": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11966": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11968": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11975": {
      "op": "SHL"
    },
    "11976": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11977": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11978": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11980": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "11981": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "11984": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11985": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "11988": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11989": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11990": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 121,
      "value": "0x40"
    },
    "11992": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11993": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12000": {
      "op": "SHL"
    },
    "12001": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12002": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12003": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12005": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12006": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ADD",
      "path": "20"
    },
    "12007": {
      "op": "DUP9"
    },
    "12008": {
      "op": "SWAP1"
    },
    "12009": {
      "op": "MSTORE"
    },
    "12010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12016": {
      "op": "SHL"
    },
    "12017": {
      "op": "SUB"
    },
    "12018": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4669
      ],
      "op": "DUP10",
      "path": "20"
    },
    "12019": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4669
      ],
      "op": "AND",
      "path": "20"
    },
    "12020": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4669
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12021": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4669
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6352211E"
    },
    "12026": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4669
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12029": {
      "op": "ADD"
    },
    "12030": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12032": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12034": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12035": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12036": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12037": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "SUB",
      "path": "20"
    },
    "12038": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12039": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP7",
      "path": "20"
    },
    "12040": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "GAS",
      "path": "20"
    },
    "12041": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "12042": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12043": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12044": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12045": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F1A"
    },
    "12048": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12049": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12050": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12052": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12053": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "12054": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12055": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12057": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12058": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12059": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "POP",
      "path": "20"
    },
    "12060": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "POP",
      "path": "20"
    },
    "12061": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "POP",
      "path": "20"
    },
    "12062": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "POP",
      "path": "20"
    },
    "12063": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12065": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12066": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12067": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "12069": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "NOT",
      "path": "20"
    },
    "12070": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "12072": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12073": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ADD",
      "path": "20"
    },
    "12074": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "AND",
      "path": "20"
    },
    "12075": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12076": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ADD",
      "path": "20"
    },
    "12077": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12078": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12080": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12081": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "POP",
      "path": "20"
    },
    "12082": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12083": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "ADD",
      "path": "20"
    },
    "12084": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12085": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F3E"
    },
    "12088": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12089": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12090": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4394"
    },
    "12093": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        4638,
        4677
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12094": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4638,
        4677
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12101": {
      "op": "SHL"
    },
    "12102": {
      "op": "SUB"
    },
    "12103": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4624,
        4677
      ],
      "op": "AND",
      "path": "20"
    },
    "12104": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4624,
        4634
      ],
      "op": "CALLER",
      "path": "20"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12111": {
      "op": "SHL"
    },
    "12112": {
      "op": "SUB"
    },
    "12113": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4624,
        4677
      ],
      "op": "AND",
      "path": "20"
    },
    "12114": {
      "branch": 222,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4624,
        4677
      ],
      "op": "EQ",
      "path": "20"
    },
    "12115": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F9E"
    },
    "12118": {
      "branch": 222,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12119": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12121": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12128": {
      "op": "SHL"
    },
    "12129": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12130": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12133": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12135": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12136": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "ADD",
      "path": "20"
    },
    "12137": {
      "op": "MSTORE"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "12140": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12142": {
      "op": "DUP3"
    },
    "12143": {
      "op": "ADD"
    },
    "12144": {
      "op": "MSTORE"
    },
    "12145": {
      "op": "PUSH32",
      "value": "0x596F7520646F206E6F74206F776E2074686973204E4654000000000000000000"
    },
    "12178": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12180": {
      "op": "DUP3"
    },
    "12181": {
      "op": "ADD"
    },
    "12182": {
      "op": "MSTORE"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "12189": {
      "op": "JUMP"
    },
    "12190": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4616,
        4705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12197": {
      "op": "SHL"
    },
    "12198": {
      "op": "SUB"
    },
    "12199": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 122
    },
    "12200": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "AND",
      "path": "20"
    },
    "12201": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12203": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12204": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12205": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12206": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4744
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "12208": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12210": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12211": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12213": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12214": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12215": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12216": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "12218": {
      "branch": 223,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4723,
        4755
      ],
      "op": "AND",
      "path": "20"
    },
    "12219": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3006"
    },
    "12222": {
      "branch": 223,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12223": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12225": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12232": {
      "op": "SHL"
    },
    "12233": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12234": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12237": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12239": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12240": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "ADD",
      "path": "20"
    },
    "12241": {
      "op": "DUP2"
    },
    "12242": {
      "op": "SWAP1"
    },
    "12243": {
      "op": "MSTORE"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12246": {
      "op": "DUP3"
    },
    "12247": {
      "op": "ADD"
    },
    "12248": {
      "op": "MSTORE"
    },
    "12249": {
      "op": "PUSH32",
      "value": "0x546869732063757272656E6379206973206E6F742077686974656C6973746564"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12284": {
      "op": "DUP3"
    },
    "12285": {
      "op": "ADD"
    },
    "12286": {
      "op": "MSTORE"
    },
    "12287": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12289": {
      "op": "ADD"
    },
    "12290": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "12293": {
      "op": "JUMP"
    },
    "12294": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4715,
        4792
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12295": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4829,
        4830
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 123,
      "value": "0x1"
    },
    "12297": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4810,
        4826
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12304": {
      "op": "SHL"
    },
    "12305": {
      "op": "SUB"
    },
    "12306": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4810,
        4830
      ],
      "op": "AND",
      "path": "20"
    },
    "12307": {
      "branch": 224,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4810,
        4830
      ],
      "op": "GT",
      "path": "20"
    },
    "12308": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x302F"
    },
    "12311": {
      "branch": 224,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12312": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12314": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12321": {
      "op": "SHL"
    },
    "12322": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12323": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12324": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12326": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "ADD",
      "path": "20"
    },
    "12327": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "12330": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12331": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4350"
    },
    "12334": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        4802,
        4871
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12335": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4802,
        4871
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12336": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4911,
        4915
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 124,
      "value": "0xE10"
    },
    "12339": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4889,
        4907
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12346": {
      "op": "SHL"
    },
    "12347": {
      "op": "SUB"
    },
    "12348": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4889,
        4915
      ],
      "op": "AND",
      "path": "20"
    },
    "12349": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4889,
        4915
      ],
      "op": "LT",
      "path": "20"
    },
    "12350": {
      "branch": 225,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4889,
        4915
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12351": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x308A"
    },
    "12354": {
      "branch": 225,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12355": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12357": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12364": {
      "op": "SHL"
    },
    "12365": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12366": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12369": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12371": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12372": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "ADD",
      "path": "20"
    },
    "12373": {
      "op": "MSTORE"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12378": {
      "op": "DUP3"
    },
    "12379": {
      "op": "ADD"
    },
    "12380": {
      "op": "MSTORE"
    },
    "12381": {
      "op": "PUSH32",
      "value": "0x4D696E696D756D206475726174696F6E206973203120686F7572000000000000"
    },
    "12414": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12416": {
      "op": "DUP3"
    },
    "12417": {
      "op": "ADD"
    },
    "12418": {
      "op": "MSTORE"
    },
    "12419": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12421": {
      "op": "ADD"
    },
    "12422": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "12425": {
      "op": "JUMP"
    },
    "12426": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        4881,
        4946
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12427": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5102,
        5145
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 125,
      "value": "0x30A5"
    },
    "12430": {
      "offset": [
        2024,
        2033
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0x16345785D8A0000"
    },
    "12439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12443": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12445": {
      "op": "SHL"
    },
    "12446": {
      "op": "SUB"
    },
    "12447": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5102,
        5145
      ],
      "op": "DUP6",
      "path": "20"
    },
    "12448": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5102,
        5145
      ],
      "op": "AND",
      "path": "20"
    },
    "12449": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5102,
        5145
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x410E"
    },
    "12452": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        5102,
        5145
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12453": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5102,
        5145
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12454": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5088,
        5097
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "12455": {
      "branch": 226,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5088,
        5146
      ],
      "op": "EQ",
      "path": "20"
    },
    "12456": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30EF"
    },
    "12459": {
      "branch": 226,
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12460": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12462": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12469": {
      "op": "SHL"
    },
    "12470": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12471": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12474": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12476": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12477": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "ADD",
      "path": "20"
    },
    "12478": {
      "op": "MSTORE"
    },
    "12479": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12483": {
      "op": "DUP3"
    },
    "12484": {
      "op": "ADD"
    },
    "12485": {
      "op": "MSTORE"
    },
    "12486": {
      "op": "PUSH25",
      "value": "0x125B98DBDC9C9958DD0818DBDB1B185D195C985B081CD95B9D"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "12514": {
      "op": "SHL"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12517": {
      "op": "DUP3"
    },
    "12518": {
      "op": "ADD"
    },
    "12519": {
      "op": "MSTORE"
    },
    "12520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12522": {
      "op": "ADD"
    },
    "12523": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "12526": {
      "op": "JUMP"
    },
    "12527": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5080,
        5176
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12528": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 126,
      "value": "0x40"
    },
    "12530": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12531": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12538": {
      "op": "SHL"
    },
    "12539": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12540": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12547": {
      "op": "SHL"
    },
    "12548": {
      "op": "SUB"
    },
    "12549": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5272
      ],
      "op": "DUP10",
      "path": "20"
    },
    "12550": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5272
      ],
      "op": "AND",
      "path": "20"
    },
    "12551": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5272
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12552": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5272
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "12557": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5272
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12558": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311F"
    },
    "12561": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12562": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5273,
        5283
      ],
      "op": "CALLER",
      "path": "20"
    },
    "12563": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5273,
        5283
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12564": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5293,
        5297
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "12565": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5293,
        5297
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12566": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5300,
        5306
      ],
      "op": "DUP13",
      "path": "20"
    },
    "12567": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5300,
        5306
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12568": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12570": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "ADD",
      "path": "20"
    },
    "12571": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41BD"
    },
    "12574": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12575": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12576": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12578": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12580": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12581": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12582": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12583": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "SUB",
      "path": "20"
    },
    "12584": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12585": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12587": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12588": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12589": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "12590": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12591": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12592": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12593": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3139"
    },
    "12596": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12597": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12599": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12600": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12601": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12602": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "POP",
      "path": "20"
    },
    "12603": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "GAS",
      "path": "20"
    },
    "12604": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "CALL",
      "path": "20"
    },
    "12605": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12606": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12607": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12608": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x314D"
    },
    "12611": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12612": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12613": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12615": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12616": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "12617": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12618": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12620": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12621": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5236,
        5307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12622": {
      "op": "POP"
    },
    "12623": {
      "op": "POP"
    },
    "12624": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5371
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "12626": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12627": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12628": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5318,
        5347
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12630": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5318,
        5347
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12631": {
      "op": "POP"
    },
    "12632": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12634": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5357
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12635": {
      "op": "POP"
    },
    "12636": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5318,
        5347
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12637": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5318,
        5347
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12638": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5318,
        5347
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12639": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3167"
    },
    "12642": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12643": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F5"
    },
    "12646": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        5358,
        5373
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12647": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12648": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12649": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12650": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5358,
        5373
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12651": {
      "op": "POP"
    },
    "12652": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12653": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12654": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12656": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12657": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "ADD",
      "path": "20"
    },
    "12658": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12659": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12660": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12661": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12662": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12664": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "ADD",
      "path": "20"
    },
    "12665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12667": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12668": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 127
    },
    "12669": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12676": {
      "op": "SHL"
    },
    "12677": {
      "op": "SUB"
    },
    "12678": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "DUP12",
      "path": "20"
    },
    "12679": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12680": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "AND",
      "path": "20"
    },
    "12681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12687": {
      "op": "SHL"
    },
    "12688": {
      "op": "SUB"
    },
    "12689": {
      "op": "NOT"
    },
    "12690": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12691": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12692": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "AND",
      "path": "20"
    },
    "12693": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "OR",
      "path": "20"
    },
    "12694": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12695": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5384,
        5425
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12698": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5457
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 128
    },
    "12699": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5457
      ],
      "op": "ADD",
      "path": "20"
    },
    "12700": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12701": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12702": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12703": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "AND",
      "path": "20"
    },
    "12704": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5460,
        5470
      ],
      "op": "CALLER",
      "path": "20"
    },
    "12705": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "OR",
      "path": "20"
    },
    "12706": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12707": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5435,
        5470
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12708": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5480,
        5502
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 129,
      "value": "0x2"
    },
    "12710": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5480,
        5502
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12711": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5480,
        5502
      ],
      "op": "ADD",
      "path": "20"
    },
    "12712": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5480,
        5528
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12713": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5480,
        5528
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12714": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12719": {
      "op": "SHL"
    },
    "12720": {
      "op": "NOT"
    },
    "12721": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5538,
        5579
      ],
      "op": "AND",
      "path": "20",
      "statement": 130
    },
    "12722": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5538,
        5579
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12723": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5538,
        5579
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12724": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5613
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 131,
      "value": "0x3"
    },
    "12726": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5613
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12727": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5613
      ],
      "op": "ADD",
      "path": "20"
    },
    "12728": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5622
      ],
      "op": "DUP12",
      "path": "20"
    },
    "12729": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5622
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12730": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5589,
        5622
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12731": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5651
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 132,
      "value": "0x4"
    },
    "12733": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5651
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12734": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5651
      ],
      "op": "ADD",
      "path": "20"
    },
    "12735": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12736": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12737": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12738": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12739": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "AND",
      "path": "20"
    },
    "12740": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12741": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "DUP11",
      "path": "20"
    },
    "12742": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "AND",
      "path": "20"
    },
    "12743": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "OR",
      "path": "20"
    },
    "12744": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12745": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5632,
        5663
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12746": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5698
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 133,
      "value": "0x5"
    },
    "12748": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5698
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12749": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5698
      ],
      "op": "ADD",
      "path": "20"
    },
    "12750": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5716
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12751": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5716
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12752": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5673,
        5716
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12753": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 134,
      "value": "0x6"
    },
    "12755": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12756": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5747
      ],
      "op": "ADD",
      "path": "20"
    },
    "12757": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5761
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12758": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5761
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12759": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5726,
        5761
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12760": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5350,
        5374
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12761": {
      "op": "POP"
    },
    "12762": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5797,
        5842
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 135,
      "value": "0x31E3"
    },
    "12765": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5824,
        5842
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12766": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5805,
        5820
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "12767": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5797,
        5842
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4325"
    },
    "12770": {
      "fn": "Raffle.createERC721Raffle",
      "jump": "i",
      "offset": [
        5797,
        5842
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12771": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5797,
        5842
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12776": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12778": {
      "op": "SHL"
    },
    "12779": {
      "op": "SUB"
    },
    "12780": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5842
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12781": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5842
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12782": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5842
      ],
      "op": "AND",
      "path": "20"
    },
    "12783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12785": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12787": {
      "op": "SHL"
    },
    "12788": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "DUP8",
      "path": "20",
      "statement": 136
    },
    "12789": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12790": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "AND",
      "path": "20"
    },
    "12791": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12792": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "MUL",
      "path": "20"
    },
    "12793": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12794": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12795": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12796": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "OR",
      "path": "20"
    },
    "12797": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5794
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "12799": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5794
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12800": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5794
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12801": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5771,
        5794
      ],
      "op": "ADD",
      "path": "20"
    },
    "12802": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12803": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12804": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12805": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5852,
        5897
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12806": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5936
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 137,
      "value": "0x8"
    },
    "12808": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5936
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12809": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5936
      ],
      "op": "ADD",
      "path": "20"
    },
    "12810": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12811": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12812": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12813": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "AND",
      "path": "20"
    },
    "12814": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12815": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "DUP9",
      "path": "20"
    },
    "12816": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "AND",
      "path": "20"
    },
    "12817": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12818": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12819": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "MUL",
      "path": "20"
    },
    "12820": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12821": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12822": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12823": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "OR",
      "path": "20"
    },
    "12824": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12825": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5907,
        5958
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12826": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5997,
        6010
      ],
      "op": "SLOAD",
      "path": "20",
      "statement": 138
    },
    "12827": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12829": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12830": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12831": {
      "op": "SWAP2"
    },
    "12832": {
      "op": "DUP3"
    },
    "12833": {
      "op": "MSTORE"
    },
    "12834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12840": {
      "op": "SHL"
    },
    "12841": {
      "op": "SUB"
    },
    "12842": {
      "op": "DUP12"
    },
    "12843": {
      "op": "AND"
    },
    "12844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12846": {
      "op": "DUP4"
    },
    "12847": {
      "op": "ADD"
    },
    "12848": {
      "op": "MSTORE"
    },
    "12849": {
      "op": "DUP2"
    },
    "12850": {
      "op": "ADD"
    },
    "12851": {
      "op": "DUP10"
    },
    "12852": {
      "op": "SWAP1"
    },
    "12853": {
      "op": "MSTORE"
    },
    "12854": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x1F1A5174455810457E3CA7CB27252DB8D09030FAD07EEC86404C4DFEEEEADF87"
    },
    "12887": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12890": {
      "op": "ADD"
    },
    "12891": {
      "fn": "Raffle.createERC721Raffle",
      "offset": [
        5974,
        6035
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2878"
    },
    "12894": {
      "op": "JUMP"
    },
    "12895": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21075,
        21609
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12896": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21169,
        21185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12898": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12899": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12900": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12901": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21214
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "12903": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12905": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12906": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12907": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12908": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12910": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12911": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12912": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12913": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21188,
        21225
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12914": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12915": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12916": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12917": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21274
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12919": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12920": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12921": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12922": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12923": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12924": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21267,
        21284
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12925": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21319,
        21340
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 139,
      "value": "0x2"
    },
    "12927": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21316
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12928": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21316
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12929": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21316
      ],
      "op": "ADD",
      "path": "20"
    },
    "12930": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12931": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12936": {
      "op": "SHL"
    },
    "12937": {
      "op": "NOT"
    },
    "12938": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "AND",
      "path": "20"
    },
    "12939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12943": {
      "op": "SHL"
    },
    "12944": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21319,
        21340
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12945": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "MUL",
      "path": "20"
    },
    "12946": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "OR",
      "path": "20"
    },
    "12947": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12948": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12949": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21294,
        21340
      ],
      "op": "POP",
      "path": "20"
    },
    "12950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12952": {
      "op": "DUP1"
    },
    "12953": {
      "op": "MLOAD"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12956": {
      "op": "PUSH2",
      "value": "0x44B8"
    },
    "12959": {
      "op": "DUP4"
    },
    "12960": {
      "op": "CODECOPY"
    },
    "12961": {
      "op": "DUP2"
    },
    "12962": {
      "op": "MLOAD"
    },
    "12963": {
      "op": "SWAP2"
    },
    "12964": {
      "op": "MSTORE"
    },
    "12965": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21374,
        21382
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 140
    },
    "12966": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21384,
        21404
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "12968": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21406,
        21427
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "12970": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12972": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12973": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32B8"
    },
    "12976": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12977": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12978": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12979": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12980": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4209"
    },
    "12983": {
      "fn": "Raffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        21355,
        21428
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12984": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12985": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12987": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12988": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12989": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12990": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SUB",
      "path": "20"
    },
    "12991": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12992": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21355,
        21428
      ],
      "op": "LOG1",
      "path": "20"
    },
    "12993": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21507,
        21529
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "12995": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21507,
        21529
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12996": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21507,
        21529
      ],
      "op": "ADD",
      "path": "20"
    },
    "12997": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21507,
        21529
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12998": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21471,
        21491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13000": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21471,
        21491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13001": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21494,
        21529
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32DB"
    },
    "13004": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21494,
        21529
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13009": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13011": {
      "op": "SHL"
    },
    "13012": {
      "op": "SUB"
    },
    "13013": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21507,
        21529
      ],
      "op": "AND",
      "path": "20"
    },
    "13014": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21494,
        21504
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13015": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21494,
        21529
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43B1"
    },
    "13018": {
      "fn": "Raffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        21494,
        21529
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13019": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21494,
        21529
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13020": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 141,
      "value": "0x0"
    },
    "13022": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13023": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13024": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13025": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21578
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "13027": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13029": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13030": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13031": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13032": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13034": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13035": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13036": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21588
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "13037": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13038": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13039": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13040": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13041": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13042": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13043": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13044": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13045": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "13046": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "13047": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21562
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "13049": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21562
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13050": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21562
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13051": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21562
      ],
      "op": "ADD",
      "path": "20"
    },
    "13052": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13053": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "13054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13060": {
      "op": "SHL"
    },
    "13061": {
      "op": "SUB"
    },
    "13062": {
      "op": "NOT"
    },
    "13063": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "AND",
      "path": "20"
    },
    "13064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13070": {
      "op": "SHL"
    },
    "13071": {
      "op": "SUB"
    },
    "13072": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13073": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13074": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21565,
        21602
      ],
      "op": "AND",
      "path": "20"
    },
    "13075": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13076": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13077": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13078": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "OR",
      "path": "20"
    },
    "13079": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13080": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        21539,
        21602
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "13081": {
      "op": "POP"
    },
    "13082": {
      "op": "POP"
    },
    "13083": {
      "op": "POP"
    },
    "13084": {
      "fn": "Raffle.fulfillRandomness",
      "jump": "o",
      "offset": [
        21075,
        21609
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13085": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21849,
        22370
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13086": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21993,
        22000
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 142
    },
    "13087": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21968,
        21989
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "13088": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21968,
        22000
      ],
      "op": "LT",
      "path": "20"
    },
    "13089": {
      "branch": 227,
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21968,
        22000
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13090": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x336D"
    },
    "13093": {
      "branch": 227,
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13094": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13096": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13103": {
      "op": "SHL"
    },
    "13104": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13105": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13108": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13110": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13111": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "ADD",
      "path": "20"
    },
    "13112": {
      "op": "MSTORE"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13117": {
      "op": "DUP3"
    },
    "13118": {
      "op": "ADD"
    },
    "13119": {
      "op": "MSTORE"
    },
    "13120": {
      "op": "PUSH32",
      "value": "0x5F68616E646C6545746865725472616E7366657220696E736F6C76656E740000"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13155": {
      "op": "DUP3"
    },
    "13156": {
      "op": "ADD"
    },
    "13157": {
      "op": "MSTORE"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13160": {
      "op": "ADD"
    },
    "13161": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "13164": {
      "op": "JUMP"
    },
    "13165": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21960,
        22035
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13166": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22045,
        22056
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13168": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22060,
        22069
      ],
      "op": "GAS",
      "path": "20"
    },
    "13169": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22045,
        22069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13170": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22045,
        22069
      ],
      "op": "POP",
      "path": "20"
    },
    "13171": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22080,
        22092
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13173": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22103
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13180": {
      "op": "SHL"
    },
    "13181": {
      "op": "SUB"
    },
    "13182": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22108
      ],
      "op": "AND",
      "path": "20"
    },
    "13183": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22116,
        22123
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13184": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22130,
        22133
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13185": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13186": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13188": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13189": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13191": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13193": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13194": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13195": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13196": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "SUB",
      "path": "20"
    },
    "13197": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13198": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13199": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP9",
      "path": "20"
    },
    "13200": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP9",
      "path": "20"
    },
    "13201": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "CALL",
      "path": "20"
    },
    "13202": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13203": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13204": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13205": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13206": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13207": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13208": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13209": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13211": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13212": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "EQ",
      "path": "20"
    },
    "13213": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33C2"
    },
    "13216": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13217": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13219": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13220": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13221": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13222": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "13224": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "NOT",
      "path": "20"
    },
    "13225": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3F"
    },
    "13227": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13228": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "ADD",
      "path": "20"
    },
    "13229": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "AND",
      "path": "20"
    },
    "13230": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13231": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "ADD",
      "path": "20"
    },
    "13232": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13234": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13235": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13236": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13237": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13238": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13239": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13241": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13243": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13244": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "ADD",
      "path": "20"
    },
    "13245": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13246": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33C7"
    },
    "13249": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13250": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13251": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "13253": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13254": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13255": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13256": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22098,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13257": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22079,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13258": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22079,
        22138
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13259": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22079,
        22138
      ],
      "op": "POP",
      "path": "20"
    },
    "13260": {
      "branch": 228,
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22236,
        22243
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13261": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22231,
        22364
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x345B"
    },
    "13264": {
      "branch": 228,
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22231,
        22364
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13265": {
      "offset": [
        1934,
        1976
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "13286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13292": {
      "op": "SHL"
    },
    "13293": {
      "op": "SUB"
    },
    "13294": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22271
      ],
      "op": "AND",
      "path": "20",
      "statement": 143
    },
    "13295": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22271
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD0E30DB0"
    },
    "13300": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22279,
        22286
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13301": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13303": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13304": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13305": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "13310": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "AND",
      "path": "20"
    },
    "13311": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "13313": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "SHL",
      "path": "20"
    },
    "13314": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13315": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13316": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13318": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "ADD",
      "path": "20"
    },
    "13319": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13321": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13323": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13324": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13325": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13326": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "SUB",
      "path": "20"
    },
    "13327": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13328": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13329": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP9",
      "path": "20"
    },
    "13330": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13331": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "13332": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13333": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13334": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13335": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x341F"
    },
    "13338": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13339": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13341": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13342": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13343": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13344": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "POP",
      "path": "20"
    },
    "13345": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "GAS",
      "path": "20"
    },
    "13346": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "CALL",
      "path": "20"
    },
    "13347": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13348": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13349": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13350": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3433"
    },
    "13353": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13354": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13355": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13357": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13358": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13359": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13360": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13362": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13363": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22259,
        22289
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13364": {
      "op": "POP"
    },
    "13365": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22303,
        22353
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 144,
      "value": "0x345B"
    },
    "13368": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22303,
        22353
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13369": {
      "op": "POP"
    },
    "13370": {
      "offset": [
        1934,
        1976
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "13391": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        1934,
        1976
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13392": {
      "op": "POP"
    },
    "13393": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22338,
        22343
      ],
      "op": "DUP8",
      "path": "20"
    },
    "13394": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22338,
        22343
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13395": {
      "op": "POP"
    },
    "13396": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22345,
        22352
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13397": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22345,
        22352
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13398": {
      "op": "POP"
    },
    "13399": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22303,
        22337
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3461"
    },
    "13402": {
      "fn": "Raffle._handleEtherTransfer",
      "jump": "i",
      "offset": [
        22303,
        22353
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13403": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        22303,
        22353
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13404": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21920,
        22370
      ],
      "op": "POP",
      "path": "20"
    },
    "13405": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21920,
        22370
      ],
      "op": "POP",
      "path": "20"
    },
    "13406": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21849,
        22370
      ],
      "op": "POP",
      "path": "20"
    },
    "13407": {
      "fn": "Raffle._handleEtherTransfer",
      "offset": [
        21849,
        22370
      ],
      "op": "POP",
      "path": "20"
    },
    "13408": {
      "fn": "Raffle._handleEtherTransfer",
      "jump": "o",
      "offset": [
        21849,
        22370
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 145,
      "value": "0x40"
    },
    "13412": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13419": {
      "op": "SHL"
    },
    "13420": {
      "op": "SUB"
    },
    "13421": {
      "op": "DUP4"
    },
    "13422": {
      "op": "AND"
    },
    "13423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "13425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13426": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "5"
    },
    "13427": {
      "op": "MSTORE"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13430": {
      "op": "DUP2"
    },
    "13431": {
      "op": "ADD"
    },
    "13432": {
      "op": "DUP3"
    },
    "13433": {
      "op": "SWAP1"
    },
    "13434": {
      "op": "MSTORE"
    },
    "13435": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34C4"
    },
    "13438": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13439": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13440": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13441": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13448": {
      "op": "SHL"
    },
    "13449": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13452": {
      "op": "ADD"
    },
    "13453": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13454": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13456": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13457": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13460": {
      "op": "NOT"
    },
    "13461": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SUB",
      "path": "5"
    },
    "13464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "5"
    },
    "13465": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13466": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13467": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13468": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13469": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13470": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13472": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13473": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "5"
    },
    "13474": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13475": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13480": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13482": {
      "op": "SHL"
    },
    "13483": {
      "op": "SUB"
    },
    "13484": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "5"
    },
    "13485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13491": {
      "op": "SHL"
    },
    "13492": {
      "op": "SUB"
    },
    "13493": {
      "op": "NOT"
    },
    "13494": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13495": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13496": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "5"
    },
    "13497": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13498": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13499": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13500": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "OR",
      "path": "5"
    },
    "13501": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13502": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13503": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13504": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x382B"
    },
    "13507": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        716,
        802
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13508": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13509": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "5"
    },
    "13510": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "5"
    },
    "13511": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "5"
    },
    "13512": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13513": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13514": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 146,
      "value": "0x345B"
    },
    "13517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13518": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "13523": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "13525": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "SHL",
      "path": "5"
    },
    "13526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        994,
        998
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13527": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1000,
        1002
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13528": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13531": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13532": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "13534": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "5"
    },
    "13535": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x348D"
    },
    "13538": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13539": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13540": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13541": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13542": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41BD"
    },
    "13545": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        942,
        1010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13546": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20633,
        21069
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13547": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 147,
      "value": "0x40"
    },
    "13549": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13550": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "13555": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13557": {
      "op": "SHL"
    },
    "13558": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13559": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13560": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20758,
        20762
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "13561": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13563": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13564": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ADD",
      "path": "20"
    },
    "13565": {
      "op": "MSTORE"
    },
    "13566": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20698,
        20715
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13568": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20698,
        20715
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13569": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20768,
        20775
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "13602": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20768,
        20775
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13609": {
      "op": "SHL"
    },
    "13610": {
      "op": "SUB"
    },
    "13611": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20739
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "13644": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20749
      ],
      "op": "AND",
      "path": "20"
    },
    "13645": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20749
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13646": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20749
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "13651": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20749
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13654": {
      "op": "ADD"
    },
    "13655": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13657": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13659": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13660": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13661": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13662": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "SUB",
      "path": "20"
    },
    "13663": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13664": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13665": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "GAS",
      "path": "20"
    },
    "13666": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "13667": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13668": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13669": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13670": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3573"
    },
    "13673": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13674": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13675": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13677": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13678": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13679": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13680": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13682": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13683": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13684": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "POP",
      "path": "20"
    },
    "13685": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "POP",
      "path": "20"
    },
    "13686": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "POP",
      "path": "20"
    },
    "13687": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "POP",
      "path": "20"
    },
    "13688": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13690": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13691": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13692": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "13694": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "NOT",
      "path": "20"
    },
    "13695": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "13697": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13698": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ADD",
      "path": "20"
    },
    "13699": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "AND",
      "path": "20"
    },
    "13700": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13701": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ADD",
      "path": "20"
    },
    "13702": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13703": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13705": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13706": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "POP",
      "path": "20"
    },
    "13707": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13708": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "ADD",
      "path": "20"
    },
    "13709": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13710": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3597"
    },
    "13713": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13714": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13715": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43C5"
    },
    "13718": {
      "fn": "Raffle._requestRandomness",
      "jump": "i",
      "offset": [
        20735,
        20764
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13719": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20764
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13720": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20775
      ],
      "op": "LT",
      "path": "20"
    },
    "13721": {
      "branch": 229,
      "fn": "Raffle._requestRandomness",
      "offset": [
        20735,
        20775
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13722": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D7"
    },
    "13725": {
      "branch": 229,
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13726": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13728": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13735": {
      "op": "SHL"
    },
    "13736": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13737": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13740": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13742": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13743": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "ADD",
      "path": "20"
    },
    "13744": {
      "op": "MSTORE"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "13747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13749": {
      "op": "DUP3"
    },
    "13750": {
      "op": "ADD"
    },
    "13751": {
      "op": "MSTORE"
    },
    "13752": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F756768204C494E4B"
    },
    "13768": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "13770": {
      "op": "SHL"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13773": {
      "op": "DUP3"
    },
    "13774": {
      "op": "ADD"
    },
    "13775": {
      "op": "MSTORE"
    },
    "13776": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13778": {
      "op": "ADD"
    },
    "13779": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x726"
    },
    "13782": {
      "op": "JUMP"
    },
    "13783": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20727,
        20795
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13784": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20805,
        20834
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13786": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13787": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13788": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13789": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20844
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13791": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13793": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13794": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13796": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13797": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13798": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "13799": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20887
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 148,
      "value": "0x2"
    },
    "13801": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20887
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13802": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20887
      ],
      "op": "ADD",
      "path": "20"
    },
    "13803": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13804": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "13805": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13809": {
      "op": "SHL"
    },
    "13810": {
      "op": "NOT"
    },
    "13811": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "AND",
      "path": "20"
    },
    "13812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13816": {
      "op": "SHL"
    },
    "13817": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "OR",
      "path": "20"
    },
    "13818": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13819": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20865,
        20910
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "13820": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 149
    },
    "13821": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13822": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13823": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13826": {
      "op": "DUP1"
    },
    "13827": {
      "op": "MLOAD"
    },
    "13828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13830": {
      "op": "PUSH2",
      "value": "0x44B8"
    },
    "13833": {
      "op": "DUP4"
    },
    "13834": {
      "op": "CODECOPY"
    },
    "13835": {
      "op": "DUP2"
    },
    "13836": {
      "op": "MLOAD"
    },
    "13837": {
      "op": "SWAP2"
    },
    "13838": {
      "op": "MSTORE"
    },
    "13839": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13840": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x361D"
    },
    "13843": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13844": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13845": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20837,
        20855
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13848": {
      "op": "SWAP1"
    },
    "13849": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4209"
    },
    "13852": {
      "fn": "Raffle._requestRandomness",
      "jump": "i",
      "offset": [
        20925,
        21001
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13853": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13854": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13856": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13857": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13858": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13859": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SUB",
      "path": "20"
    },
    "13860": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13861": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20925,
        21001
      ],
      "op": "LOG1",
      "path": "20"
    },
    "13862": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21023,
        21062
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 150,
      "value": "0x366F"
    },
    "13865": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21041,
        21052
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "13898": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21054,
        21061
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "13931": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21023,
        21040
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38FD"
    },
    "13934": {
      "fn": "Raffle._requestRandomness",
      "jump": "i",
      "offset": [
        21023,
        21062
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13935": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21023,
        21062
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13936": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        21011,
        21062
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13937": {
      "fn": "Raffle._requestRandomness",
      "offset": [
        20633,
        21069
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13938": {
      "op": "POP"
    },
    "13939": {
      "op": "POP"
    },
    "13940": {
      "op": "POP"
    },
    "13941": {
      "fn": "Raffle._requestRandomness",
      "jump": "o",
      "offset": [
        20633,
        21069
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13942": {
      "fn": "Pausable._pause",
      "offset": [
        1807,
        1922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13943": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13945": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13950": {
      "op": "SHL"
    },
    "13951": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13952": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "13953": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "13955": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "13956": {
      "offset": [
        1355,
        1364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13957": {
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A0"
    },
    "13960": {
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13961": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13963": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13970": {
      "op": "SHL"
    },
    "13971": {
      "offset": [
        1347,
        1385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13972": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13973": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13975": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "ADD",
      "path": "1"
    },
    "13976": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "13979": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13980": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x409F"
    },
    "13983": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13984": {
      "fn": "Pausable.paused",
      "offset": [
        1347,
        1385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13985": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1873
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 151,
      "value": "0x0"
    },
    "13987": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13988": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13989": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13993": {
      "op": "SHL"
    },
    "13994": {
      "op": "NOT"
    },
    "13995": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "AND",
      "path": "1"
    },
    "13996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14000": {
      "op": "SHL"
    },
    "14001": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "OR",
      "path": "1"
    },
    "14002": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14003": {
      "fn": "Pausable._pause",
      "offset": [
        1866,
        1880
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14004": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 152,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "14037": {
      "fn": "Pausable._pause",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36DB"
    },
    "14040": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "14041": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14042": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14043": {
      "fn": "Pausable._pause",
      "offset": [
        1902,
        1914
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14044": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14046": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14053": {
      "op": "SHL"
    },
    "14054": {
      "op": "SUB"
    },
    "14055": {
      "op": "SWAP1"
    },
    "14056": {
      "op": "SWAP2"
    },
    "14057": {
      "op": "AND"
    },
    "14058": {
      "op": "DUP2"
    },
    "14059": {
      "op": "MSTORE"
    },
    "14060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14062": {
      "op": "ADD"
    },
    "14063": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14065": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14066": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14067": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "14068": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "SUB",
      "path": "1"
    },
    "14069": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14070": {
      "fn": "Pausable._pause",
      "offset": [
        1895,
        1915
      ],
      "op": "LOG1",
      "path": "1"
    },
    "14071": {
      "fn": "Pausable._pause",
      "jump": "o",
      "offset": [
        1807,
        1922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "14072": {
      "fn": "Pausable._unpause",
      "offset": [
        2054,
        2171
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14073": {
      "fn": "Pausable.paused",
      "offset": [
        1089,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14075": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14080": {
      "op": "SHL"
    },
    "14081": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14082": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "DIV",
      "path": "1"
    },
    "14083": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "14085": {
      "fn": "Pausable.paused",
      "offset": [
        1112,
        1119
      ],
      "op": "AND",
      "path": "1"
    },
    "14086": {
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3748"
    },
    "14089": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14090": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "14092": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "14093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14099": {
      "op": "SHL"
    },
    "14100": {
      "offset": [
        1613,
        1654
      ],
      "op": "DUP2",
      "path": "1"
    },
    "14101": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14104": {
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "14106": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "1"
    },
    "14107": {
      "fn": "Pausable.paused",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "1"
    },
    "14108": {
      "op": "MSTORE"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14113": {
      "op": "DUP3"
    },
    "14114": {
      "op": "ADD"
    },
    "14115": {
      "op": "MSTORE"
    },
    "14116": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "14137": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "14139": {
      "op": "SHL"
    },
    "14140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14142": {
      "op": "DUP3"
    },
    "14143": {
      "op": "ADD"
    },
    "14144": {
      "op": "MSTORE"
    },
    "14145": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14147": {
      "op": "ADD"
    },
    "14148": {
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x726"
    },
    "14151": {
      "op": "JUMP"
    },
    "14152": {
      "offset": [
        1613,
        1654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "14153": {
      "fn": "Pausable._unpause",
      "offset": [
        2122,
        2127
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 153,
      "value": "0x0"
    },
    "14155": {
      "fn": "Pausable._unpause",
      "offset": [
        2112,
        2127
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14156": {
      "fn": "Pausable._unpause",
      "offset": [
        2112,
        2127
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14161": {
      "op": "SHL"
    },
    "14162": {
      "op": "NOT"
    },
    "14163": {
      "fn": "Pausable._unpause",
      "offset": [
        2112,
        2127
      ],
      "op": "AND",
      "path": "1"
    },
    "14164": {
      "fn": "Pausable._unpause",
      "offset": [
        2112,
        2127
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "14165": {
      "fn": "Pausable._unpause",
      "offset": [
        2112,
        2127
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "14166": {
      "fn": "Pausable._unpause",
      "offset": [
        2142,
        2164
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 154,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "14199": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "12"
    },
    "14200": {
      "fn": "Pausable._unpause",
      "offset": [
        2151,
        2163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36DB"
    },
    "14203": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14204": {
      "fn": "MerkleProof.verify",
      "offset": [
        497,
        1276
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14205": {
      "fn": "MerkleProof.verify",
      "offset": [
        588,
        592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14207": {
      "fn": "MerkleProof.verify",
      "offset": [
        627,
        631
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14208": {
      "fn": "MerkleProof.verify",
      "offset": [
        588,
        592
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14209": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14210": {
      "fn": "MerkleProof.verify",
      "offset": [
        666,
        671
      ],
      "op": "DUP6",
      "path": "14"
    },
    "14211": {
      "fn": "MerkleProof.verify",
      "offset": [
        666,
        678
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14212": {
      "fn": "MerkleProof.verify",
      "offset": [
        662,
        663
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14213": {
      "fn": "MerkleProof.verify",
      "offset": [
        662,
        678
      ],
      "op": "LT",
      "path": "14"
    },
    "14214": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "14215": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3820"
    },
    "14218": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "14219": {
      "fn": "MerkleProof.verify",
      "offset": [
        699,
        719
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14221": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        727
      ],
      "op": "DUP7",
      "path": "14"
    },
    "14222": {
      "fn": "MerkleProof.verify",
      "offset": [
        728,
        729
      ],
      "op": "DUP3",
      "path": "14"
    },
    "14223": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14224": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14225": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14226": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "LT",
      "path": "14"
    },
    "14227": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x379E"
    },
    "14230": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "14231": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x379E"
    },
    "14234": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x40C9"
    },
    "14237": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        722,
        730
      ],
      "op": "JUMP",
      "path": "14"
    },
    "14238": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14239": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14241": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "MUL",
      "path": "14"
    },
    "14242": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14244": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "ADD",
      "path": "14"
    },
    "14245": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "ADD",
      "path": "14"
    },
    "14246": {
      "fn": "MerkleProof.verify",
      "offset": [
        722,
        730
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14247": {
      "fn": "MerkleProof.verify",
      "offset": [
        699,
        730
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "14248": {
      "fn": "MerkleProof.verify",
      "offset": [
        699,
        730
      ],
      "op": "POP",
      "path": "14"
    },
    "14249": {
      "fn": "MerkleProof.verify",
      "offset": [
        765,
        777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "14250": {
      "fn": "MerkleProof.verify",
      "offset": [
        749,
        761
      ],
      "op": "DUP4",
      "path": "14"
    },
    "14251": {
      "branch": 232,
      "fn": "MerkleProof.verify",
      "offset": [
        749,
        777
      ],
      "op": "GT",
      "path": "14"
    },
    "14252": {
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x37E0"
    },
    "14255": {
      "branch": 232,
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "14256": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 155,
      "value": "0x40"
    },
    "14258": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "DUP1",
      "path": "14"
    },
    "14259": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14260": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14262": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14263": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "ADD",
      "path": "14"
    },
    "14264": {
      "op": "DUP6"
    },
    "14265": {
      "op": "SWAP1"
    },
    "14266": {
      "op": "MSTORE"
    },
    "14267": {
      "op": "SWAP1"
    },
    "14268": {
      "op": "DUP2"
    },
    "14269": {
      "op": "ADD"
    },
    "14270": {
      "op": "DUP3"
    },
    "14271": {
      "op": "SWAP1"
    },
    "14272": {
      "op": "MSTORE"
    },
    "14273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14275": {
      "op": "ADD"
    },
    "14276": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "14278": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14279": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14281": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14282": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "DUP4",
      "path": "14"
    },
    "14283": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "SUB",
      "path": "14"
    },
    "14284": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "SUB",
      "path": "14"
    },
    "14285": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14286": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "14287": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "14288": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "14290": {
      "fn": "MerkleProof.verify",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "14291": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "DUP1",
      "path": "14"
    },
    "14292": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14293": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "14294": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14296": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "ADD",
      "path": "14"
    },
    "14297": {
      "fn": "MerkleProof.verify",
      "offset": [
        890,
        945
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "14298": {
      "fn": "MerkleProof.verify",
      "offset": [
        875,
        945
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "14299": {
      "fn": "MerkleProof.verify",
      "offset": [
        875,
        945
      ],
      "op": "POP",
      "path": "14"
    },
    "14300": {
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x380D"
    },
    "14303": {
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "JUMP",
      "path": "14"
    },
    "14304": {
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14305": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 156,
      "value": "0x40"
    },
    "14307": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "DUP1",
      "path": "14"
    },
    "14308": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14309": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14311": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14312": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "ADD",
      "path": "14"
    },
    "14313": {
      "op": "DUP4"
    },
    "14314": {
      "op": "SWAP1"
    },
    "14315": {
      "op": "MSTORE"
    },
    "14316": {
      "op": "SWAP1"
    },
    "14317": {
      "op": "DUP2"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "op": "DUP5"
    },
    "14320": {
      "op": "SWAP1"
    },
    "14321": {
      "op": "MSTORE"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14324": {
      "op": "ADD"
    },
    "14325": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "14327": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14328": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14330": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14331": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "DUP4",
      "path": "14"
    },
    "14332": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "SUB",
      "path": "14"
    },
    "14333": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "SUB",
      "path": "14"
    },
    "14334": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14335": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "14336": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "14337": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "14339": {
      "fn": "MerkleProof.verify",
      "offset": [
        1087,
        1131
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "14340": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "DUP1",
      "path": "14"
    },
    "14341": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "14342": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "14343": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "14345": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "ADD",
      "path": "14"
    },
    "14346": {
      "fn": "MerkleProof.verify",
      "offset": [
        1077,
        1132
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "14347": {
      "fn": "MerkleProof.verify",
      "offset": [
        1062,
        1132
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "14348": {
      "fn": "MerkleProof.verify",
      "offset": [
        1062,
        1132
      ],
      "op": "POP",
      "path": "14"
    },
    "14349": {
      "fn": "MerkleProof.verify",
      "offset": [
        745,
        1147
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14350": {
      "op": "POP"
    },
    "14351": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 157
    },
    "14352": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3818"
    },
    "14355": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "DUP2",
      "path": "14"
    },
    "14356": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x40F5"
    },
    "14359": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        680,
        683
      ],
      "op": "JUMP",
      "path": "14"
    },
    "14360": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14361": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "14362": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "POP",
      "path": "14"
    },
    "14363": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        683
      ],
      "op": "POP",
      "path": "14"
    },
    "14364": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3781"
    },
    "14367": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "JUMP",
      "path": "14"
    },
    "14368": {
      "fn": "MerkleProof.verify",
      "offset": [
        642,
        1157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "14369": {
      "op": "POP"
    },
    "14370": {
      "fn": "MerkleProof.verify",
      "offset": [
        1249,
        1269
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 158
    },
    "14371": {
      "fn": "MerkleProof.verify",
      "offset": [
        1249,
        1269
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "14372": {
      "fn": "MerkleProof.verify",
      "offset": [
        1249,
        1269
      ],
      "op": "EQ",
      "path": "14"
    },
    "14373": {
      "fn": "MerkleProof.verify",
      "offset": [
        1249,
        1269
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "14374": {
      "fn": "MerkleProof.verify",
      "offset": [
        497,
        1276
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "14375": {
      "op": "POP"
    },
    "14376": {
      "op": "POP"
    },
    "14377": {
      "op": "POP"
    },
    "14378": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        497,
        1276
      ],
      "op": "JUMP",
      "path": "14"
    },
    "14379": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14380": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3880"
    },
    "14385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14392": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "5"
    },
    "14393": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14400": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14401": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14403": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "5"
    },
    "14404": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "14437": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14438": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "5"
    },
    "14440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14447": {
      "op": "SHL"
    },
    "14448": {
      "op": "SUB"
    },
    "14449": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "5"
    },
    "14450": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A81"
    },
    "14453": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "14462": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "5"
    },
    "14463": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14468": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14469": {
      "op": "POP"
    },
    "14470": {
      "branch": 234,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34C4"
    },
    "14474": {
      "branch": 234,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 159
    },
    "14476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "5"
    },
    "14480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "5"
    },
    "14484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x389E"
    },
    "14488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43DE"
    },
    "14493": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14494": {
      "branch": 235,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34C4"
    },
    "14498": {
      "branch": 235,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14508": {
      "op": "SHL"
    },
    "14509": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14513": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "5"
    },
    "14517": {
      "op": "MSTORE"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14522": {
      "op": "DUP3"
    },
    "14523": {
      "op": "ADD"
    },
    "14524": {
      "op": "MSTORE"
    },
    "14525": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "14558": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14560": {
      "op": "DUP3"
    },
    "14561": {
      "op": "ADD"
    },
    "14562": {
      "op": "MSTORE"
    },
    "14563": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "14574": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "14576": {
      "op": "SHL"
    },
    "14577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14579": {
      "op": "DUP3"
    },
    "14580": {
      "op": "ADD"
    },
    "14581": {
      "op": "MSTORE"
    },
    "14582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14584": {
      "op": "ADD"
    },
    "14585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x726"
    },
    "14588": {
      "op": "JUMP"
    },
    "14589": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7731,
        8751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14590": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7808,
        7825
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14592": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7837
      ],
      "op": "PUSH32",
      "path": "17",
      "statement": 160,
      "value": "0x0"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14631": {
      "op": "SHL"
    },
    "14632": {
      "op": "SUB"
    },
    "14633": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "17"
    },
    "14634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7853
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4000AEA0"
    },
    "14639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7854,
        7868
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "14672": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7870,
        7874
      ],
      "op": "DUP5",
      "path": "17"
    },
    "14673": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7887,
        7895
      ],
      "op": "DUP7",
      "path": "17"
    },
    "14674": {
      "offset": [
        6588,
        6589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14676": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "14679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "14681": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "ADD",
      "path": "17"
    },
    "14682": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x396D"
    },
    "14685": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "14686": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "14687": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14688": {
      "op": "SWAP2"
    },
    "14689": {
      "op": "DUP3"
    },
    "14690": {
      "op": "MSTORE"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14693": {
      "op": "DUP3"
    },
    "14694": {
      "op": "ADD"
    },
    "14695": {
      "op": "MSTORE"
    },
    "14696": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14698": {
      "op": "ADD"
    },
    "14699": {
      "op": "SWAP1"
    },
    "14700": {
      "op": "JUMP"
    },
    "14701": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14702": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14704": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "14705": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "14707": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14708": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP4",
      "path": "17"
    },
    "14709": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SUB",
      "path": "17"
    },
    "14710": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SUB",
      "path": "17"
    },
    "14711": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14712": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14713": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14714": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14716": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14717": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14719": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "14720": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP5",
      "path": "17"
    },
    "14721": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "14726": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "AND",
      "path": "17"
    },
    "14727": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "14729": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SHL",
      "path": "17"
    },
    "14730": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14731": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14732": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "14734": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "17"
    },
    "14735": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x399A"
    },
    "14738": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "14739": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "14740": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "14741": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14742": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4458"
    },
    "14745": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMP",
      "path": "17"
    },
    "14746": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14747": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "14749": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14751": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "14752": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "17"
    },
    "14753": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP4",
      "path": "17"
    },
    "14754": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SUB",
      "path": "17"
    },
    "14755": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14756": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14758": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP8",
      "path": "17"
    },
    "14759": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "GAS",
      "path": "17"
    },
    "14760": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "CALL",
      "path": "17"
    },
    "14761": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "14762": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "17"
    },
    "14763": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "14764": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39B9"
    },
    "14767": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "14768": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "14769": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14771": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "17"
    },
    "14772": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "14773": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "14774": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14776": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "REVERT",
      "path": "17"
    },
    "14777": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14778": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "17"
    },
    "14779": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "17"
    },
    "14780": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "17"
    },
    "14781": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "17"
    },
    "14782": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14784": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "14785": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "14786": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "14788": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "NOT",
      "path": "17"
    },
    "14789": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "14791": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP3",
      "path": "17"
    },
    "14792": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "17"
    },
    "14793": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "AND",
      "path": "17"
    },
    "14794": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP3",
      "path": "17"
    },
    "14795": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "17"
    },
    "14796": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "17"
    },
    "14797": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14799": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14800": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "17"
    },
    "14801": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14802": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "17"
    },
    "14803": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14804": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39DD"
    },
    "14807": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "14808": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14809": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43DE"
    },
    "14812": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMP",
      "path": "17"
    },
    "14813": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14814": {
      "op": "POP"
    },
    "14815": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8151,
        8166
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14817": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP4",
      "path": "17"
    },
    "14818": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14819": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14820": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "14822": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "14824": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14825": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14826": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14827": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14829": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP1",
      "path": "17"
    },
    "14830": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP5",
      "path": "17"
    },
    "14831": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "14832": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "14833": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 161
    },
    "14834": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14835": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14836": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14837": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "18"
    },
    "14838": {
      "op": "DUP10"
    },
    "14839": {
      "op": "SWAP1"
    },
    "14840": {
      "op": "MSTORE"
    },
    "14841": {
      "op": "DUP1"
    },
    "14842": {
      "op": "DUP4"
    },
    "14843": {
      "op": "ADD"
    },
    "14844": {
      "op": "DUP7"
    },
    "14845": {
      "op": "SWAP1"
    },
    "14846": {
      "op": "MSTORE"
    },
    "14847": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8227,
        8231
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "14848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14850": {
      "op": "DUP3"
    },
    "14851": {
      "op": "ADD"
    },
    "14852": {
      "op": "MSTORE"
    },
    "14853": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14855": {
      "op": "DUP1"
    },
    "14856": {
      "op": "DUP3"
    },
    "14857": {
      "op": "ADD"
    },
    "14858": {
      "op": "DUP4"
    },
    "14859": {
      "op": "SWAP1"
    },
    "14860": {
      "op": "MSTORE"
    },
    "14861": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14862": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14863": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14864": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14865": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SUB",
      "path": "18"
    },
    "14866": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14867": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14868": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "18"
    },
    "14869": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14870": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14873": {
      "op": "SWAP1"
    },
    "14874": {
      "op": "SWAP2"
    },
    "14875": {
      "op": "ADD"
    },
    "14876": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14877": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14878": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14879": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14880": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14881": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14882": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14883": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "ADD",
      "path": "18"
    },
    "14884": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14885": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14886": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14887": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "14888": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP4",
      "path": "17",
      "statement": 162
    },
    "14889": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "DUP8",
      "path": "17"
    },
    "14890": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14891": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14892": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "14893": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14894": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14895": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3A39"
    },
    "14898": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14899": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8700,
        8701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "14901": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x412D"
    },
    "14904": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8681,
        8701
      ],
      "op": "JUMP",
      "path": "17"
    },
    "14905": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14906": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14908": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "DUP6",
      "path": "17"
    },
    "14909": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "DUP2",
      "path": "17"
    },
    "14910": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14911": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8668
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "14913": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "14915": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "14916": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "14918": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "14919": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "14920": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8701
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "14921": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8714,
        8746
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 163,
      "value": "0x3A79"
    },
    "14924": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8669,
        8677
      ],
      "op": "DUP5",
      "path": "17"
    },
    "14925": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8745
      ],
      "op": "DUP3",
      "path": "17"
    },
    "14926": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 164,
      "value": "0x40"
    },
    "14928": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14929": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14930": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14932": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14933": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14934": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "18"
    },
    "14935": {
      "op": "SWAP5"
    },
    "14936": {
      "op": "SWAP1"
    },
    "14937": {
      "op": "SWAP5"
    },
    "14938": {
      "op": "MSTORE"
    },
    "14939": {
      "op": "DUP1"
    },
    "14940": {
      "op": "DUP3"
    },
    "14941": {
      "op": "ADD"
    },
    "14942": {
      "op": "SWAP3"
    },
    "14943": {
      "op": "SWAP1"
    },
    "14944": {
      "op": "SWAP3"
    },
    "14945": {
      "op": "MSTORE"
    },
    "14946": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14947": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14948": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14949": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14950": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SUB",
      "path": "18"
    },
    "14951": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14952": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "18"
    },
    "14953": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14954": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14957": {
      "op": "SWAP1"
    },
    "14958": {
      "op": "SWAP3"
    },
    "14959": {
      "op": "ADD"
    },
    "14960": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14961": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14962": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14963": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14964": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14965": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "ADD",
      "path": "18"
    },
    "14966": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "14967": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14968": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1416,
        1582
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14969": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8714,
        8746
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "14970": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8707,
        8746
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "14971": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7731,
        8751
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "14972": {
      "op": "POP"
    },
    "14973": {
      "op": "POP"
    },
    "14974": {
      "op": "POP"
    },
    "14975": {
      "op": "POP"
    },
    "14976": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7731,
        8751
      ],
      "op": "JUMP",
      "path": "17"
    },
    "14977": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14978": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "14980": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 165,
      "value": "0x3A79"
    },
    "14983": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14984": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14985": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14987": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "11"
    },
    "14988": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "DUP6",
      "path": "11"
    },
    "14989": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14990": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "14991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 166,
      "value": "0x3ADA"
    },
    "14994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15004": {
      "op": "SHL"
    },
    "15005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "11"
    },
    "15013": {
      "op": "MSTORE"
    },
    "15014": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "15016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15018": {
      "op": "DUP3"
    },
    "15019": {
      "op": "ADD"
    },
    "15020": {
      "op": "MSTORE"
    },
    "15021": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15056": {
      "op": "DUP3"
    },
    "15057": {
      "op": "ADD"
    },
    "15058": {
      "op": "MSTORE"
    },
    "15059": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15061": {
      "op": "ADD"
    },
    "15062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x726"
    },
    "15065": {
      "op": "JUMP"
    },
    "15066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "11"
    },
    "15071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15077": {
      "op": "SHL"
    },
    "15078": {
      "op": "SUB"
    },
    "15079": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "11"
    },
    "15080": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "11"
    },
    "15082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AF6"
    },
    "15088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4488"
    },
    "15093": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "11"
    },
    "15103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "11"
    },
    "15106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "11"
    },
    "15107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "11"
    },
    "15108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "15109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "11"
    },
    "15118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B33"
    },
    "15121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "15129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "11"
    },
    "15130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "15132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "11"
    },
    "15134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "11"
    },
    "15135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "11"
    },
    "15137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "15148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "11"
    },
    "15150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "15151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B38"
    },
    "15154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "11"
    },
    "15166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 167,
      "value": "0x3B48"
    },
    "15169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "11"
    },
    "15172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B53"
    },
    "15175": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "15178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "15179": {
      "op": "POP"
    },
    "15180": {
      "op": "POP"
    },
    "15181": {
      "op": "POP"
    },
    "15182": {
      "op": "POP"
    },
    "15183": {
      "op": "POP"
    },
    "15184": {
      "op": "POP"
    },
    "15185": {
      "op": "POP"
    },
    "15186": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15187": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15188": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15190": {
      "branch": 230,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15191": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15192": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B62"
    },
    "15195": {
      "branch": 230,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15196": {
      "op": "POP"
    },
    "15197": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 168
    },
    "15198": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x366F"
    },
    "15201": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15202": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15205": {
      "branch": 231,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15206": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B72"
    },
    "15209": {
      "branch": 231,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15210": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15211": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15212": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15213": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15214": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "15216": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "11"
    },
    "15217": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "11"
    },
    "15218": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15219": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 169
    },
    "15220": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15222": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15229": {
      "op": "SHL"
    },
    "15230": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15231": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15232": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15234": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "11"
    },
    "15235": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x726"
    },
    "15238": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15239": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15240": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44A4"
    },
    "15243": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15244": {
      "op": "JUMPDEST"
    },
    "15245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15247": {
      "op": "DUP1"
    },
    "15248": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15250": {
      "op": "DUP4"
    },
    "15251": {
      "op": "DUP6"
    },
    "15252": {
      "op": "SUB"
    },
    "15253": {
      "op": "SLT"
    },
    "15254": {
      "op": "ISZERO"
    },
    "15255": {
      "op": "PUSH2",
      "value": "0x3B9F"
    },
    "15258": {
      "op": "JUMPI"
    },
    "15259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15261": {
      "op": "DUP1"
    },
    "15262": {
      "op": "REVERT"
    },
    "15263": {
      "op": "JUMPDEST"
    },
    "15264": {
      "op": "POP"
    },
    "15265": {
      "op": "POP"
    },
    "15266": {
      "op": "DUP1"
    },
    "15267": {
      "op": "CALLDATALOAD"
    },
    "15268": {
      "op": "SWAP3"
    },
    "15269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15271": {
      "op": "SWAP1"
    },
    "15272": {
      "op": "SWAP2"
    },
    "15273": {
      "op": "ADD"
    },
    "15274": {
      "op": "CALLDATALOAD"
    },
    "15275": {
      "op": "SWAP2"
    },
    "15276": {
      "op": "POP"
    },
    "15277": {
      "jump": "o",
      "op": "JUMP"
    },
    "15278": {
      "op": "JUMPDEST"
    },
    "15279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15281": {
      "op": "DUP1"
    },
    "15282": {
      "op": "DUP4"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15285": {
      "op": "DUP5"
    },
    "15286": {
      "op": "ADD"
    },
    "15287": {
      "op": "SLT"
    },
    "15288": {
      "op": "PUSH2",
      "value": "0x3BC0"
    },
    "15291": {
      "op": "JUMPI"
    },
    "15292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15294": {
      "op": "DUP1"
    },
    "15295": {
      "op": "REVERT"
    },
    "15296": {
      "op": "JUMPDEST"
    },
    "15297": {
      "op": "POP"
    },
    "15298": {
      "op": "DUP2"
    },
    "15299": {
      "op": "CALLDATALOAD"
    },
    "15300": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15309": {
      "op": "DUP2"
    },
    "15310": {
      "op": "GT"
    },
    "15311": {
      "op": "ISZERO"
    },
    "15312": {
      "op": "PUSH2",
      "value": "0x3BD8"
    },
    "15315": {
      "op": "JUMPI"
    },
    "15316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15318": {
      "op": "DUP1"
    },
    "15319": {
      "op": "REVERT"
    },
    "15320": {
      "op": "JUMPDEST"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15323": {
      "op": "DUP4"
    },
    "15324": {
      "op": "ADD"
    },
    "15325": {
      "op": "SWAP2"
    },
    "15326": {
      "op": "POP"
    },
    "15327": {
      "op": "DUP4"
    },
    "15328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15330": {
      "op": "DUP3"
    },
    "15331": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15333": {
      "op": "SHL"
    },
    "15334": {
      "op": "DUP6"
    },
    "15335": {
      "op": "ADD"
    },
    "15336": {
      "op": "ADD"
    },
    "15337": {
      "op": "GT"
    },
    "15338": {
      "op": "ISZERO"
    },
    "15339": {
      "op": "PUSH2",
      "value": "0x3BF3"
    },
    "15342": {
      "op": "JUMPI"
    },
    "15343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15345": {
      "op": "DUP1"
    },
    "15346": {
      "op": "REVERT"
    },
    "15347": {
      "op": "JUMPDEST"
    },
    "15348": {
      "op": "SWAP3"
    },
    "15349": {
      "op": "POP"
    },
    "15350": {
      "op": "SWAP3"
    },
    "15351": {
      "op": "SWAP1"
    },
    "15352": {
      "op": "POP"
    },
    "15353": {
      "jump": "o",
      "op": "JUMP"
    },
    "15354": {
      "op": "JUMPDEST"
    },
    "15355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15357": {
      "op": "DUP1"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15362": {
      "op": "DUP5"
    },
    "15363": {
      "op": "DUP7"
    },
    "15364": {
      "op": "SUB"
    },
    "15365": {
      "op": "SLT"
    },
    "15366": {
      "op": "ISZERO"
    },
    "15367": {
      "op": "PUSH2",
      "value": "0x3C0F"
    },
    "15370": {
      "op": "JUMPI"
    },
    "15371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15373": {
      "op": "DUP1"
    },
    "15374": {
      "op": "REVERT"
    },
    "15375": {
      "op": "JUMPDEST"
    },
    "15376": {
      "op": "DUP4"
    },
    "15377": {
      "op": "CALLDATALOAD"
    },
    "15378": {
      "op": "SWAP3"
    },
    "15379": {
      "op": "POP"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15382": {
      "op": "DUP5"
    },
    "15383": {
      "op": "ADD"
    },
    "15384": {
      "op": "CALLDATALOAD"
    },
    "15385": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15394": {
      "op": "DUP2"
    },
    "15395": {
      "op": "GT"
    },
    "15396": {
      "op": "ISZERO"
    },
    "15397": {
      "op": "PUSH2",
      "value": "0x3C2D"
    },
    "15400": {
      "op": "JUMPI"
    },
    "15401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15403": {
      "op": "DUP1"
    },
    "15404": {
      "op": "REVERT"
    },
    "15405": {
      "op": "JUMPDEST"
    },
    "15406": {
      "op": "PUSH2",
      "value": "0x3C39"
    },
    "15409": {
      "op": "DUP7"
    },
    "15410": {
      "op": "DUP3"
    },
    "15411": {
      "op": "DUP8"
    },
    "15412": {
      "op": "ADD"
    },
    "15413": {
      "op": "PUSH2",
      "value": "0x3BAE"
    },
    "15416": {
      "jump": "i",
      "op": "JUMP"
    },
    "15417": {
      "op": "JUMPDEST"
    },
    "15418": {
      "op": "SWAP5"
    },
    "15419": {
      "op": "SWAP8"
    },
    "15420": {
      "op": "SWAP1"
    },
    "15421": {
      "op": "SWAP7"
    },
    "15422": {
      "op": "POP"
    },
    "15423": {
      "op": "SWAP4"
    },
    "15424": {
      "op": "SWAP5"
    },
    "15425": {
      "op": "POP"
    },
    "15426": {
      "op": "POP"
    },
    "15427": {
      "op": "POP"
    },
    "15428": {
      "op": "POP"
    },
    "15429": {
      "jump": "o",
      "op": "JUMP"
    },
    "15430": {
      "op": "JUMPDEST"
    },
    "15431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15435": {
      "op": "DUP3"
    },
    "15436": {
      "op": "DUP5"
    },
    "15437": {
      "op": "SUB"
    },
    "15438": {
      "op": "SLT"
    },
    "15439": {
      "op": "ISZERO"
    },
    "15440": {
      "op": "PUSH2",
      "value": "0x3C58"
    },
    "15443": {
      "op": "JUMPI"
    },
    "15444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15446": {
      "op": "DUP1"
    },
    "15447": {
      "op": "REVERT"
    },
    "15448": {
      "op": "JUMPDEST"
    },
    "15449": {
      "op": "POP"
    },
    "15450": {
      "op": "CALLDATALOAD"
    },
    "15451": {
      "op": "SWAP2"
    },
    "15452": {
      "op": "SWAP1"
    },
    "15453": {
      "op": "POP"
    },
    "15454": {
      "jump": "o",
      "op": "JUMP"
    },
    "15455": {
      "op": "JUMPDEST"
    },
    "15456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15462": {
      "op": "SHL"
    },
    "15463": {
      "op": "SUB"
    },
    "15464": {
      "op": "DUP2"
    },
    "15465": {
      "op": "AND"
    },
    "15466": {
      "op": "DUP2"
    },
    "15467": {
      "op": "EQ"
    },
    "15468": {
      "op": "PUSH2",
      "value": "0x3C74"
    },
    "15471": {
      "op": "JUMPI"
    },
    "15472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15474": {
      "op": "DUP1"
    },
    "15475": {
      "op": "REVERT"
    },
    "15476": {
      "op": "JUMPDEST"
    },
    "15477": {
      "op": "POP"
    },
    "15478": {
      "jump": "o",
      "op": "JUMP"
    },
    "15479": {
      "op": "JUMPDEST"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15482": {
      "op": "DUP1"
    },
    "15483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15485": {
      "op": "DUP1"
    },
    "15486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15490": {
      "op": "DUP7"
    },
    "15491": {
      "op": "DUP9"
    },
    "15492": {
      "op": "SUB"
    },
    "15493": {
      "op": "SLT"
    },
    "15494": {
      "op": "ISZERO"
    },
    "15495": {
      "op": "PUSH2",
      "value": "0x3C8F"
    },
    "15498": {
      "op": "JUMPI"
    },
    "15499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15501": {
      "op": "DUP1"
    },
    "15502": {
      "op": "REVERT"
    },
    "15503": {
      "op": "JUMPDEST"
    },
    "15504": {
      "op": "DUP6"
    },
    "15505": {
      "op": "CALLDATALOAD"
    },
    "15506": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "15515": {
      "op": "DUP1"
    },
    "15516": {
      "op": "DUP3"
    },
    "15517": {
      "op": "GT"
    },
    "15518": {
      "op": "ISZERO"
    },
    "15519": {
      "op": "PUSH2",
      "value": "0x3CA7"
    },
    "15522": {
      "op": "JUMPI"
    },
    "15523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15525": {
      "op": "DUP1"
    },
    "15526": {
      "op": "REVERT"
    },
    "15527": {
      "op": "JUMPDEST"
    },
    "15528": {
      "op": "PUSH2",
      "value": "0x3CB3"
    },
    "15531": {
      "op": "DUP10"
    },
    "15532": {
      "op": "DUP4"
    },
    "15533": {
      "op": "DUP11"
    },
    "15534": {
      "op": "ADD"
    },
    "15535": {
      "op": "PUSH2",
      "value": "0x3BAE"
    },
    "15538": {
      "jump": "i",
      "op": "JUMP"
    },
    "15539": {
      "op": "JUMPDEST"
    },
    "15540": {
      "op": "SWAP1"
    },
    "15541": {
      "op": "SWAP8"
    },
    "15542": {
      "op": "POP"
    },
    "15543": {
      "op": "SWAP6"
    },
    "15544": {
      "op": "POP"
    },
    "15545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15547": {
      "op": "DUP9"
    },
    "15548": {
      "op": "ADD"
    },
    "15549": {
      "op": "CALLDATALOAD"
    },
    "15550": {
      "op": "SWAP2"
    },
    "15551": {
      "op": "POP"
    },
    "15552": {
      "op": "DUP1"
    },
    "15553": {
      "op": "DUP3"
    },
    "15554": {
      "op": "GT"
    },
    "15555": {
      "op": "ISZERO"
    },
    "15556": {
      "op": "PUSH2",
      "value": "0x3CCC"
    },
    "15559": {
      "op": "JUMPI"
    },
    "15560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15562": {
      "op": "DUP1"
    },
    "15563": {
      "op": "REVERT"
    },
    "15564": {
      "op": "JUMPDEST"
    },
    "15565": {
      "op": "POP"
    },
    "15566": {
      "op": "PUSH2",
      "value": "0x3CD9"
    },
    "15569": {
      "op": "DUP9"
    },
    "15570": {
      "op": "DUP3"
    },
    "15571": {
      "op": "DUP10"
    },
    "15572": {
      "op": "ADD"
    },
    "15573": {
      "op": "PUSH2",
      "value": "0x3BAE"
    },
    "15576": {
      "jump": "i",
      "op": "JUMP"
    },
    "15577": {
      "op": "JUMPDEST"
    },
    "15578": {
      "op": "SWAP1"
    },
    "15579": {
      "op": "SWAP5"
    },
    "15580": {
      "op": "POP"
    },
    "15581": {
      "op": "SWAP3"
    },
    "15582": {
      "op": "POP"
    },
    "15583": {
      "op": "POP"
    },
    "15584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15586": {
      "op": "DUP7"
    },
    "15587": {
      "op": "ADD"
    },
    "15588": {
      "op": "CALLDATALOAD"
    },
    "15589": {
      "op": "PUSH2",
      "value": "0x3CED"
    },
    "15592": {
      "op": "DUP2"
    },
    "15593": {
      "op": "PUSH2",
      "value": "0x3C5F"
    },
    "15596": {
      "jump": "i",
      "op": "JUMP"
    },
    "15597": {
      "op": "JUMPDEST"
    },
    "15598": {
      "op": "DUP1"
    },
    "15599": {
      "op": "SWAP2"
    },
    "15600": {
      "op": "POP"
    },
    "15601": {
      "op": "POP"
    },
    "15602": {
      "op": "SWAP3"
    },
    "15603": {
      "op": "SWAP6"
    },
    "15604": {
      "op": "POP"
    },
    "15605": {
      "op": "SWAP3"
    },
    "15606": {
      "op": "SWAP6"
    },
    "15607": {
      "op": "SWAP1"
    },
    "15608": {
      "op": "SWAP4"
    },
    "15609": {
      "op": "POP"
    },
    "15610": {
      "jump": "o",
      "op": "JUMP"
    },
    "15611": {
      "op": "JUMPDEST"
    },
    "15612": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15619": {
      "op": "SHL"
    },
    "15620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15622": {
      "op": "MSTORE"
    },
    "15623": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15627": {
      "op": "MSTORE"
    },
    "15628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15632": {
      "op": "REVERT"
    },
    "15633": {
      "op": "JUMPDEST"
    },
    "15634": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15636": {
      "op": "DUP2"
    },
    "15637": {
      "op": "LT"
    },
    "15638": {
      "op": "PUSH2",
      "value": "0x3D21"
    },
    "15641": {
      "op": "JUMPI"
    },
    "15642": {
      "op": "PUSH2",
      "value": "0x3D21"
    },
    "15645": {
      "op": "PUSH2",
      "value": "0x3CFB"
    },
    "15648": {
      "jump": "i",
      "op": "JUMP"
    },
    "15649": {
      "op": "JUMPDEST"
    },
    "15650": {
      "op": "SWAP1"
    },
    "15651": {
      "op": "MSTORE"
    },
    "15652": {
      "jump": "o",
      "op": "JUMP"
    },
    "15653": {
      "op": "JUMPDEST"
    },
    "15654": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15656": {
      "op": "DUP2"
    },
    "15657": {
      "op": "LT"
    },
    "15658": {
      "op": "PUSH2",
      "value": "0x3D21"
    },
    "15661": {
      "op": "JUMPI"
    },
    "15662": {
      "op": "PUSH2",
      "value": "0x3D21"
    },
    "15665": {
      "op": "PUSH2",
      "value": "0x3CFB"
    },
    "15668": {
      "jump": "i",
      "op": "JUMP"
    },
    "15669": {
      "op": "JUMPDEST"
    },
    "15670": {
      "op": "DUP1"
    },
    "15671": {
      "op": "MLOAD"
    },
    "15672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15678": {
      "op": "SHL"
    },
    "15679": {
      "op": "SUB"
    },
    "15680": {
      "op": "AND"
    },
    "15681": {
      "op": "DUP3"
    },
    "15682": {
      "op": "MSTORE"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15685": {
      "op": "DUP2"
    },
    "15686": {
      "op": "ADD"
    },
    "15687": {
      "op": "MLOAD"
    },
    "15688": {
      "op": "PUSH2",
      "value": "0x3D5C"
    },
    "15691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15693": {
      "op": "DUP5"
    },
    "15694": {
      "op": "ADD"
    },
    "15695": {
      "op": "DUP3"
    },
    "15696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15702": {
      "op": "SHL"
    },
    "15703": {
      "op": "SUB"
    },
    "15704": {
      "op": "AND"
    },
    "15705": {
      "op": "SWAP1"
    },
    "15706": {
      "op": "MSTORE"
    },
    "15707": {
      "op": "JUMP"
    },
    "15708": {
      "op": "JUMPDEST"
    },
    "15709": {
      "op": "POP"
    },
    "15710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15712": {
      "op": "DUP2"
    },
    "15713": {
      "op": "ADD"
    },
    "15714": {
      "op": "MLOAD"
    },
    "15715": {
      "op": "PUSH2",
      "value": "0x3D77"
    },
    "15718": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15720": {
      "op": "DUP5"
    },
    "15721": {
      "op": "ADD"
    },
    "15722": {
      "op": "DUP3"
    },
    "15723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15729": {
      "op": "SHL"
    },
    "15730": {
      "op": "SUB"
    },
    "15731": {
      "op": "AND"
    },
    "15732": {
      "op": "SWAP1"
    },
    "15733": {
      "op": "MSTORE"
    },
    "15734": {
      "op": "JUMP"
    },
    "15735": {
      "op": "JUMPDEST"
    },
    "15736": {
      "op": "POP"
    },
    "15737": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15739": {
      "op": "DUP2"
    },
    "15740": {
      "op": "ADD"
    },
    "15741": {
      "op": "MLOAD"
    },
    "15742": {
      "op": "PUSH2",
      "value": "0x3D8A"
    },
    "15745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15747": {
      "op": "DUP5"
    },
    "15748": {
      "op": "ADD"
    },
    "15749": {
      "op": "DUP3"
    },
    "15750": {
      "op": "PUSH2",
      "value": "0x3D11"
    },
    "15753": {
      "jump": "i",
      "op": "JUMP"
    },
    "15754": {
      "op": "JUMPDEST"
    },
    "15755": {
      "op": "POP"
    },
    "15756": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15758": {
      "op": "DUP2"
    },
    "15759": {
      "op": "ADD"
    },
    "15760": {
      "op": "MLOAD"
    },
    "15761": {
      "op": "PUSH2",
      "value": "0x3D9D"
    },
    "15764": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15766": {
      "op": "DUP5"
    },
    "15767": {
      "op": "ADD"
    },
    "15768": {
      "op": "DUP3"
    },
    "15769": {
      "op": "PUSH2",
      "value": "0x3D25"
    },
    "15772": {
      "jump": "i",
      "op": "JUMP"
    },
    "15773": {
      "op": "JUMPDEST"
    },
    "15774": {
      "op": "POP"
    },
    "15775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15777": {
      "op": "DUP2"
    },
    "15778": {
      "op": "ADD"
    },
    "15779": {
      "op": "MLOAD"
    },
    "15780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15782": {
      "op": "DUP4"
    },
    "15783": {
      "op": "ADD"
    },
    "15784": {
      "op": "MSTORE"
    },
    "15785": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15787": {
      "op": "DUP2"
    },
    "15788": {
      "op": "ADD"
    },
    "15789": {
      "op": "MLOAD"
    },
    "15790": {
      "op": "PUSH2",
      "value": "0x3DC2"
    },
    "15793": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15795": {
      "op": "DUP5"
    },
    "15796": {
      "op": "ADD"
    },
    "15797": {
      "op": "DUP3"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15804": {
      "op": "SHL"
    },
    "15805": {
      "op": "SUB"
    },
    "15806": {
      "op": "AND"
    },
    "15807": {
      "op": "SWAP1"
    },
    "15808": {
      "op": "MSTORE"
    },
    "15809": {
      "op": "JUMP"
    },
    "15810": {
      "op": "JUMPDEST"
    },
    "15811": {
      "op": "POP"
    },
    "15812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15814": {
      "op": "DUP2"
    },
    "15815": {
      "op": "DUP2"
    },
    "15816": {
      "op": "ADD"
    },
    "15817": {
      "op": "MLOAD"
    },
    "15818": {
      "op": "SWAP1"
    },
    "15819": {
      "op": "DUP4"
    },
    "15820": {
      "op": "ADD"
    },
    "15821": {
      "op": "MSTORE"
    },
    "15822": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15825": {
      "op": "DUP1"
    },
    "15826": {
      "op": "DUP3"
    },
    "15827": {
      "op": "ADD"
    },
    "15828": {
      "op": "MLOAD"
    },
    "15829": {
      "op": "SWAP1"
    },
    "15830": {
      "op": "DUP4"
    },
    "15831": {
      "op": "ADD"
    },
    "15832": {
      "op": "MSTORE"
    },
    "15833": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15836": {
      "op": "DUP1"
    },
    "15837": {
      "op": "DUP3"
    },
    "15838": {
      "op": "ADD"
    },
    "15839": {
      "op": "MLOAD"
    },
    "15840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15846": {
      "op": "SHL"
    },
    "15847": {
      "op": "SUB"
    },
    "15848": {
      "op": "SWAP1"
    },
    "15849": {
      "op": "DUP2"
    },
    "15850": {
      "op": "AND"
    },
    "15851": {
      "op": "SWAP2"
    },
    "15852": {
      "op": "DUP5"
    },
    "15853": {
      "op": "ADD"
    },
    "15854": {
      "op": "SWAP2"
    },
    "15855": {
      "op": "SWAP1"
    },
    "15856": {
      "op": "SWAP2"
    },
    "15857": {
      "op": "MSTORE"
    },
    "15858": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15861": {
      "op": "DUP1"
    },
    "15862": {
      "op": "DUP4"
    },
    "15863": {
      "op": "ADD"
    },
    "15864": {
      "op": "MLOAD"
    },
    "15865": {
      "op": "DUP3"
    },
    "15866": {
      "op": "AND"
    },
    "15867": {
      "op": "SWAP1"
    },
    "15868": {
      "op": "DUP5"
    },
    "15869": {
      "op": "ADD"
    },
    "15870": {
      "op": "MSTORE"
    },
    "15871": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15874": {
      "op": "DUP1"
    },
    "15875": {
      "op": "DUP4"
    },
    "15876": {
      "op": "ADD"
    },
    "15877": {
      "op": "MLOAD"
    },
    "15878": {
      "op": "DUP3"
    },
    "15879": {
      "op": "AND"
    },
    "15880": {
      "op": "SWAP1"
    },
    "15881": {
      "op": "DUP5"
    },
    "15882": {
      "op": "ADD"
    },
    "15883": {
      "op": "MSTORE"
    },
    "15884": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15887": {
      "op": "DUP1"
    },
    "15888": {
      "op": "DUP4"
    },
    "15889": {
      "op": "ADD"
    },
    "15890": {
      "op": "MLOAD"
    },
    "15891": {
      "op": "SWAP2"
    },
    "15892": {
      "op": "DUP3"
    },
    "15893": {
      "op": "AND"
    },
    "15894": {
      "op": "DUP2"
    },
    "15895": {
      "op": "DUP6"
    },
    "15896": {
      "op": "ADD"
    },
    "15897": {
      "op": "MSTORE"
    },
    "15898": {
      "op": "SWAP1"
    },
    "15899": {
      "op": "PUSH2",
      "value": "0x345B"
    },
    "15902": {
      "op": "JUMP"
    },
    "15903": {
      "op": "JUMPDEST"
    },
    "15904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15906": {
      "op": "DUP1"
    },
    "15907": {
      "op": "DUP3"
    },
    "15908": {
      "op": "MSTORE"
    },
    "15909": {
      "op": "DUP3"
    },
    "15910": {
      "op": "MLOAD"
    },
    "15911": {
      "op": "DUP3"
    },
    "15912": {
      "op": "DUP3"
    },
    "15913": {
      "op": "ADD"
    },
    "15914": {
      "op": "DUP2"
    },
    "15915": {
      "op": "SWAP1"
    },
    "15916": {
      "op": "MSTORE"
    },
    "15917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15919": {
      "op": "SWAP2"
    },
    "15920": {
      "op": "SWAP1"
    },
    "15921": {
      "op": "DUP5"
    },
    "15922": {
      "op": "DUP3"
    },
    "15923": {
      "op": "ADD"
    },
    "15924": {
      "op": "SWAP1"
    },
    "15925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15927": {
      "op": "DUP6"
    },
    "15928": {
      "op": "ADD"
    },
    "15929": {
      "op": "SWAP1"
    },
    "15930": {
      "op": "DUP5"
    },
    "15931": {
      "op": "JUMPDEST"
    },
    "15932": {
      "op": "DUP2"
    },
    "15933": {
      "op": "DUP2"
    },
    "15934": {
      "op": "LT"
    },
    "15935": {
      "op": "ISZERO"
    },
    "15936": {
      "op": "PUSH2",
      "value": "0x3E62"
    },
    "15939": {
      "op": "JUMPI"
    },
    "15940": {
      "op": "PUSH2",
      "value": "0x3E4E"
    },
    "15943": {
      "op": "DUP4"
    },
    "15944": {
      "op": "DUP6"
    },
    "15945": {
      "op": "MLOAD"
    },
    "15946": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "15949": {
      "jump": "i",
      "op": "JUMP"
    },
    "15950": {
      "op": "JUMPDEST"
    },
    "15951": {
      "op": "SWAP3"
    },
    "15952": {
      "op": "DUP5"
    },
    "15953": {
      "op": "ADD"
    },
    "15954": {
      "op": "SWAP3"
    },
    "15955": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15958": {
      "op": "SWAP3"
    },
    "15959": {
      "op": "SWAP1"
    },
    "15960": {
      "op": "SWAP3"
    },
    "15961": {
      "op": "ADD"
    },
    "15962": {
      "op": "SWAP2"
    },
    "15963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15965": {
      "op": "ADD"
    },
    "15966": {
      "op": "PUSH2",
      "value": "0x3E3B"
    },
    "15969": {
      "op": "JUMP"
    },
    "15970": {
      "op": "JUMPDEST"
    },
    "15971": {
      "op": "POP"
    },
    "15972": {
      "op": "SWAP1"
    },
    "15973": {
      "op": "SWAP7"
    },
    "15974": {
      "op": "SWAP6"
    },
    "15975": {
      "op": "POP"
    },
    "15976": {
      "op": "POP"
    },
    "15977": {
      "op": "POP"
    },
    "15978": {
      "op": "POP"
    },
    "15979": {
      "op": "POP"
    },
    "15980": {
      "op": "POP"
    },
    "15981": {
      "jump": "o",
      "op": "JUMP"
    },
    "15982": {
      "op": "JUMPDEST"
    },
    "15983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15987": {
      "op": "DUP3"
    },
    "15988": {
      "op": "DUP5"
    },
    "15989": {
      "op": "SUB"
    },
    "15990": {
      "op": "SLT"
    },
    "15991": {
      "op": "ISZERO"
    },
    "15992": {
      "op": "PUSH2",
      "value": "0x3E80"
    },
    "15995": {
      "op": "JUMPI"
    },
    "15996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15998": {
      "op": "DUP1"
    },
    "15999": {
      "op": "REVERT"
    },
    "16000": {
      "op": "JUMPDEST"
    },
    "16001": {
      "op": "DUP2"
    },
    "16002": {
      "op": "CALLDATALOAD"
    },
    "16003": {
      "op": "PUSH2",
      "value": "0x2482"
    },
    "16006": {
      "op": "DUP2"
    },
    "16007": {
      "op": "PUSH2",
      "value": "0x3C5F"
    },
    "16010": {
      "jump": "i",
      "op": "JUMP"
    },
    "16011": {
      "op": "JUMPDEST"
    },
    "16012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16014": {
      "op": "DUP2"
    },
    "16015": {
      "op": "ADD"
    },
    "16016": {
      "op": "PUSH2",
      "value": "0x2485"
    },
    "16019": {
      "op": "DUP3"
    },
    "16020": {
      "op": "DUP5"
    },
    "16021": {
      "op": "PUSH2",
      "value": "0x3D11"
    },
    "16024": {
      "jump": "i",
      "op": "JUMP"
    },
    "16025": {
      "op": "JUMPDEST"
    },
    "16026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16032": {
      "op": "SHL"
    },
    "16033": {
      "op": "SUB"
    },
    "16034": {
      "op": "DUP15"
    },
    "16035": {
      "op": "DUP2"
    },
    "16036": {
      "op": "AND"
    },
    "16037": {
      "op": "DUP3"
    },
    "16038": {
      "op": "MSTORE"
    },
    "16039": {
      "op": "DUP14"
    },
    "16040": {
      "op": "DUP2"
    },
    "16041": {
      "op": "AND"
    },
    "16042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16044": {
      "op": "DUP4"
    },
    "16045": {
      "op": "ADD"
    },
    "16046": {
      "op": "MSTORE"
    },
    "16047": {
      "op": "DUP13"
    },
    "16048": {
      "op": "AND"
    },
    "16049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16051": {
      "op": "DUP3"
    },
    "16052": {
      "op": "ADD"
    },
    "16053": {
      "op": "MSTORE"
    },
    "16054": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "16057": {
      "op": "DUP2"
    },
    "16058": {
      "op": "ADD"
    },
    "16059": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "16062": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16064": {
      "op": "DUP4"
    },
    "16065": {
      "op": "ADD"
    },
    "16066": {
      "op": "DUP14"
    },
    "16067": {
      "op": "PUSH2",
      "value": "0x3D11"
    },
    "16070": {
      "jump": "i",
      "op": "JUMP"
    },
    "16071": {
      "op": "JUMPDEST"
    },
    "16072": {
      "op": "PUSH2",
      "value": "0x3ED4"
    },
    "16075": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16077": {
      "op": "DUP4"
    },
    "16078": {
      "op": "ADD"
    },
    "16079": {
      "op": "DUP13"
    },
    "16080": {
      "op": "PUSH2",
      "value": "0x3D25"
    },
    "16083": {
      "jump": "i",
      "op": "JUMP"
    },
    "16084": {
      "op": "JUMPDEST"
    },
    "16085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16087": {
      "op": "DUP3"
    },
    "16088": {
      "op": "ADD"
    },
    "16089": {
      "op": "SWAP10"
    },
    "16090": {
      "op": "SWAP1"
    },
    "16091": {
      "op": "SWAP10"
    },
    "16092": {
      "op": "MSTORE"
    },
    "16093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16099": {
      "op": "SHL"
    },
    "16100": {
      "op": "SUB"
    },
    "16101": {
      "op": "SWAP8"
    },
    "16102": {
      "op": "SWAP1"
    },
    "16103": {
      "op": "SWAP8"
    },
    "16104": {
      "op": "AND"
    },
    "16105": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16107": {
      "op": "DUP9"
    },
    "16108": {
      "op": "ADD"
    },
    "16109": {
      "op": "MSTORE"
    },
    "16110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16112": {
      "op": "DUP8"
    },
    "16113": {
      "op": "ADD"
    },
    "16114": {
      "op": "SWAP6"
    },
    "16115": {
      "op": "SWAP1"
    },
    "16116": {
      "op": "SWAP6"
    },
    "16117": {
      "op": "MSTORE"
    },
    "16118": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16121": {
      "op": "DUP7"
    },
    "16122": {
      "op": "ADD"
    },
    "16123": {
      "op": "SWAP4"
    },
    "16124": {
      "op": "SWAP1"
    },
    "16125": {
      "op": "SWAP4"
    },
    "16126": {
      "op": "MSTORE"
    },
    "16127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16131": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16133": {
      "op": "SHL"
    },
    "16134": {
      "op": "SUB"
    },
    "16135": {
      "op": "SWAP2"
    },
    "16136": {
      "op": "DUP3"
    },
    "16137": {
      "op": "AND"
    },
    "16138": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "16141": {
      "op": "DUP7"
    },
    "16142": {
      "op": "ADD"
    },
    "16143": {
      "op": "MSTORE"
    },
    "16144": {
      "op": "DUP2"
    },
    "16145": {
      "op": "AND"
    },
    "16146": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "16149": {
      "op": "DUP6"
    },
    "16150": {
      "op": "ADD"
    },
    "16151": {
      "op": "MSTORE"
    },
    "16152": {
      "op": "SWAP1"
    },
    "16153": {
      "op": "DUP2"
    },
    "16154": {
      "op": "AND"
    },
    "16155": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "16158": {
      "op": "DUP5"
    },
    "16159": {
      "op": "ADD"
    },
    "16160": {
      "op": "MSTORE"
    },
    "16161": {
      "op": "AND"
    },
    "16162": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "16165": {
      "op": "SWAP1"
    },
    "16166": {
      "op": "SWAP2"
    },
    "16167": {
      "op": "ADD"
    },
    "16168": {
      "op": "MSTORE"
    },
    "16169": {
      "op": "SWAP6"
    },
    "16170": {
      "op": "SWAP5"
    },
    "16171": {
      "op": "POP"
    },
    "16172": {
      "op": "POP"
    },
    "16173": {
      "op": "POP"
    },
    "16174": {
      "op": "POP"
    },
    "16175": {
      "op": "POP"
    },
    "16176": {
      "jump": "o",
      "op": "JUMP"
    },
    "16177": {
      "op": "JUMPDEST"
    },
    "16178": {
      "op": "DUP1"
    },
    "16179": {
      "op": "CALLDATALOAD"
    },
    "16180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16186": {
      "op": "SHL"
    },
    "16187": {
      "op": "SUB"
    },
    "16188": {
      "op": "DUP2"
    },
    "16189": {
      "op": "AND"
    },
    "16190": {
      "op": "DUP2"
    },
    "16191": {
      "op": "EQ"
    },
    "16192": {
      "op": "PUSH2",
      "value": "0x3F48"
    },
    "16195": {
      "op": "JUMPI"
    },
    "16196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16198": {
      "op": "DUP1"
    },
    "16199": {
      "op": "REVERT"
    },
    "16200": {
      "op": "JUMPDEST"
    },
    "16201": {
      "op": "SWAP2"
    },
    "16202": {
      "op": "SWAP1"
    },
    "16203": {
      "op": "POP"
    },
    "16204": {
      "jump": "o",
      "op": "JUMP"
    },
    "16205": {
      "op": "JUMPDEST"
    },
    "16206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16208": {
      "op": "DUP1"
    },
    "16209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16211": {
      "op": "DUP4"
    },
    "16212": {
      "op": "DUP6"
    },
    "16213": {
      "op": "SUB"
    },
    "16214": {
      "op": "SLT"
    },
    "16215": {
      "op": "ISZERO"
    },
    "16216": {
      "op": "PUSH2",
      "value": "0x3F60"
    },
    "16219": {
      "op": "JUMPI"
    },
    "16220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16222": {
      "op": "DUP1"
    },
    "16223": {
      "op": "REVERT"
    },
    "16224": {
      "op": "JUMPDEST"
    },
    "16225": {
      "op": "DUP3"
    },
    "16226": {
      "op": "CALLDATALOAD"
    },
    "16227": {
      "op": "SWAP2"
    },
    "16228": {
      "op": "POP"
    },
    "16229": {
      "op": "PUSH2",
      "value": "0x3F70"
    },
    "16232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16234": {
      "op": "DUP5"
    },
    "16235": {
      "op": "ADD"
    },
    "16236": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16239": {
      "jump": "i",
      "op": "JUMP"
    },
    "16240": {
      "op": "JUMPDEST"
    },
    "16241": {
      "op": "SWAP1"
    },
    "16242": {
      "op": "POP"
    },
    "16243": {
      "op": "SWAP3"
    },
    "16244": {
      "op": "POP"
    },
    "16245": {
      "op": "SWAP3"
    },
    "16246": {
      "op": "SWAP1"
    },
    "16247": {
      "op": "POP"
    },
    "16248": {
      "jump": "o",
      "op": "JUMP"
    },
    "16249": {
      "op": "JUMPDEST"
    },
    "16250": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "16253": {
      "op": "DUP2"
    },
    "16254": {
      "op": "ADD"
    },
    "16255": {
      "op": "PUSH2",
      "value": "0x2485"
    },
    "16258": {
      "op": "DUP3"
    },
    "16259": {
      "op": "DUP5"
    },
    "16260": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "16263": {
      "jump": "i",
      "op": "JUMP"
    },
    "16264": {
      "op": "JUMPDEST"
    },
    "16265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16267": {
      "op": "DUP1"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16270": {
      "op": "DUP1"
    },
    "16271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16273": {
      "op": "DUP1"
    },
    "16274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16276": {
      "op": "DUP1"
    },
    "16277": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16280": {
      "op": "DUP10"
    },
    "16281": {
      "op": "DUP12"
    },
    "16282": {
      "op": "SUB"
    },
    "16283": {
      "op": "SLT"
    },
    "16284": {
      "op": "ISZERO"
    },
    "16285": {
      "op": "PUSH2",
      "value": "0x3FA5"
    },
    "16288": {
      "op": "JUMPI"
    },
    "16289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16291": {
      "op": "DUP1"
    },
    "16292": {
      "op": "REVERT"
    },
    "16293": {
      "op": "JUMPDEST"
    },
    "16294": {
      "op": "DUP9"
    },
    "16295": {
      "op": "CALLDATALOAD"
    },
    "16296": {
      "op": "PUSH2",
      "value": "0x3FB0"
    },
    "16299": {
      "op": "DUP2"
    },
    "16300": {
      "op": "PUSH2",
      "value": "0x3C5F"
    },
    "16303": {
      "jump": "i",
      "op": "JUMP"
    },
    "16304": {
      "op": "JUMPDEST"
    },
    "16305": {
      "op": "SWAP8"
    },
    "16306": {
      "op": "POP"
    },
    "16307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16309": {
      "op": "DUP10"
    },
    "16310": {
      "op": "ADD"
    },
    "16311": {
      "op": "CALLDATALOAD"
    },
    "16312": {
      "op": "SWAP7"
    },
    "16313": {
      "op": "POP"
    },
    "16314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16316": {
      "op": "DUP10"
    },
    "16317": {
      "op": "ADD"
    },
    "16318": {
      "op": "CALLDATALOAD"
    },
    "16319": {
      "op": "PUSH2",
      "value": "0x3FC7"
    },
    "16322": {
      "op": "DUP2"
    },
    "16323": {
      "op": "PUSH2",
      "value": "0x3C5F"
    },
    "16326": {
      "jump": "i",
      "op": "JUMP"
    },
    "16327": {
      "op": "JUMPDEST"
    },
    "16328": {
      "op": "SWAP6"
    },
    "16329": {
      "op": "POP"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16332": {
      "op": "DUP10"
    },
    "16333": {
      "op": "ADD"
    },
    "16334": {
      "op": "CALLDATALOAD"
    },
    "16335": {
      "op": "SWAP5"
    },
    "16336": {
      "op": "POP"
    },
    "16337": {
      "op": "PUSH2",
      "value": "0x3FDC"
    },
    "16340": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16342": {
      "op": "DUP11"
    },
    "16343": {
      "op": "ADD"
    },
    "16344": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16347": {
      "jump": "i",
      "op": "JUMP"
    },
    "16348": {
      "op": "JUMPDEST"
    },
    "16349": {
      "op": "SWAP4"
    },
    "16350": {
      "op": "POP"
    },
    "16351": {
      "op": "PUSH2",
      "value": "0x3FEA"
    },
    "16354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16356": {
      "op": "DUP11"
    },
    "16357": {
      "op": "ADD"
    },
    "16358": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16361": {
      "jump": "i",
      "op": "JUMP"
    },
    "16362": {
      "op": "JUMPDEST"
    },
    "16363": {
      "op": "SWAP3"
    },
    "16364": {
      "op": "POP"
    },
    "16365": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16368": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16370": {
      "op": "DUP11"
    },
    "16371": {
      "op": "ADD"
    },
    "16372": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16375": {
      "jump": "i",
      "op": "JUMP"
    },
    "16376": {
      "op": "JUMPDEST"
    },
    "16377": {
      "op": "SWAP2"
    },
    "16378": {
      "op": "POP"
    },
    "16379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16381": {
      "op": "DUP10"
    },
    "16382": {
      "op": "ADD"
    },
    "16383": {
      "op": "CALLDATALOAD"
    },
    "16384": {
      "op": "SWAP1"
    },
    "16385": {
      "op": "POP"
    },
    "16386": {
      "op": "SWAP3"
    },
    "16387": {
      "op": "SWAP6"
    },
    "16388": {
      "op": "SWAP9"
    },
    "16389": {
      "op": "POP"
    },
    "16390": {
      "op": "SWAP3"
    },
    "16391": {
      "op": "SWAP6"
    },
    "16392": {
      "op": "SWAP9"
    },
    "16393": {
      "op": "SWAP1"
    },
    "16394": {
      "op": "SWAP4"
    },
    "16395": {
      "op": "SWAP7"
    },
    "16396": {
      "op": "POP"
    },
    "16397": {
      "jump": "o",
      "op": "JUMP"
    },
    "16398": {
      "op": "JUMPDEST"
    },
    "16399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16401": {
      "op": "DUP1"
    },
    "16402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16404": {
      "op": "DUP1"
    },
    "16405": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16407": {
      "op": "DUP6"
    },
    "16408": {
      "op": "DUP8"
    },
    "16409": {
      "op": "SUB"
    },
    "16410": {
      "op": "SLT"
    },
    "16411": {
      "op": "ISZERO"
    },
    "16412": {
      "op": "PUSH2",
      "value": "0x4024"
    },
    "16415": {
      "op": "JUMPI"
    },
    "16416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16418": {
      "op": "DUP1"
    },
    "16419": {
      "op": "REVERT"
    },
    "16420": {
      "op": "JUMPDEST"
    },
    "16421": {
      "op": "DUP5"
    },
    "16422": {
      "op": "CALLDATALOAD"
    },
    "16423": {
      "op": "SWAP4"
    },
    "16424": {
      "op": "POP"
    },
    "16425": {
      "op": "PUSH2",
      "value": "0x4034"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16430": {
      "op": "DUP7"
    },
    "16431": {
      "op": "ADD"
    },
    "16432": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16435": {
      "jump": "i",
      "op": "JUMP"
    },
    "16436": {
      "op": "JUMPDEST"
    },
    "16437": {
      "op": "SWAP3"
    },
    "16438": {
      "op": "POP"
    },
    "16439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16441": {
      "op": "DUP6"
    },
    "16442": {
      "op": "ADD"
    },
    "16443": {
      "op": "CALLDATALOAD"
    },
    "16444": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16453": {
      "op": "DUP2"
    },
    "16454": {
      "op": "GT"
    },
    "16455": {
      "op": "ISZERO"
    },
    "16456": {
      "op": "PUSH2",
      "value": "0x4050"
    },
    "16459": {
      "op": "JUMPI"
    },
    "16460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16462": {
      "op": "DUP1"
    },
    "16463": {
      "op": "REVERT"
    },
    "16464": {
      "op": "JUMPDEST"
    },
    "16465": {
      "op": "PUSH2",
      "value": "0x405C"
    },
    "16468": {
      "op": "DUP8"
    },
    "16469": {
      "op": "DUP3"
    },
    "16470": {
      "op": "DUP9"
    },
    "16471": {
      "op": "ADD"
    },
    "16472": {
      "op": "PUSH2",
      "value": "0x3BAE"
    },
    "16475": {
      "jump": "i",
      "op": "JUMP"
    },
    "16476": {
      "op": "JUMPDEST"
    },
    "16477": {
      "op": "SWAP6"
    },
    "16478": {
      "op": "SWAP9"
    },
    "16479": {
      "op": "SWAP5"
    },
    "16480": {
      "op": "SWAP8"
    },
    "16481": {
      "op": "POP"
    },
    "16482": {
      "op": "SWAP6"
    },
    "16483": {
      "op": "POP"
    },
    "16484": {
      "op": "POP"
    },
    "16485": {
      "op": "POP"
    },
    "16486": {
      "op": "POP"
    },
    "16487": {
      "jump": "o",
      "op": "JUMP"
    },
    "16488": {
      "op": "JUMPDEST"
    },
    "16489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16491": {
      "op": "DUP1"
    },
    "16492": {
      "op": "DUP3"
    },
    "16493": {
      "op": "MSTORE"
    },
    "16494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16496": {
      "op": "SWAP1"
    },
    "16497": {
      "op": "DUP3"
    },
    "16498": {
      "op": "ADD"
    },
    "16499": {
      "op": "MSTORE"
    },
    "16500": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "16533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16535": {
      "op": "DUP3"
    },
    "16536": {
      "op": "ADD"
    },
    "16537": {
      "op": "MSTORE"
    },
    "16538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16540": {
      "op": "ADD"
    },
    "16541": {
      "op": "SWAP1"
    },
    "16542": {
      "jump": "o",
      "op": "JUMP"
    },
    "16543": {
      "op": "JUMPDEST"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16546": {
      "op": "DUP1"
    },
    "16547": {
      "op": "DUP3"
    },
    "16548": {
      "op": "MSTORE"
    },
    "16549": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "16551": {
      "op": "SWAP1"
    },
    "16552": {
      "op": "DUP3"
    },
    "16553": {
      "op": "ADD"
    },
    "16554": {
      "op": "MSTORE"
    },
    "16555": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "16572": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "16574": {
      "op": "SHL"
    },
    "16575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16577": {
      "op": "DUP3"
    },
    "16578": {
      "op": "ADD"
    },
    "16579": {
      "op": "MSTORE"
    },
    "16580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16582": {
      "op": "ADD"
    },
    "16583": {
      "op": "SWAP1"
    },
    "16584": {
      "jump": "o",
      "op": "JUMP"
    },
    "16585": {
      "op": "JUMPDEST"
    },
    "16586": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16593": {
      "op": "SHL"
    },
    "16594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16596": {
      "op": "MSTORE"
    },
    "16597": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "16599": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16601": {
      "op": "MSTORE"
    },
    "16602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16606": {
      "op": "REVERT"
    },
    "16607": {
      "op": "JUMPDEST"
    },
    "16608": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16615": {
      "op": "SHL"
    },
    "16616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16618": {
      "op": "MSTORE"
    },
    "16619": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16621": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16623": {
      "op": "MSTORE"
    },
    "16624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16628": {
      "op": "REVERT"
    },
    "16629": {
      "op": "JUMPDEST"
    },
    "16630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16634": {
      "op": "DUP3"
    },
    "16635": {
      "op": "ADD"
    },
    "16636": {
      "op": "PUSH2",
      "value": "0x4107"
    },
    "16639": {
      "op": "JUMPI"
    },
    "16640": {
      "op": "PUSH2",
      "value": "0x4107"
    },
    "16643": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "16646": {
      "jump": "i",
      "op": "JUMP"
    },
    "16647": {
      "op": "JUMPDEST"
    },
    "16648": {
      "op": "POP"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16651": {
      "op": "ADD"
    },
    "16652": {
      "op": "SWAP1"
    },
    "16653": {
      "jump": "o",
      "op": "JUMP"
    },
    "16654": {
      "op": "JUMPDEST"
    },
    "16655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16657": {
      "op": "DUP2"
    },
    "16658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16660": {
      "op": "NOT"
    },
    "16661": {
      "op": "DIV"
    },
    "16662": {
      "op": "DUP4"
    },
    "16663": {
      "op": "GT"
    },
    "16664": {
      "op": "DUP3"
    },
    "16665": {
      "op": "ISZERO"
    },
    "16666": {
      "op": "ISZERO"
    },
    "16667": {
      "op": "AND"
    },
    "16668": {
      "op": "ISZERO"
    },
    "16669": {
      "op": "PUSH2",
      "value": "0x4128"
    },
    "16672": {
      "op": "JUMPI"
    },
    "16673": {
      "op": "PUSH2",
      "value": "0x4128"
    },
    "16676": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "16679": {
      "jump": "i",
      "op": "JUMP"
    },
    "16680": {
      "op": "JUMPDEST"
    },
    "16681": {
      "op": "POP"
    },
    "16682": {
      "op": "MUL"
    },
    "16683": {
      "op": "SWAP1"
    },
    "16684": {
      "jump": "o",
      "op": "JUMP"
    },
    "16685": {
      "op": "JUMPDEST"
    },
    "16686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16688": {
      "op": "DUP3"
    },
    "16689": {
      "op": "NOT"
    },
    "16690": {
      "op": "DUP3"
    },
    "16691": {
      "op": "GT"
    },
    "16692": {
      "op": "ISZERO"
    },
    "16693": {
      "op": "PUSH2",
      "value": "0x4140"
    },
    "16696": {
      "op": "JUMPI"
    },
    "16697": {
      "op": "PUSH2",
      "value": "0x4140"
    },
    "16700": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "16703": {
      "jump": "i",
      "op": "JUMP"
    },
    "16704": {
      "op": "JUMPDEST"
    },
    "16705": {
      "op": "POP"
    },
    "16706": {
      "op": "ADD"
    },
    "16707": {
      "op": "SWAP1"
    },
    "16708": {
      "jump": "o",
      "op": "JUMP"
    },
    "16709": {
      "op": "JUMPDEST"
    },
    "16710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16712": {
      "op": "DUP1"
    },
    "16713": {
      "op": "DUP3"
    },
    "16714": {
      "op": "MSTORE"
    },
    "16715": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "16717": {
      "op": "SWAP1"
    },
    "16718": {
      "op": "DUP3"
    },
    "16719": {
      "op": "ADD"
    },
    "16720": {
      "op": "MSTORE"
    },
    "16721": {
      "op": "PUSH32",
      "value": "0x5468697320726166666C6520646F6573206E6F74206578697374000000000000"
    },
    "16754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16756": {
      "op": "DUP3"
    },
    "16757": {
      "op": "ADD"
    },
    "16758": {
      "op": "MSTORE"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16761": {
      "op": "ADD"
    },
    "16762": {
      "op": "SWAP1"
    },
    "16763": {
      "jump": "o",
      "op": "JUMP"
    },
    "16764": {
      "op": "JUMPDEST"
    },
    "16765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16767": {
      "op": "DUP1"
    },
    "16768": {
      "op": "DUP3"
    },
    "16769": {
      "op": "MSTORE"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "16772": {
      "op": "SWAP1"
    },
    "16773": {
      "op": "DUP3"
    },
    "16774": {
      "op": "ADD"
    },
    "16775": {
      "op": "MSTORE"
    },
    "16776": {
      "op": "PUSH32",
      "value": "0x5468697320726166666C652077617320616C726561647920636F6D706C657465"
    },
    "16809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16811": {
      "op": "DUP3"
    },
    "16812": {
      "op": "ADD"
    },
    "16813": {
      "op": "MSTORE"
    },
    "16814": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "16816": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "16818": {
      "op": "SHL"
    },
    "16819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16821": {
      "op": "DUP3"
    },
    "16822": {
      "op": "ADD"
    },
    "16823": {
      "op": "MSTORE"
    },
    "16824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16826": {
      "op": "ADD"
    },
    "16827": {
      "op": "SWAP1"
    },
    "16828": {
      "jump": "o",
      "op": "JUMP"
    },
    "16829": {
      "op": "JUMPDEST"
    },
    "16830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16836": {
      "op": "SHL"
    },
    "16837": {
      "op": "SUB"
    },
    "16838": {
      "op": "SWAP4"
    },
    "16839": {
      "op": "DUP5"
    },
    "16840": {
      "op": "AND"
    },
    "16841": {
      "op": "DUP2"
    },
    "16842": {
      "op": "MSTORE"
    },
    "16843": {
      "op": "SWAP2"
    },
    "16844": {
      "op": "SWAP1"
    },
    "16845": {
      "op": "SWAP3"
    },
    "16846": {
      "op": "AND"
    },
    "16847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16849": {
      "op": "DUP3"
    },
    "16850": {
      "op": "ADD"
    },
    "16851": {
      "op": "MSTORE"
    },
    "16852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16854": {
      "op": "DUP2"
    },
    "16855": {
      "op": "ADD"
    },
    "16856": {
      "op": "SWAP2"
    },
    "16857": {
      "op": "SWAP1"
    },
    "16858": {
      "op": "SWAP2"
    },
    "16859": {
      "op": "MSTORE"
    },
    "16860": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16862": {
      "op": "ADD"
    },
    "16863": {
      "op": "SWAP1"
    },
    "16864": {
      "jump": "o",
      "op": "JUMP"
    },
    "16865": {
      "op": "JUMPDEST"
    },
    "16866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16872": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16874": {
      "op": "SHL"
    },
    "16875": {
      "op": "SUB"
    },
    "16876": {
      "op": "DUP4"
    },
    "16877": {
      "op": "DUP2"
    },
    "16878": {
      "op": "AND"
    },
    "16879": {
      "op": "SWAP1"
    },
    "16880": {
      "op": "DUP4"
    },
    "16881": {
      "op": "AND"
    },
    "16882": {
      "op": "DUP2"
    },
    "16883": {
      "op": "DUP2"
    },
    "16884": {
      "op": "LT"
    },
    "16885": {
      "op": "ISZERO"
    },
    "16886": {
      "op": "PUSH2",
      "value": "0x4201"
    },
    "16889": {
      "op": "JUMPI"
    },
    "16890": {
      "op": "PUSH2",
      "value": "0x4201"
    },
    "16893": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "16896": {
      "jump": "i",
      "op": "JUMP"
    },
    "16897": {
      "op": "JUMPDEST"
    },
    "16898": {
      "op": "SUB"
    },
    "16899": {
      "op": "SWAP4"
    },
    "16900": {
      "op": "SWAP3"
    },
    "16901": {
      "op": "POP"
    },
    "16902": {
      "op": "POP"
    },
    "16903": {
      "op": "POP"
    },
    "16904": {
      "jump": "o",
      "op": "JUMP"
    },
    "16905": {
      "op": "JUMPDEST"
    },
    "16906": {
      "op": "DUP4"
    },
    "16907": {
      "op": "DUP2"
    },
    "16908": {
      "op": "MSTORE"
    },
    "16909": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16911": {
      "op": "DUP2"
    },
    "16912": {
      "op": "ADD"
    },
    "16913": {
      "op": "PUSH2",
      "value": "0x421D"
    },
    "16916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16918": {
      "op": "DUP4"
    },
    "16919": {
      "op": "ADD"
    },
    "16920": {
      "op": "DUP6"
    },
    "16921": {
      "op": "PUSH2",
      "value": "0x3D11"
    },
    "16924": {
      "jump": "i",
      "op": "JUMP"
    },
    "16925": {
      "op": "JUMPDEST"
    },
    "16926": {
      "op": "PUSH2",
      "value": "0x3A79"
    },
    "16929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16931": {
      "op": "DUP4"
    },
    "16932": {
      "op": "ADD"
    },
    "16933": {
      "op": "DUP5"
    },
    "16934": {
      "op": "PUSH2",
      "value": "0x3D11"
    },
    "16937": {
      "jump": "i",
      "op": "JUMP"
    },
    "16938": {
      "op": "JUMPDEST"
    },
    "16939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16941": {
      "op": "DUP1"
    },
    "16942": {
      "op": "DUP3"
    },
    "16943": {
      "op": "MSTORE"
    },
    "16944": {
      "op": "DUP2"
    },
    "16945": {
      "op": "DUP2"
    },
    "16946": {
      "op": "ADD"
    },
    "16947": {
      "op": "MSTORE"
    },
    "16948": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "16981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16983": {
      "op": "DUP3"
    },
    "16984": {
      "op": "ADD"
    },
    "16985": {
      "op": "MSTORE"
    },
    "16986": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16988": {
      "op": "ADD"
    },
    "16989": {
      "op": "SWAP1"
    },
    "16990": {
      "jump": "o",
      "op": "JUMP"
    },
    "16991": {
      "op": "JUMPDEST"
    },
    "16992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16999": {
      "op": "SHL"
    },
    "17000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17002": {
      "op": "MSTORE"
    },
    "17003": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "17005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17007": {
      "op": "MSTORE"
    },
    "17008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17012": {
      "op": "REVERT"
    },
    "17013": {
      "op": "JUMPDEST"
    },
    "17014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17016": {
      "op": "DUP3"
    },
    "17017": {
      "op": "PUSH2",
      "value": "0x4284"
    },
    "17020": {
      "op": "JUMPI"
    },
    "17021": {
      "op": "PUSH2",
      "value": "0x4284"
    },
    "17024": {
      "op": "PUSH2",
      "value": "0x425F"
    },
    "17027": {
      "jump": "i",
      "op": "JUMP"
    },
    "17028": {
      "op": "JUMPDEST"
    },
    "17029": {
      "op": "POP"
    },
    "17030": {
      "op": "DIV"
    },
    "17031": {
      "op": "SWAP1"
    },
    "17032": {
      "jump": "o",
      "op": "JUMP"
    },
    "17033": {
      "op": "JUMPDEST"
    },
    "17034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17036": {
      "op": "DUP3"
    },
    "17037": {
      "op": "DUP3"
    },
    "17038": {
      "op": "LT"
    },
    "17039": {
      "op": "ISZERO"
    },
    "17040": {
      "op": "PUSH2",
      "value": "0x429B"
    },
    "17043": {
      "op": "JUMPI"
    },
    "17044": {
      "op": "PUSH2",
      "value": "0x429B"
    },
    "17047": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "17050": {
      "jump": "i",
      "op": "JUMP"
    },
    "17051": {
      "op": "JUMPDEST"
    },
    "17052": {
      "op": "POP"
    },
    "17053": {
      "op": "SUB"
    },
    "17054": {
      "op": "SWAP1"
    },
    "17055": {
      "jump": "o",
      "op": "JUMP"
    },
    "17056": {
      "op": "JUMPDEST"
    },
    "17057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17059": {
      "op": "DUP1"
    },
    "17060": {
      "op": "DUP3"
    },
    "17061": {
      "op": "MSTORE"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "17064": {
      "op": "SWAP1"
    },
    "17065": {
      "op": "DUP3"
    },
    "17066": {
      "op": "ADD"
    },
    "17067": {
      "op": "MSTORE"
    },
    "17068": {
      "op": "PUSH32",
      "value": "0x5468697320726166666C652068617320616C726561647920656E646564000000"
    },
    "17101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17103": {
      "op": "DUP3"
    },
    "17104": {
      "op": "ADD"
    },
    "17105": {
      "op": "MSTORE"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17108": {
      "op": "ADD"
    },
    "17109": {
      "op": "SWAP1"
    },
    "17110": {
      "jump": "o",
      "op": "JUMP"
    },
    "17111": {
      "op": "JUMPDEST"
    },
    "17112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17114": {
      "op": "DUP1"
    },
    "17115": {
      "op": "DUP3"
    },
    "17116": {
      "op": "MSTORE"
    },
    "17117": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "17119": {
      "op": "SWAP1"
    },
    "17120": {
      "op": "DUP3"
    },
    "17121": {
      "op": "ADD"
    },
    "17122": {
      "op": "MSTORE"
    },
    "17123": {
      "op": "PUSH32",
      "value": "0x546865726520617265206E6F7420736F206D616E79207469636B657473206176"
    },
    "17156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17158": {
      "op": "DUP3"
    },
    "17159": {
      "op": "ADD"
    },
    "17160": {
      "op": "MSTORE"
    },
    "17161": {
      "op": "PUSH14",
      "value": "0x61696C61626C6520746F20627579"
    },
    "17176": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17178": {
      "op": "SHL"
    },
    "17179": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17181": {
      "op": "DUP3"
    },
    "17182": {
      "op": "ADD"
    },
    "17183": {
      "op": "MSTORE"
    },
    "17184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17186": {
      "op": "ADD"
    },
    "17187": {
      "op": "SWAP1"
    },
    "17188": {
      "jump": "o",
      "op": "JUMP"
    },
    "17189": {
      "op": "JUMPDEST"
    },
    "17190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17196": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17198": {
      "op": "SHL"
    },
    "17199": {
      "op": "SUB"
    },
    "17200": {
      "op": "DUP1"
    },
    "17201": {
      "op": "DUP4"
    },
    "17202": {
      "op": "AND"
    },
    "17203": {
      "op": "DUP2"
    },
    "17204": {
      "op": "DUP6"
    },
    "17205": {
      "op": "AND"
    },
    "17206": {
      "op": "DUP1"
    },
    "17207": {
      "op": "DUP4"
    },
    "17208": {
      "op": "SUB"
    },
    "17209": {
      "op": "DUP3"
    },
    "17210": {
      "op": "GT"
    },
    "17211": {
      "op": "ISZERO"
    },
    "17212": {
      "op": "PUSH2",
      "value": "0x4347"
    },
    "17215": {
      "op": "JUMPI"
    },
    "17216": {
      "op": "PUSH2",
      "value": "0x4347"
    },
    "17219": {
      "op": "PUSH2",
      "value": "0x40DF"
    },
    "17222": {
      "jump": "i",
      "op": "JUMP"
    },
    "17223": {
      "op": "JUMPDEST"
    },
    "17224": {
      "op": "ADD"
    },
    "17225": {
      "op": "SWAP5"
    },
    "17226": {
      "op": "SWAP4"
    },
    "17227": {
      "op": "POP"
    },
    "17228": {
      "op": "POP"
    },
    "17229": {
      "op": "POP"
    },
    "17230": {
      "op": "POP"
    },
    "17231": {
      "jump": "o",
      "op": "JUMP"
    },
    "17232": {
      "op": "JUMPDEST"
    },
    "17233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17235": {
      "op": "DUP1"
    },
    "17236": {
      "op": "DUP3"
    },
    "17237": {
      "op": "MSTORE"
    },
    "17238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17240": {
      "op": "SWAP1"
    },
    "17241": {
      "op": "DUP3"
    },
    "17242": {
      "op": "ADD"
    },
    "17243": {
      "op": "MSTORE"
    },
    "17244": {
      "op": "PUSH32",
      "value": "0x526166666C6573206D7573742068617665206174206C65617374203220746963"
    },
    "17277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17279": {
      "op": "DUP3"
    },
    "17280": {
      "op": "ADD"
    },
    "17281": {
      "op": "MSTORE"
    },
    "17282": {
      "op": "PUSH4",
      "value": "0x6B657473"
    },
    "17287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17289": {
      "op": "SHL"
    },
    "17290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17292": {
      "op": "DUP3"
    },
    "17293": {
      "op": "ADD"
    },
    "17294": {
      "op": "MSTORE"
    },
    "17295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17297": {
      "op": "ADD"
    },
    "17298": {
      "op": "SWAP1"
    },
    "17299": {
      "jump": "o",
      "op": "JUMP"
    },
    "17300": {
      "op": "JUMPDEST"
    },
    "17301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17305": {
      "op": "DUP3"
    },
    "17306": {
      "op": "DUP5"
    },
    "17307": {
      "op": "SUB"
    },
    "17308": {
      "op": "SLT"
    },
    "17309": {
      "op": "ISZERO"
    },
    "17310": {
      "op": "PUSH2",
      "value": "0x43A6"
    },
    "17313": {
      "op": "JUMPI"
    },
    "17314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17316": {
      "op": "DUP1"
    },
    "17317": {
      "op": "REVERT"
    },
    "17318": {
      "op": "JUMPDEST"
    },
    "17319": {
      "op": "DUP2"
    },
    "17320": {
      "op": "MLOAD"
    },
    "17321": {
      "op": "PUSH2",
      "value": "0x2482"
    },
    "17324": {
      "op": "DUP2"
    },
    "17325": {
      "op": "PUSH2",
      "value": "0x3C5F"
    },
    "17328": {
      "jump": "i",
      "op": "JUMP"
    },
    "17329": {
      "op": "JUMPDEST"
    },
    "17330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17332": {
      "op": "DUP3"
    },
    "17333": {
      "op": "PUSH2",
      "value": "0x43C0"
    },
    "17336": {
      "op": "JUMPI"
    },
    "17337": {
      "op": "PUSH2",
      "value": "0x43C0"
    },
    "17340": {
      "op": "PUSH2",
      "value": "0x425F"
    },
    "17343": {
      "jump": "i",
      "op": "JUMP"
    },
    "17344": {
      "op": "JUMPDEST"
    },
    "17345": {
      "op": "POP"
    },
    "17346": {
      "op": "MOD"
    },
    "17347": {
      "op": "SWAP1"
    },
    "17348": {
      "jump": "o",
      "op": "JUMP"
    },
    "17349": {
      "op": "JUMPDEST"
    },
    "17350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17354": {
      "op": "DUP3"
    },
    "17355": {
      "op": "DUP5"
    },
    "17356": {
      "op": "SUB"
    },
    "17357": {
      "op": "SLT"
    },
    "17358": {
      "op": "ISZERO"
    },
    "17359": {
      "op": "PUSH2",
      "value": "0x43D7"
    },
    "17362": {
      "op": "JUMPI"
    },
    "17363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17365": {
      "op": "DUP1"
    },
    "17366": {
      "op": "REVERT"
    },
    "17367": {
      "op": "JUMPDEST"
    },
    "17368": {
      "op": "POP"
    },
    "17369": {
      "op": "MLOAD"
    },
    "17370": {
      "op": "SWAP2"
    },
    "17371": {
      "op": "SWAP1"
    },
    "17372": {
      "op": "POP"
    },
    "17373": {
      "jump": "o",
      "op": "JUMP"
    },
    "17374": {
      "op": "JUMPDEST"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17379": {
      "op": "DUP3"
    },
    "17380": {
      "op": "DUP5"
    },
    "17381": {
      "op": "SUB"
    },
    "17382": {
      "op": "SLT"
    },
    "17383": {
      "op": "ISZERO"
    },
    "17384": {
      "op": "PUSH2",
      "value": "0x43F0"
    },
    "17387": {
      "op": "JUMPI"
    },
    "17388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17390": {
      "op": "DUP1"
    },
    "17391": {
      "op": "REVERT"
    },
    "17392": {
      "op": "JUMPDEST"
    },
    "17393": {
      "op": "DUP2"
    },
    "17394": {
      "op": "MLOAD"
    },
    "17395": {
      "op": "DUP1"
    },
    "17396": {
      "op": "ISZERO"
    },
    "17397": {
      "op": "ISZERO"
    },
    "17398": {
      "op": "DUP2"
    },
    "17399": {
      "op": "EQ"
    },
    "17400": {
      "op": "PUSH2",
      "value": "0x2482"
    },
    "17403": {
      "op": "JUMPI"
    },
    "17404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17406": {
      "op": "DUP1"
    },
    "17407": {
      "op": "REVERT"
    },
    "17408": {
      "op": "JUMPDEST"
    },
    "17409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17411": {
      "op": "JUMPDEST"
    },
    "17412": {
      "op": "DUP4"
    },
    "17413": {
      "op": "DUP2"
    },
    "17414": {
      "op": "LT"
    },
    "17415": {
      "op": "ISZERO"
    },
    "17416": {
      "op": "PUSH2",
      "value": "0x441B"
    },
    "17419": {
      "op": "JUMPI"
    },
    "17420": {
      "op": "DUP2"
    },
    "17421": {
      "op": "DUP2"
    },
    "17422": {
      "op": "ADD"
    },
    "17423": {
      "op": "MLOAD"
    },
    "17424": {
      "op": "DUP4"
    },
    "17425": {
      "op": "DUP3"
    },
    "17426": {
      "op": "ADD"
    },
    "17427": {
      "op": "MSTORE"
    },
    "17428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17430": {
      "op": "ADD"
    },
    "17431": {
      "op": "PUSH2",
      "value": "0x4403"
    },
    "17434": {
      "op": "JUMP"
    },
    "17435": {
      "op": "JUMPDEST"
    },
    "17436": {
      "op": "DUP4"
    },
    "17437": {
      "op": "DUP2"
    },
    "17438": {
      "op": "GT"
    },
    "17439": {
      "op": "ISZERO"
    },
    "17440": {
      "op": "PUSH2",
      "value": "0x345B"
    },
    "17443": {
      "op": "JUMPI"
    },
    "17444": {
      "op": "POP"
    },
    "17445": {
      "op": "POP"
    },
    "17446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17448": {
      "op": "SWAP2"
    },
    "17449": {
      "op": "ADD"
    },
    "17450": {
      "op": "MSTORE"
    },
    "17451": {
      "jump": "o",
      "op": "JUMP"
    },
    "17452": {
      "op": "JUMPDEST"
    },
    "17453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17455": {
      "op": "DUP2"
    },
    "17456": {
      "op": "MLOAD"
    },
    "17457": {
      "op": "DUP1"
    },
    "17458": {
      "op": "DUP5"
    },
    "17459": {
      "op": "MSTORE"
    },
    "17460": {
      "op": "PUSH2",
      "value": "0x4444"
    },
    "17463": {
      "op": "DUP2"
    },
    "17464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17466": {
      "op": "DUP7"
    },
    "17467": {
      "op": "ADD"
    },
    "17468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17470": {
      "op": "DUP7"
    },
    "17471": {
      "op": "ADD"
    },
    "17472": {
      "op": "PUSH2",
      "value": "0x4400"
    },
    "17475": {
      "jump": "i",
      "op": "JUMP"
    },
    "17476": {
      "op": "JUMPDEST"
    },
    "17477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17479": {
      "op": "ADD"
    },
    "17480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17482": {
      "op": "NOT"
    },
    "17483": {
      "op": "AND"
    },
    "17484": {
      "op": "SWAP3"
    },
    "17485": {
      "op": "SWAP1"
    },
    "17486": {
      "op": "SWAP3"
    },
    "17487": {
      "op": "ADD"
    },
    "17488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17490": {
      "op": "ADD"
    },
    "17491": {
      "op": "SWAP3"
    },
    "17492": {
      "op": "SWAP2"
    },
    "17493": {
      "op": "POP"
    },
    "17494": {
      "op": "POP"
    },
    "17495": {
      "jump": "o",
      "op": "JUMP"
    },
    "17496": {
      "op": "JUMPDEST"
    },
    "17497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17499": {
      "op": "DUP1"
    },
    "17500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17502": {
      "op": "SHL"
    },
    "17503": {
      "op": "SUB"
    },
    "17504": {
      "op": "DUP5"
    },
    "17505": {
      "op": "AND"
    },
    "17506": {
      "op": "DUP2"
    },
    "17507": {
      "op": "MSTORE"
    },
    "17508": {
      "op": "DUP3"
    },
    "17509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17511": {
      "op": "DUP3"
    },
    "17512": {
      "op": "ADD"
    },
    "17513": {
      "op": "MSTORE"
    },
    "17514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17518": {
      "op": "DUP3"
    },
    "17519": {
      "op": "ADD"
    },
    "17520": {
      "op": "MSTORE"
    },
    "17521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17523": {
      "op": "PUSH2",
      "value": "0x447F"
    },
    "17526": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17528": {
      "op": "DUP4"
    },
    "17529": {
      "op": "ADD"
    },
    "17530": {
      "op": "DUP5"
    },
    "17531": {
      "op": "PUSH2",
      "value": "0x442C"
    },
    "17534": {
      "jump": "i",
      "op": "JUMP"
    },
    "17535": {
      "op": "JUMPDEST"
    },
    "17536": {
      "op": "SWAP6"
    },
    "17537": {
      "op": "SWAP5"
    },
    "17538": {
      "op": "POP"
    },
    "17539": {
      "op": "POP"
    },
    "17540": {
      "op": "POP"
    },
    "17541": {
      "op": "POP"
    },
    "17542": {
      "op": "POP"
    },
    "17543": {
      "jump": "o",
      "op": "JUMP"
    },
    "17544": {
      "op": "JUMPDEST"
    },
    "17545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17547": {
      "op": "DUP3"
    },
    "17548": {
      "op": "MLOAD"
    },
    "17549": {
      "op": "PUSH2",
      "value": "0x449A"
    },
    "17552": {
      "op": "DUP2"
    },
    "17553": {
      "op": "DUP5"
    },
    "17554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17556": {
      "op": "DUP8"
    },
    "17557": {
      "op": "ADD"
    },
    "17558": {
      "op": "PUSH2",
      "value": "0x4400"
    },
    "17561": {
      "jump": "i",
      "op": "JUMP"
    },
    "17562": {
      "op": "JUMPDEST"
    },
    "17563": {
      "op": "SWAP2"
    },
    "17564": {
      "op": "SWAP1"
    },
    "17565": {
      "op": "SWAP2"
    },
    "17566": {
      "op": "ADD"
    },
    "17567": {
      "op": "SWAP3"
    },
    "17568": {
      "op": "SWAP2"
    },
    "17569": {
      "op": "POP"
    },
    "17570": {
      "op": "POP"
    },
    "17571": {
      "jump": "o",
      "op": "JUMP"
    },
    "17572": {
      "op": "JUMPDEST"
    },
    "17573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17575": {
      "op": "DUP2"
    },
    "17576": {
      "op": "MSTORE"
    },
    "17577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17579": {
      "op": "PUSH2",
      "value": "0x366F"
    },
    "17582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17584": {
      "op": "DUP4"
    },
    "17585": {
      "op": "ADD"
    },
    "17586": {
      "op": "DUP5"
    },
    "17587": {
      "op": "PUSH2",
      "value": "0x442C"
    },
    "17590": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "1688010cf5252c85316435a322602c5db6b86029",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport {IWETH} from \"./interfaces/IWETH.sol\";\n\ncontract Raffle is Ownable, Pausable, ReentrancyGuard, VRFConsumerBase {\n    using SafeERC20 for IERC20;\n\n    enum RaffleState {\n        IN_PROGRESS,\n        FINISHED,\n        COMPLETED,\n        REFUNDED,\n        CLAIMED\n    }\n\n    enum RaffleType {\n        ERC721,\n        ERC20\n    }\n\n    struct RaffleData {\n        address assetContract;\n        address raffleOwner;\n        address raffleWinner;\n        RaffleState raffleState;\n        RaffleType raffleType;\n        uint256 nftIdOrAmount;\n        address currency;\n        uint256 pricePerTicket;\n        bytes32 MerkleRoot;\n        uint128 endTimestamp;\n        uint128 numberOfTickets;\n        uint128 ticketsSold;\n        uint128 minimumTicketsSold;\n    }\n\n    // ERC20 address => isWhitelisted?\n    mapping(address => bool) public whitelistedCurrencies;\n    // raffleID => RaffleData\n    mapping(uint256 => RaffleData) public raffles;\n    // raffleID => ticketId => ticketOwner\n    mapping(uint256 => mapping(uint256 => address)) public raffleTickets;\n    // ChainlinkRequest => raffleID\n    mapping(bytes32 => uint256) private chainlinkRequestToRaffleID;\n\n    // Number of raffles created so far\n    uint256 public raffleCounter;\n\n    // Chainlink related state variables\n    bytes32 public immutable linkKeyHash;\n    uint256 public immutable linkFee;\n\n    IWETH constant WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n    uint256 constant REFUND_COLLATERAL_FEE = 0.1 ether;\n\n    // 2% Fee\n    uint256 public FEE_NUMERATOR = 200;\n    uint256 public FEE_DENOMINATOR = 10000;\n    /**\n        Token address => Amount that owners of the contract can claim as fee rewards\n        address(0) = Ether\n     */\n    mapping(address => uint256) public totalAmountClaimable;\n\n    event NewERC721RaffleCreated(uint256 raffleId, address nftCollection, uint256 nftId);\n    event NewERC20RaffleCreated(uint256 raffleId, address tokenAddress, uint256 amount);\n    event ERC721RaffleCancelled(uint256 raffleId, address raffleOwner, address nftContract, uint256 nftId);\n    event ERC20RaffleCancelled(uint256 raffleId, address raffleOwner, address assetContract, uint256 amount);\n    event ERC20CurrencyAdded(address currency);\n    event ERC20CurrencyRemoved(address currency);\n    event RaffleStateChanged(uint256 raffleId, RaffleState oldRaffleState, RaffleState newRaffleState);\n    event ChainlinkRequest(bytes32 requestId);\n\n    constructor(bytes32 _linkKeyHash, uint256 _linkFee, address _vrfCoordinator, address _vrfLinkTokenAddress) VRFConsumerBase(_vrfCoordinator, _vrfLinkTokenAddress) {\n        linkKeyHash = _linkKeyHash;\n        linkFee = _linkFee;\n        // Ether is always whitelisted, Ether/Native asset = address(0)\n        whitelistedCurrencies[address(0)] = true;\n    }\n\n    /**\n     * @notice  Allows users to create a raffle of an ERC721 asset\n     * @param   _nftCollection Address of the NFT to raffle\n     * @param   _nftId NFTid of the _nftCollection\n     * @param   _currency Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether\n     * @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n     * @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n     * @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\n        reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\n        for the gas fees. If this amount is reached, normal flow will be followed.\n     * @param   _durationInSeconds Duration in seconds of the raffle\n     * @param   _merkleRoot Used so only whitelisted users can buy raffle tickets\n     */\n    function createERC721Raffle(address _nftCollection, uint256 _nftId, address _currency, uint256 _pricePerTicket, uint128 _numberOfTickets, uint128 _minimumTicketsSold, uint128 _durationInSeconds, bytes32 _merkleRoot) external payable whenNotPaused {\n        require(msg.sender == IERC721(_nftCollection).ownerOf(_nftId), \"You do not own this NFT\");\n        require(whitelistedCurrencies[_currency], \"This currency is not whitelisted\");\n        require(_numberOfTickets > 1, \"Raffles must have at least 2 tickets\");\n        require(_durationInSeconds >= 3600, \"Minimum duration is 1 hour\");\n\n        // _minimumTicketsSold * REFUND_COLLATERAL_FEE => Ether that will be paid to users in case the Raffle is cancelled\n        require(msg.value == (_minimumTicketsSold * REFUND_COLLATERAL_FEE), \"Incorrect collateral sent\");\n\n        // Transfering the NFT into our contract\n        IERC721(_nftCollection).transferFrom(msg.sender, address(this), _nftId);\n\n        RaffleData storage raffleData = raffles[raffleCounter++];\n        raffleData.assetContract = _nftCollection;\n        raffleData.raffleOwner = msg.sender;\n        raffleData.raffleState = RaffleState.IN_PROGRESS;\n        raffleData.raffleType = RaffleType.ERC721;\n        raffleData.nftIdOrAmount = _nftId;\n        raffleData.currency = _currency;\n        raffleData.pricePerTicket = _pricePerTicket;\n        raffleData.MerkleRoot = _merkleRoot;\n        raffleData.endTimestamp = uint128(block.timestamp) + _durationInSeconds;\n        raffleData.numberOfTickets = _numberOfTickets;\n        raffleData.minimumTicketsSold = _minimumTicketsSold;\n\n        emit NewERC721RaffleCreated(raffleCounter, _nftCollection, _nftId);\n    }\n\n    /**\n        * @notice  Allows users to create a raffle of an ERC20 asset\n        * @param   _tokenAddress Address of the token amount to raffle\n        * @param   _amount Quantity of tokens to be raffled\n        * @param   _currency Tickets will be bought with this ERC20 token. address(0) should be put here if the currency will be Ether\n        * @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n        * @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n        * @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\n        reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\n        for the gas fees. If this amount is reached, normal flow will be followed\n        * @param   _durationInSeconds Duration in seconds of the raffle\n        * @param   _merkleRoot Used so only whitelisted users can buy raffle tickets\n    */\n    function createERC20Raffle(address _tokenAddress, uint256 _amount, address _currency, uint256 _pricePerTicket, uint128 _numberOfTickets, uint128 _minimumTicketsSold, uint128 _durationInSeconds, bytes32 _merkleRoot) external payable whenNotPaused {\n        require(whitelistedCurrencies[_tokenAddress], \"You cannot raffle this type of tokens yet\");\n        require(whitelistedCurrencies[_currency], \"This currency is not whitelisted\");\n        require(_numberOfTickets > 1, \"Raffles must have at least 2 tickets\");\n        require(_durationInSeconds >= 3600, \"Minimum duration is one hour\");\n    \n        if (_tokenAddress == address(0)) {\n            require(msg.value == _amount + (_minimumTicketsSold * REFUND_COLLATERAL_FEE), \"The Ether sent is not correct\");\n        } else {\n            // _minimumTicketsSold * REFUND_COLLATERAL_FEE => Ether that will be paid to users in case the Raffle is cancelled\n            require(msg.value == (_minimumTicketsSold * REFUND_COLLATERAL_FEE), \"Incorrect collateral sent\");\n            // Transfer tokens to the contract\n            IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount);\n        }\n\n        RaffleData storage raffleData = raffles[raffleCounter++];\n        raffleData.assetContract = _tokenAddress;\n        raffleData.raffleOwner = msg.sender;\n        raffleData.raffleState = RaffleState.IN_PROGRESS;\n        raffleData.raffleType = RaffleType.ERC20;\n        raffleData.nftIdOrAmount = _amount;\n        raffleData.currency = _currency;\n        raffleData.pricePerTicket = _pricePerTicket;\n        raffleData.MerkleRoot = _merkleRoot;\n        raffleData.endTimestamp = uint128(block.timestamp) + _durationInSeconds;\n        raffleData.numberOfTickets = _numberOfTickets; \n        raffleData.minimumTicketsSold = _minimumTicketsSold;\n\n        emit NewERC20RaffleCreated(raffleCounter, _tokenAddress, _amount);\n    }\n\n    /**\n        * @notice  Allows users to cancel a raffle if NO tickets were sold yet\n        * @param   _raffleId The ID of the raffle\n    */\n    function cancelRaffle(uint256 _raffleId) external nonReentrant whenNotPaused{\n        require(_raffleId <= raffleCounter, \"Raffle does not exist\");\n        RaffleData memory raffleData = raffles[_raffleId];\n        require(msg.sender == raffleData.raffleOwner, \"You cannot cancel someone else's raffle\");\n        require(raffleData.raffleState == RaffleState.IN_PROGRESS, \"This raffle has already ended\");\n        require(raffleData.ticketsSold < 1, \"Tickets have already been bought\");\n\n        // Delete the object from storage\n        delete raffles[_raffleId];\n        // Set is as CLAIMED\n        raffles[_raffleId].raffleState = RaffleState.REFUNDED;\n        emit RaffleStateChanged(_raffleId, RaffleState.IN_PROGRESS, RaffleState.REFUNDED);\n\n        // Check which type of asset \n        if (raffleData.raffleType == RaffleType.ERC721) {\n            IERC721(raffleData.assetContract).transferFrom(address(this), raffleData.raffleOwner, raffleData.nftIdOrAmount);\n            emit ERC721RaffleCancelled(_raffleId, raffleData.raffleOwner, raffleData.assetContract, raffleData.nftIdOrAmount);\n        } \n        if (raffleData.raffleType == RaffleType.ERC20) {\n            uint256 amountToRefund = raffleData.nftIdOrAmount;\n            if (raffleData.assetContract == address(0)) { // This means we are dealing with a raffle of native Ether\n                _handleEtherTransfer(msg.sender, amountToRefund);\n            } \n            else {\n                IERC20(raffleData.assetContract).safeTransferFrom(address(this), raffleData.raffleOwner, amountToRefund);\n            }\n            emit ERC20RaffleCancelled(_raffleId, raffleData.raffleOwner, raffleData.assetContract, amountToRefund);\n        }\n\n        /**\n            Giving the Raffle owner back only the 90% of the initial REFUND_COLLATERAL_FEE\n            10% is taken as a fee\n        */ \n        uint256 totalCollateral = REFUND_COLLATERAL_FEE * raffleData.minimumTicketsSold;\n        uint256 collateralRefunded =  totalCollateral * 9000 / 10000;\n        totalAmountClaimable[address(0)] += totalCollateral - collateralRefunded;\n        _handleEtherTransfer(msg.sender, collateralRefunded);\n    }\n\n    /**\n     * @notice  Allows users to buy tickets for a Raffle\n     * @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n     * @param   _numberOfTickets The number of tickets an user wants to buy \n     */\n    function buyRaffleTicket(uint256 _raffleId, uint128 _numberOfTickets) external payable whenNotPaused {\n        RaffleData memory raffleData = raffles[_raffleId];\n        require(raffleData.raffleOwner != address(0), \"This raffle does not exist\");\n        require(raffleData.MerkleRoot == bytes32(0), \"Whitelisted raffle. Use buyWhitelistedRaffleTicket() instead\");\n        require(block.timestamp < raffleData.endTimestamp, \"This raffle has already ended\");\n        require(raffleData.raffleState == RaffleState.IN_PROGRESS, \"This raffle has already ended\");\n        require(raffleData.ticketsSold < raffleData.numberOfTickets, \"Tickets sold out\");\n        require(_numberOfTickets <= (raffleData.numberOfTickets - raffleData.ticketsSold), \"There are not so many tickets available to buy\");\n        // Handle the payment\n        if (raffleData.currency == address(0)){\n            require (msg.value >= (_numberOfTickets * raffleData.pricePerTicket), \"Not enough Ether sent as payment\");\n        }\n        else {\n            IERC20(raffleData.currency).safeTransferFrom(msg.sender, address(this), _numberOfTickets * raffleData.pricePerTicket);\n        }\n        // Assign the tickets to the buyer\n        for (uint256 i; i < _numberOfTickets; ++i){\n            raffleTickets[_raffleId][raffleData.ticketsSold + i] = msg.sender;\n        }\n        raffles[_raffleId].ticketsSold += _numberOfTickets;  \n    }\n\n    /**\n     * @notice  Allows users to buy tickets for a whitelisted Raffle\n     * @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n     * @param   _numberOfTickets The number of tickets an user wants to buy \n     * @param   _merkleProof MerkleProof used to verify user is aprt of the whitelist \n     */\n    function buyWhitelistedRaffleTicket(uint256 _raffleId, uint128 _numberOfTickets, bytes32[] calldata _merkleProof) external payable whenNotPaused {\n        RaffleData memory raffleData = raffles[_raffleId];\n        require(raffleData.raffleOwner != address(0), \"This raffle does not exist\");\n        require(raffleData.MerkleRoot != bytes32(0), \"Non-whitelisted raffle. Use buyRaffleTicket() instead\");\n        require(block.timestamp < raffleData.endTimestamp, \"This raffle has already ended\");\n        require(raffleData.raffleState == RaffleState.IN_PROGRESS, \"This raffle has already ended\");\n        require(raffleData.ticketsSold < raffleData.numberOfTickets, \"Tickets sold out\");\n        require(_numberOfTickets <= (raffleData.numberOfTickets - raffleData.ticketsSold), \"There are not so many tickets available to buy\");\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\n        require(MerkleProof.verify(_merkleProof, raffleData.MerkleRoot, leaf), \"User not whitelisted\");\n        // Handle the payment\n        if (raffleData.currency == address(0)){\n            require (msg.value >= (_numberOfTickets * raffleData.pricePerTicket), \"Not enough Ether sent as payment\");\n        }\n        else {\n            IERC20(raffleData.currency).safeTransferFrom(msg.sender, address(this), _numberOfTickets * raffleData.pricePerTicket);\n        }\n        // Assign the tickets to the buyer\n        for (uint256 i; i < _numberOfTickets; ++i){\n            raffleTickets[_raffleId][raffleData.ticketsSold + i] = msg.sender;\n        }\n        raffles[_raffleId].ticketsSold += _numberOfTickets; \n    }\n\n    /**\n     * @notice  Allows users to complete a Raffle. The winner of the raffle will receive the asset.\n                The owner of the raffle will receive his payment\n                Cron job will call daily all the pending raffles. Users can also call it\n     * @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n     */\n    function completeRaffle(uint256 _raffleId) external whenNotPaused {\n        RaffleData memory raffleData = raffles[_raffleId];\n        require(raffleData.raffleOwner != address(0), \"This raffle does not exist\");\n        require(raffleData.raffleState == RaffleState.IN_PROGRESS, \"This raffle was already completed\");\n        if (raffleData.ticketsSold != raffleData.numberOfTickets){\n            require(block.timestamp >= raffleData.endTimestamp, \"Raffle is not completed\");\n        }\n        // In this case we must refund all the ticket buyers\n        if (raffleData.ticketsSold < raffleData.minimumTicketsSold){\n            // Send the asset back to the raffleOwner, no fees\n            if (raffleData.raffleType == RaffleType.ERC721){\n                IERC721(raffleData.assetContract).transferFrom(address(this), raffleData.raffleOwner, raffleData.nftIdOrAmount);\n            }\n            if (raffleData.raffleType == RaffleType.ERC20){\n                IERC20(raffleData.assetContract).safeTransferFrom(address(this), raffleData.raffleOwner, raffleData.nftIdOrAmount);\n            }\n            // Taking as a fee REFUND_COLLATERAL_FEE * number_of_tickets_left\n            totalAmountClaimable[address(0)] = (raffleData.minimumTicketsSold - raffleData.ticketsSold) * REFUND_COLLATERAL_FEE;\n            raffles[_raffleId].raffleState = RaffleState.REFUNDED;\n            emit RaffleStateChanged(_raffleId, RaffleState.IN_PROGRESS, RaffleState.REFUNDED);\n\n        }\n        // Normal flow\n        else {\n            // This will mark the raffle State as FINISHED. Can only be called once.\n            bytes32 request = _requestRandomness(_raffleId);\n            emit ChainlinkRequest(request);\n            chainlinkRequestToRaffleID[request] = _raffleId;\n        }\n    }\n\n    /**\n     * @notice  Allows users to claim the raffle. Owner of the raffle will receive the payment and the winner his asset\n     * @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n     */\n    function claimRaffle(uint256 _raffleId) external nonReentrant whenNotPaused {\n        RaffleData storage raffleData = raffles[_raffleId];\n        require(raffleData.raffleOwner != address(0), \"This raffle does not exist\");\n        require(raffleData.raffleState == RaffleState.COMPLETED, \"This raffle was already completed\");\n\n        raffleData.raffleState = RaffleState.CLAIMED;\n        emit RaffleStateChanged(_raffleId, RaffleState.COMPLETED, RaffleState.CLAIMED);\n\n        address raffleOwner = raffleData.raffleOwner;\n        address winner = raffleData.raffleWinner;\n\n        // Sending the asset to the winner\n        if (raffleData.raffleType == RaffleType.ERC721){\n            IERC721(raffleData.assetContract).transferFrom(address(this), winner, raffleData.nftIdOrAmount);\n        }\n        if (raffleData.raffleType == RaffleType.ERC20){\n            // Ether won in the Raffle \n            if (raffleData.assetContract==address(0)){\n                _handleEtherTransfer(winner, raffleData.nftIdOrAmount);\n            }\n            else{\n                IERC20(raffleData.assetContract).safeTransferFrom(address(this), winner, raffleData.nftIdOrAmount);\n            }\n        }\n\n        uint256 totalAmountEarned = raffleData.ticketsSold * raffleData.pricePerTicket;\n        uint256 fee = (totalAmountEarned * FEE_NUMERATOR) / FEE_DENOMINATOR;\n        totalAmountEarned -= fee;\n        address raffleCurrency = raffleData.currency;\n        totalAmountClaimable[raffleCurrency] += fee;\n\n        // Payments to the raffle owner\n        if(raffleCurrency == address(0)){\n            // Payment in Ether\n            _handleEtherTransfer(raffleOwner, totalAmountEarned);\n        }\n        else{\n            // Payment with ERC20\n            IERC20(raffleCurrency).safeTransfer(raffleOwner, totalAmountEarned);\n        }\n        // Giving back REFUND_COLLATERAL_FEE\n        _handleEtherTransfer(raffleOwner, REFUND_COLLATERAL_FEE * raffleData.minimumTicketsSold);\n    }\n\n    /**\n     * @notice  Allows users to claim a cancelled raffle where they will receive their initially payment plus 0.1 Ether\n     * @param   _raffleId The ID of the raffle the user wants to buy a ticket for\n     * @param   ticketIds Array of ticketIds to claim\n     */\n    function claimCancelledRaffle(uint256 _raffleId, uint256[] calldata ticketIds) external nonReentrant whenNotPaused{\n        RaffleData memory raffleData = raffles[_raffleId];\n        require(raffleData.raffleState == RaffleState.REFUNDED, \"Raffle is not in REFUNDED state\");\n        uint256 len = ticketIds.length;\n        for(uint i; i < len; ++i){\n            require(raffleTickets[_raffleId][ticketIds[i]] == msg.sender, \"You do not own this ticket Id\");\n            raffleTickets[_raffleId][ticketIds[i]] = address(0);\n        }\n        uint256 totalRefund = (len * raffleData.pricePerTicket) + (len * REFUND_COLLATERAL_FEE);\n        if (raffleData.currency == address(0)){\n            _handleEtherTransfer(msg.sender, totalRefund);\n        }\n        else{\n            IERC20(raffleData.currency).safeTransfer(msg.sender, totalRefund);\n        }\n    }\n\n    /** ############################################################################################\n     *              INTERNAL/PRIVATE FUNCTIONS\n     *  ############################################################################################\n     */\n\n    function _requestRandomness(uint256 _raffleId) internal returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= linkFee, \"Not enough LINK\");\n        RaffleData storage raffleData = raffles[_raffleId];\n        raffleData.raffleState = RaffleState.FINISHED;\n        emit RaffleStateChanged(_raffleId, RaffleState.IN_PROGRESS, RaffleState.FINISHED);\n        requestId = requestRandomness(linkKeyHash, linkFee);\n    }\n\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        uint256 raffleId = chainlinkRequestToRaffleID[requestId];\n        RaffleData storage raffleData = raffles[raffleId];\n        raffleData.raffleState = RaffleState.COMPLETED;\n        emit RaffleStateChanged(raffleId, RaffleState.FINISHED, RaffleState.COMPLETED);\n        // Picking up the winner\n        uint256 winningIndex = randomness % raffleData.ticketsSold;\n        raffleData.raffleWinner = raffleTickets[raffleId][winningIndex];\n    }\n\n    //TODO: REMOVE AFTER TESTING\n    function fulfillRandomnessTest(bytes32 requestId, uint256 randomness) external {\n        fulfillRandomness(requestId, randomness);\n    }\n\n    /**\n     *  Function to handle Ether transfers\n     */\n    function _handleEtherTransfer(address _dest, uint256 _amount) internal {\n        // Handle ETH payment\n        require(address(this).balance >= _amount, \"_handleEtherTransfer insolvent\");\n        uint256 gas =  gasleft();\n        (bool success, ) = _dest.call{value: _amount, gas: gas}(\"\");\n        // If the ETH transfer fails (sigh), wrap the ETH and try send it as WETH.\n        if (!success) {\n            WETH.deposit{value: _amount}();\n            IERC20(address(WETH)).safeTransfer(_dest, _amount);\n        }\n    }\n\n    /** ############################################################################################\n     *              ONLYOWNER FUNCTIONS\n     *  ############################################################################################\n     */\n\n    /**\n     * @notice  Used to pause/unpause the smart contract by the owner\n     */\n    function togglePause() external onlyOwner {\n        if (!paused()) _pause();\n        else _unpause();\n    }\n\n    /**\n     * @notice  Used to whitelist a new ERC20 token to be used as a payment currency\n     */\n    function whitelistCurrency(address _ERC20TokenAddress) external onlyOwner {\n        require(!whitelistedCurrencies[_ERC20TokenAddress], \"Token is already whitelisted\");\n        whitelistedCurrencies[_ERC20TokenAddress] = true;\n        emit ERC20CurrencyAdded(_ERC20TokenAddress);\n    }\n\n    /**\n     * @notice  Used to blacklist a ERC20 token so it can not be used any longer as a payment currency\n     */\n    function blacklistCurrency(address _ERC20TokenAddress) external onlyOwner {\n        require(whitelistedCurrencies[_ERC20TokenAddress], \"Token is not whitelisted\");\n        whitelistedCurrencies[_ERC20TokenAddress] = false;\n        emit ERC20CurrencyRemoved(_ERC20TokenAddress);\n    }\n\n    /**\n     * @notice  Used by the contract owners to claim the fees accrued\n     * @param   _tokenAddress List of tokens to withdraw the fees\n     * @param   _amounts List of amounts that will be withdrawn\n     * @param   _receiver Address that will receive the fees\n     */\n    function withdrawFees(address[] calldata _tokenAddress, uint256[] calldata _amounts, address _receiver) external onlyOwner {\n        uint256 len = _tokenAddress.length;\n        require(len == _amounts.length, \"Array lengths do not match\");\n        uint256 amount;\n        address tokenAddress;\n        for (uint256 i; i < len; ++i) {\n            tokenAddress = _tokenAddress[i];\n            amount = _amounts[i];\n            require(amount <= totalAmountClaimable[tokenAddress], \"Amount too high\");\n            if(tokenAddress == address(0)){\n                _handleEtherTransfer(_receiver, amount);\n            }\n            else{\n                IERC20(tokenAddress).safeTransfer(_receiver, amount);\n            }\n            // No overflow here as => require(amount <= totalAmountClaimable[tokenAddress])\n            unchecked {\n                totalAmountClaimable[tokenAddress] -= amount;\n            }\n        }\n    }\n\n    /** ############################################################################################\n     *                 VIEW FUNCTIONS\n     *  ############################################################################################\n     */\n\n    // For frontend \n    function getRaffleDetails(uint256 _raffleId) external view returns(RaffleData memory) {\n        require(_raffleId <= raffleCounter, \"The raffle ID does not exist\");\n        return(raffles[_raffleId]);\n    }\n\n    function getRaffleState(uint256 _raffleId) external view returns(RaffleState) {\n        require(_raffleId <= raffleCounter, \"The raffle ID does not exist\");\n        return(raffles[_raffleId].raffleState);\n    }\n \n    function getRaffleTicketOwner(uint256 _raffleId, uint256 _ticketId) external view returns(address) {\n        address ticketOwner = raffleTickets[_raffleId][_ticketId];\n        require(ticketOwner != address(0), \"Ticket does not exist\");\n        return ticketOwner;\n    }\n\n    function isCurrencyWhitelisted(address _erc20Token) external view returns(bool) {\n        return whitelistedCurrencies[_erc20Token];\n    }\n\n    // Get all active raffles for the frontend\n    // TODO: Block Gas Limit? This should be remade\n    function getActiveRaffles() external view returns(RaffleData[] memory) {\n        RaffleData[] memory activeRaffles;\n        uint256 counter=0;\n        for (uint256 i; i < raffleCounter; ++i) {\n            if (raffles[i].raffleState == RaffleState.IN_PROGRESS) {\n                activeRaffles[counter] = raffles[i];\n                ++counter;\n            }\n        }\n        return activeRaffles;\n    }\n}\n",
  "sourceMap": "587:25866:20:-:0;;;2085:3;2054:34;;2127:5;2094:38;;2975:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:12;909:18:0;;;;;942:43;;3098:15:20;;3115:20;;665:10:12;;;867:17:0;942:43;;867:17;;942:43;-1:-1:-1;935:5:1;925:15;;-1:-1:-1;;;;925:15:1;;;;1743:22:2;;;-1:-1:-1;;;;;9305:32:17;;;;;9343;;;;;;3147:26:20::1;::::0;;;;3183:18:::1;::::0;;;;-1:-1:-1;;3283:33:20;;:21:::1;-1:-1:-1::0;3283:33:20;;:40;;-1:-1:-1;;3283:40:20::1;::::0;;::::1;::::0;;587:25866;;14:177:25;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;416:9;410:16;400:26;;466:2;455:9;451:18;445:25;435:35;;489:49;534:2;523:9;519:18;489:49;:::i;:::-;479:59;;557:49;602:2;591:9;587:18;557:49;:::i;:::-;547:59;;196:416;;;;;;;:::o;:::-;587:25866:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Raffle.sol",
  "type": "contract"
}